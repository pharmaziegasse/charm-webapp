{"version":3,"sources":["components/molecules/Footer/index.jsx","components/molecules/Navbar/index.jsx","components/pages/customer/Dashboard/index.jsx","components/pages/coach/ReportRevision/index.jsx","components/pages/coach/ReportList/index.jsx","components/pages/coach/Anamnesis/index.jsx","components/pages/coach/CoachDashboard/index.jsx","components/pages/coach/NewCustomer/index.jsx","components/pages/coach/GenerateReport/index.jsx","components/pages/Login/index.jsx","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["Footer","logout","localStorage","removeItem","window","location","href","_this2","this","globalState","props","react_default","a","createElement","mdbreact_esm","color","className","logged","Fragment","coach","md","target","rel","icon","rounded","size","onClick","fab","fluid","Date","getFullYear","React","PureComponent","Navbar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleResize","setState","windowWidth","innerWidth","handleToggleClickA","toggleStateA","state","breakWidth","addEventListener","removeEventListener","triggerOpening","fixed","src","alt","name","id","iconRegular","Component","HomePage","dataRadar","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","dataRadarOptions","responsive","elements","line","tension","legend","display","scale","ticks","beginAtZero","max","min","scales","yAxes","gridLines","drawBorder","xAxes","stepSize","dataRadarPlugins","beforeInit","chart","forEach","e","i","test","split","componentDidMount","document","title","undefined","react_router","to","react","molecules_Navbar","tag","floating","gradient","far","outline","es","options","plugins","toolbarConfig","INLINE_STYLE_BUTTONS","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","ReportRevision","componentWillMount","keys","articles","map","defineProperty","text","RichTextEditor","createValueFromString","createEmptyValue","toggleCollapse","collapseID","getStatus","reviewed","item","count","length","isFinished","onChange","goBack","history","push","console","log","react_router_dom","material","value","height","Math","round","article","key","heading","filled","type","isOpen","react_rte_default","readOnly","disabled","GET_REPORTS","gql","_templateObject","ReportList","user","loading","fetchReports","componentWillUnmount","uid","fetchAllReports","client","query","variables","token","getItem","then","_ref","brLatestByUid","reports","_objectSpread","latest","brByUid","legacy","catch","error","getDate","date","dateS","year","month","getMonth","slice","getHours","getMinutes","getSeconds","_getTable","columns","field","sort","rows","_getBeautyReports","report","visible","pdf","btnTitle","btnColor","textFieldTitle","download","link","actions","userId","showLegacy","_this$props","firstName","lastName","pathname","striped","bordered","small","exportToCSV","paginationLabel","withApollo","GET_FORMS","Anamnesis_templateObject","UPDATE_FORMS","_templateObject2","GET_DATA","_templateObject3","Anamnesis","initialize","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getAnamneseFields","getAnmaneseData","stop","resetButton","success","_ref2","_ref3","anLatestByUid","fD","JSON","parse","formData","res","Anamnesis_objectSpread","formdata","message","sendData","_callee2","formvalues","_context2","urlPath","update","values","urlpath","_ref5","anamneseAnFormPage","page","result","errors","querySelectorAll","parentNode","removeChild","handleError","refNames","refNode","concat","current","refAlert","querySelector","scrollIntoView","__typename","node","elChild","innerHTML","appendChild","_handleChange","_handleCheckBoxChange","checked","_handleCheckBoxesChange","includes","filtered","filter","ele","newCB","_handleSelectChange","_setDefaultValue","defaultValue","fieldType","multiselect","checkboxes","getSelectValues","select","opt","iLen","selected","_handleMultiSelectChange","_handleNumberClick","parseInt","printCheckboxes","choices","n","trim","toLowerCase","replace","printRadio","container","required","printOptions","renderFields","pages","formFields","createRef","previousState","toConsumableArray","ref","htmlFor","helpText","multiple","graphql","CoachDashboard","_getCoachUsers","userdata","userSet","userid","customerId","first","last","email","phone","telephone","beautyreportSet","placement","anamneseSet","countries","countryList","getData","NewCustomer_templateObject","GET_COACHES","NewCustomer_templateObject2","NewCustomer","handleTextChange","handlePhoneChange","country","usePhoneAsCountry","countryCode","toUpperCase","phoneCountry","handlePhoneByCountry","getPickerValue","birthdate","handleSelectChange","handleCountrySelectChange","_fetchAllCountries","allCountries","c","Countries","_fetchAllCoaches","coachAll","coaches","urlPaths","Coaches","el","_createUser","coach_id","first_name","last_name","address","city","postal_code","zip","customer_id","customerid","userUserFormPage","graphQLErrors","x","results","NewCustomer_objectSpread","verified","flushData","getValue","search","lib_default","defaultCountry","preferredCountries","enableSearchField","containerClass","disableFuture","format","initialFocusedDate","valueDefault","keyboard","compose","GET_TEMPLATE","GenerateReport_templateObject","GET_USERDATA","GenerateReport_templateObject2","GET_LINK","GenerateReport_templateObject3","SEND_DATA","_templateObject4","GenerateReport","fetchData","fetchTemplate","template","fetchUserData","_normalizeStatement","condition","_normalizeCondition","_getReturnValue","compareParts","__convertType","__compare","preEscapedCondition","match","escapedCondition","variableName","replacement","Array","isArray","Function","post","operator","getLink","_ref4","doclink","stringify","send","beautyreportBrFormPage","_fetchVariables","variable","dat","datarr","da","createReport","chapters","chapter","ckey","chapterHeader","GenerateReport_objectSpread","subChapters","subChapter","skey","subChapterHeader","sub_chapter_header","paragraphs","paragraph","pkey","statement","operations","preloader","LOGIN_USER","Login_templateObject","USER_BY_EMAIL","Login_templateObject2","USER_BY_PHONE","Login_templateObject3","Login","method","handleChange","handleSubmit","preventDefault","_loginAnonymous","password","mutate","username","tokenAuth","_getUsernameByMethod","handler","_x","_x2","apply","arguments","usernameByPhone","_login","usernameByEmail","_x3","_x4","_callee3","_context3","_ref6","setItem","_x5","handleEmailChange","switchMethod","big","onSubmit","noValidate","inputExtraProps","AuthWithMutation","Routes","handleLogin","status","exact","path","component","Dashboard","assign","pages_Login","coach_Anamnesis","coach_CoachDashboard","coach_NewCustomer","coach_ReportList","coach_GenerateReport","coach_ReportRevision","render","VERIFY_TOKEN","App_templateObject","REFRESH_TOKEN","App_templateObject2","App_templateObject3","App","loaded","flush","_verifyToken","setInterval","_getUserData","userSelf","isCoach","verify","verifyToken","_isLogged","payload","exp","origIat","_notLogged","_setLogged","uname","orig","now","_refeshToken","refresh","refreshToken","src_Routes","molecules_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","__webpack_require__","d","__webpack_exports__","APIHost","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","cache","InMemoryCache","APILink","LINK","HttpLink","uri","headers","authorization","ApolloClient","ReactDOM","react_common_esm","src_App","getElementById","URL","process","origin","fetch","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7ab92837.chunk.js","sourcesContent":["//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\n//import { Link } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBFooter,\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBBtn,\r\n} from 'mdbreact';\r\n\r\nclass Footer extends React.PureComponent{\r\n    logout = () => {\r\n        // Remove the token\r\n        localStorage.removeItem('wca');\r\n        // Redirect to login\r\n        window.location.href = '/login'; \r\n    }\r\n\r\n    render(){\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        return(\r\n            <MDBFooter color=\"unique-darkblue\" className=\"mt-4\">\r\n                <div className=\"py-4\">\r\n                    <MDBContainer>\r\n                    {\r\n                        globalState.logged ? (\r\n                            <>\r\n                                {!globalState.coach ? (\r\n                                        <MDBRow className=\"text-center flex-center\">\r\n                                            <MDBCol md=\"4\">\r\n                                                <a href=\"#!\">Referral Programm</a>\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"4\">\r\n                                                <a href=\"#!\"><MDBIcon fab icon=\"facebook-f\" className=\"pr-2\" /></a>\r\n                                                <a href=\"#!\"><MDBIcon fab icon=\"instagram\" className=\"pl-2\" /></a>\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"4\">\r\n                                                <a href=\"#!\">Fragen? Wir sind für Sie da!</a>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    ) : (\r\n                                        <MDBRow className=\"text-center flex-center\">\r\n                                            <MDBCol md=\"4\">\r\n                                                <a \r\n                                                href=\"https://kisy.aichner-christian.com/?goto=Charm&token=asdf\" \r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                >\r\n                                                <MDBIcon icon=\"medkit\" className=\"pr-2\" />Technischer Support\r\n                                                </a>\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"4\">\r\n                                                <MDBBtn\r\n                                                color=\"white\"\r\n                                                rounded\r\n                                                size=\"md\"\r\n                                                onClick={() => this.logout()}\r\n                                                >\r\n                                                <MDBIcon icon=\"sign-out-alt\" className=\"pr-2\" />Logout\r\n                                                </MDBBtn>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    )\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <p>Noch nicht eingeloggt content</p>\r\n                        )\r\n                    }\r\n                        \r\n                    </MDBContainer>\r\n                </div>\r\n                <div className=\"footer-copyright text-center py-3\">\r\n                    <MDBContainer fluid>\r\n                        &copy; 2018 - {new Date().getFullYear()} Copyright: Pharmaziegasse<sup>®</sup>\r\n                    </MDBContainer>\r\n                </div>\r\n            </MDBFooter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBSideNav,\r\n  MDBSideNavCat,\r\n  MDBSideNavItem,\r\n  MDBSideNavNav,\r\n  MDBIcon,\r\n  MDBAvatar,\r\n} from 'mdbreact';\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        toggleStateA: false,\r\n        breakWidth: 1300,\r\n        windowWidth: 0\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.handleResize();\r\n      window.addEventListener(\"resize\", this.handleResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"resize\", this.handleResize);\r\n    }\r\n\r\n    handleResize = () =>\r\n      this.setState({\r\n        windowWidth: window.innerWidth\r\n      });\r\n\r\n    handleToggleClickA = () => {\r\n      this.setState({\r\n        toggleStateA: !this.state.toggleStateA\r\n      });\r\n    };\r\n\r\n    render(){\r\n      return(\r\n        <>\r\n          <MDBSideNav\r\n            triggerOpening={this.state.toggleStateA}\r\n            breakWidth={this.state.breakWidth}\r\n            fixed\r\n          >\r\n            <MDBAvatar className=\"mx-5 mt-5 mb-3\">\r\n              <img\r\n                src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(20).jpg\"\r\n                alt=\"\"\r\n                className=\"rounded-circle img-fluid\"\r\n              />\r\n            </MDBAvatar>\r\n            <h4 className=\"text-center\">Erika Mustermann</h4>\r\n            <li>\r\n              <ul className=\"social\">\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"facebook-f\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"pinterest\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"google-plus-g\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"twitter\" />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <MDBSideNavNav>\r\n              <MDBSideNavCat\r\n                name=\"Submit blog\"\r\n                id=\"submit-blog-cat\"\r\n                icon=\"chevron-right\"\r\n              >\r\n                <MDBSideNavItem>Submit listing</MDBSideNavItem>\r\n                <MDBSideNavItem>Registration form</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n              <MDBSideNavCat\r\n                iconRegular\r\n                name=\"Instruction\"\r\n                id=\"instruction-cat\"\r\n                icon=\"hand-pointer\"\r\n              >\r\n                <MDBSideNavItem>For bloggers</MDBSideNavItem>\r\n                <MDBSideNavItem>For authors</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n              <MDBSideNavCat name=\"About\" id=\"about-cat\" icon=\"eye\">\r\n                <MDBSideNavItem>Instruction</MDBSideNavItem>\r\n                <MDBSideNavItem>Monthly meetings</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n              <MDBSideNavCat\r\n                name=\"Contact me\"\r\n                id=\"contact-me-cat\"\r\n                icon=\"envelope\"\r\n              >\r\n                <MDBSideNavItem>FAQ</MDBSideNavItem>\r\n                <MDBSideNavItem>Write a message</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n            </MDBSideNavNav>\r\n            <MDBSideNavItem className=\"nav-settings\"><MDBIcon icon=\"cog\" className=\"pr-2\" />Einstellungen</MDBSideNavItem>\r\n          </MDBSideNav>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React, { Fragment } from 'react';\r\n// Link and Redirect from Router\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBBtn,\r\n  MDBAvatar,\r\n  MDBSpinner,\r\n} from 'mdbreact';\r\n// Radar chart\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\n//> Components\r\n/**\r\n * Navbar: User navigation bar\r\n */\r\nimport {\r\n  Navbar,\r\n} from '../../../molecules';\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    dataRadar: {\r\n      labels: [\r\n        'Große Poren',\r\n        'Sensible Haut',\r\n        'Hautalterung',\r\n        'Ölige Haut',\r\n        'Trockene Haut',\r\n        'Unreine Haut',\r\n        'Pigmentflecken',\r\n        'Zeichen\\noxidativen Stresses'\r\n      ],\r\n      datasets: [{\r\n          label: '# of Votes',\r\n          data: [10, 7, 10, 10, 4, 10, 2, 5],\r\n          backgroundColor: [\r\n              'rgba(150, 0, 150, 0.2)',\r\n          ],\r\n          borderColor: [\r\n              'rgba(150, 0, 150, 1)',\r\n          ],\r\n          borderWidth: 1\r\n      }]\r\n    },\r\n    dataRadarOptions: {\r\n        responsive: true,\r\n        elements: {\r\n            line: {\r\n                tension: 0.4\r\n            }\r\n        },\r\n        legend: {\r\n            display: false,\r\n        },\r\n        scale: {\r\n            ticks: {\r\n                beginAtZero: true,\r\n                max: 10,\r\n                min: 0\r\n            }\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                },\r\n                ticks: {\r\n                    display: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                },\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                    stepSize: 1,\r\n                    min: 0,\r\n                    max: 10\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    dataRadarPlugins: [{\r\n        beforeInit: function (chart) {\r\n        chart.data.labels.forEach(function (e, i, a) {\r\n            if (/\\n/.test(e)) {\r\n            a[i] = e.split(/\\n/)\r\n            }\r\n        })\r\n        }\r\n    }]\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Set page title\r\n    document.title = \"Dein individuelles Programm\";\r\n  }\r\n\r\n  render() {\r\n    // Get global state with login information\r\n    const { globalState } = this.props;\r\n\r\n    if(globalState.coach === undefined){\r\n      return (\r\n        <div className=\"w-100 h-100 flex-center\">\r\n          <MDBSpinner />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // Secure page\r\n    if(!globalState.logged) { return (<Redirect to=\"/login\"/>) }\r\n\r\n    if(globalState.logged && globalState.coach) { return (<Redirect to=\"/coach\"/>) }\r\n\r\n    return (\r\n      <Fragment>\r\n      <Navbar />\r\n        <div className=\"support-card\">\r\n          <MDBBtn tag=\"a\" size=\"lg\" floating gradient=\"night-fade\">\r\n            <MDBIcon far icon=\"comments fa-2x\" />\r\n          </MDBBtn>\r\n          <MDBBtn rounded outline color=\"secondary\">Coach kontaktieren</MDBBtn>\r\n        </div>\r\n        <MDBContainer>\r\n          <MDBRow className=\"justify-content-center\">\r\n            <MDBCol md=\"6\">\r\n              <MDBCard className=\"chart-card\">\r\n                <MDBCardBody>\r\n                  <MDBCardTitle className=\"mb-4\">Ihr Hautzustand</MDBCardTitle>\r\n                  <Radar data={this.state.dataRadar} options={this.state.dataRadarOptions} plugins={this.state.dataRadarPlugins} />\r\n                  <MDBCardText className=\"mt-4\">\r\n                    Some quick example text to build on the card title and make\r\n                    up the bulk of the card&apos;s content.\r\n                  </MDBCardText>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol md=\"6\">\r\n              <MDBCard className=\"timeline-card\">\r\n                <MDBCardBody className=\"py-0\">\r\n                  <MDBRow>\r\n                    <div className=\"mdb-feed\">\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(18)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            <a href=\"#!\" className=\"name\">\r\n                              Monika\r\n                            </a> hat Ihr neues Programm <a href=\"#!\">versendet</a>\r\n                            <div className=\"date\">Vor 10 Stunden</div>\r\n                          </div>\r\n                          <div className=\"added-images\">\r\n                            <img\r\n                              src=\"https://pharmaziegasse.at/media/images/IMG_9948.original.jpg\"\r\n                              alt=\"\"\r\n                              className=\"z-depth-1 rounded mb-md-0 mb-2\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(20)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            Sie haben sich die Verbesserungen angesehen\r\n                            <div href=\"#!\" className=\"date\">\r\n                              Vor 14 Stunden\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(18)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            <a href=\"#!\" className=\"name\">\r\n                              Monika\r\n                            </a> hat Ihr Programm verbessert\r\n                            <div className=\"date\">Vor 2 Tagen</div>\r\n                          </div>\r\n                          <div className=\"added-text\">\r\n                            Da Ihre unreine Haut am meisten Potential für Verbesserungen bietet, habe ich Ihr individuelles Programm genau auf Ihre Bedürfnisse hin angepasst.\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(20)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            Sie haben Ihren <a href=\"#!\">Hautzustand</a> aktualisiert\r\n                            <div className=\"date\">Vor 3 Tagen</div>\r\n                          </div>\r\n                          <div className=\"added-images\">\r\n                            <img\r\n                              src=\"https://pixnio.com/free-images/2017/11/30/2017-11-30-18-11-20-1200x800.jpg\"\r\n                              alt=\"\"\r\n                              className=\"z-depth-1 rounded\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <a href=\"!#\">Gesamte Timeline anzeigen</a>\r\n                    </div>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol md=\"10\" className=\"my-5\">\r\n              <MDBCard className=\"coach-card\">\r\n                <MDBCardBody>\r\n                  <MDBRow>\r\n                    <MDBCol md=\"auto pl-5\">\r\n                      <MDBAvatar>\r\n                        <img\r\n                          src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(18).jpg\"\r\n                          alt=\"\"\r\n                          className=\"rounded-circle img-fluid\"\r\n                        />\r\n                      </MDBAvatar>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"align-self-center\">\r\n                      <h4>Monika Mustermann</h4>\r\n                      <p className=\"text-muted m-0\">Ihr persölicher Beauty Coach</p>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"align-self-center text-right pr-5\">\r\n                      <MDBBtn rounded outline color=\"secondary\">Coach kontaktieren</MDBBtn>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Rich-Text Editor\r\nimport RichTextEditor from 'react-rte';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBCollapse,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCollapseHeader,\r\n    MDBProgress,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBIcon,\r\n} from 'mdbreact';\r\n\r\n// Rich Text Box editor config\r\nconst toolbarConfig = {\r\n    display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'LINK_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n    INLINE_STYLE_BUTTONS: [\r\n        {label: 'Bold', style: 'BOLD', className: 'custom-css-class'},\r\n        {label: 'Italic', style: 'ITALIC'},\r\n        {label: 'Underline', style: 'UNDERLINE'}\r\n    ],\r\n    BLOCK_TYPE_DROPDOWN: [\r\n        {label: 'Normal', style: 'unstyled'},\r\n        {label: 'Heading Large', style: 'header-one'},\r\n        {label: 'Heading Medium', style: 'header-two'},\r\n        {label: 'Heading Small', style: 'header-three'}\r\n    ],\r\n    BLOCK_TYPE_BUTTONS: [\r\n        {label: 'UL', style: 'unordered-list-item'},\r\n        {label: 'OL', style: 'ordered-list-item'}\r\n    ]\r\n};\r\n\r\nclass ReportRevision extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            test: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        Object.keys(this.props.location.state.articles).map((name, i) => {\r\n            // Generate states for every section\r\n            this.setState({ [\"collapse\"+i]: true })\r\n            // Text Editor\r\n            if(this.props.location.state.articles[name].text !== \"\" &&\r\n            this.props.location.state.articles[name].text !== undefined){\r\n                // Save current section to text editor\r\n                this.setState({ \r\n                    [\"value\"+i]: RichTextEditor.createValueFromString(\r\n                            this.props.location.state.articles[name].text, 'html'\r\n                        ) \r\n                    })\r\n                return true;\r\n            } else {\r\n                // Create empty value if the section has no text\r\n                this.setState({ [\"value\"+i]: RichTextEditor.createEmptyValue() })\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // Set page title\r\n        document.title = \"Beautyreport Revision\";\r\n    }\r\n\r\n    // Toggle the visibility of the sections\r\n    toggleCollapse = collapseID => () =>\r\n    this.setState({\r\n        [collapseID]: !(this.state[collapseID])\r\n    });\r\n\r\n    // Get how many % of the sections are finished\r\n    getStatus = () => {\r\n        let reviewed = 0;\r\n        Object.keys(this.state).map((item, i) => {\r\n            // Get how many collapse items are reviewed\r\n            if(this.state[item] === false){\r\n                reviewed++;\r\n            }\r\n            return true;\r\n        })\r\n        let count = Object.keys(this.props.location.state.articles).length;\r\n        return (reviewed / count) * 100;\r\n    }\r\n\r\n    // Get if its finished\r\n    isFinished = () => {\r\n        if(this.getStatus() === 100){\r\n            // Is enabled\r\n            return false;\r\n        } else {\r\n            // Is disabled\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Change text in box\r\n    onChange = (i,e) => {\r\n        // e contains the value and additional information about the editor\r\n        this.setState({[\"value\"+i]: e});\r\n    }\r\n\r\n    goBack = () => {\r\n        let path = `../report`;\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n        \r\n        console.log(this.state);\r\n        // Secure this page - Make sure there is an active state\r\n        const { location } = this.props; \r\n        if(location !== undefined){\r\n            if(location.state !== undefined){\r\n                return (\r\n                    <MDBContainer className=\"pt-5\">\r\n                        <h2 className=\"text-center font-weight-bold\">\r\n                        Beautyreport überprüfen\r\n                        </h2>\r\n                        <div className=\"mt-4 mb-3 text-left\">\r\n                            <Link to=\"/report\">\r\n                                <MDBBtn color=\"red\">\r\n                                    <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                                </MDBBtn>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <MDBProgress\r\n                        material\r\n                        color={this.getStatus() === 100 ? (\"success\") : (\"secondary\")}\r\n                        value={this.getStatus()}\r\n                        height=\"20px\">\r\n                        {this.getStatus() > 0 &&\r\n                            <>{Math.round(this.getStatus())}% abgeschlossen</>\r\n                        }\r\n                            \r\n                        </MDBProgress>\r\n                        {Object.keys(location.state.articles).map((name, i) => {\r\n                            let article = location.state.articles[name];\r\n                            return(\r\n                                <MDBCard key={i} className=\"mt-3\">\r\n                                    <MDBCollapseHeader>\r\n                                        <MDBRow className=\"justify-content-center\">\r\n                                            <MDBCol md=\"6\" className=\"align-self-center section-title\">\r\n                                                {article.heading}\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"6\" className=\"text-right\">\r\n                                                <MDBInput\r\n                                                label=\"Überprüft\"\r\n                                                filled\r\n                                                type=\"checkbox\"\r\n                                                id={\"checkbox\"+i}\r\n                                                onClick={this.toggleCollapse(\"collapse\"+i)}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBCollapseHeader>\r\n                                    <MDBCollapse id=\"collapse1\" isOpen={this.state[\"collapse\"+i]}>\r\n                                        <MDBCardBody>\r\n                                            <RichTextEditor\r\n                                                value={this.state[\"value\"+i]}\r\n                                                className=\"textfield\"\r\n                                                onChange={(e) => this.onChange(i, e)}\r\n                                                readOnly={!this.state[\"collapse\"+i]}\r\n                                                toolbarConfig={toolbarConfig}\r\n                                            />\r\n                                        </MDBCardBody>\r\n                                    </MDBCollapse>\r\n                                </MDBCard>\r\n                            )\r\n                        })\r\n                        }\r\n                        <MDBRow className=\"my-4\">\r\n                            <MDBCol md=\"6\" className=\"text-left\">\r\n                                <MDBBtn\r\n                                color=\"danger\"\r\n                                onClick={this.goBack}\r\n                                ><MDBIcon icon=\"times\" className=\"pr-2\" />Verwerfen</MDBBtn>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"6\" className=\"text-right\">\r\n                                <MDBBtn\r\n                                color=\"success\"\r\n                                disabled={this.isFinished()}\r\n                                >\r\n                                <MDBIcon icon=\"save\" className=\"pr-2\" />Speichern\r\n                                </MDBBtn>\r\n                                <MDBBtn\r\n                                color=\"green\"\r\n                                disabled={this.isFinished()}\r\n                                >\r\n                                <MDBIcon far icon=\"file-pdf\" className=\"pr-2\" />Speichern + PDF\r\n                                </MDBBtn>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return <Redirect to=\"/login\"/> \r\n        }\r\n    }\r\n}\r\n\r\nexport default ReportRevision;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Moment.js for time handling\r\n//import moment from 'moment';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBDataTable,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBSpinner,\r\n    MDBFileInput,\r\n    MDBInput,\r\n} from 'mdbreact';\r\n\r\n//> Connection\r\nimport { withApollo } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\n//> CSS\r\nimport './reportlist.scss';\r\n\r\n//> Queries\r\n// Get all beauty reports\r\nconst GET_REPORTS = gql`\r\n    query getBeautyReports_byUid($token: String!, $id: Int!) {\r\n        brByUid(token: $token, uid: $id) {\r\n            __typename\r\n            id\r\n            date\r\n            document{\r\n                __typename\r\n                id\r\n                link\r\n            }\r\n        }\r\n        brLatestByUid(token: $token, uid: $id) {\r\n            __typename\r\n            id\r\n            date\r\n            document{\r\n                __typename\r\n                id\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass ReportList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            userId: undefined,\r\n            reports: {\r\n                latest: undefined,\r\n                legacy: []\r\n            },\r\n            showLegacy: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Beautyreport List\";\r\n        \r\n        if(this.props.location){\r\n            if(this.props.location.state){\r\n                if(this.props.location.state.user.id){\r\n                    this.setState({\r\n                        user: this.props.location.state.user,\r\n                        loading: true\r\n                    }, () => this.fetchReports(this.props.location.state.user.id));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        //clearInterval(this.interval);\r\n    }\r\n\r\n    fetchReports = (uid) => {\r\n        //this.interval = setInterval(() => this.fetchAllReports(uid), 5000);\r\n        // Fetch data required for creating a report\r\n        this.fetchAllReports(uid);\r\n    }\r\n\r\n    fetchAllReports = (uid) => {;\r\n        this.props.client.query({\r\n        query: GET_REPORTS,\r\n        variables: { \"id\": uid, \"token\": localStorage.getItem(\"wca\") }\r\n        }).then(({data}) => {\r\n            if(data.brLatestByUid){\r\n                console.log(\"Data\");\r\n                console.log(data);\r\n                this.setState({\r\n                    reports: { \r\n                        ...this.state.reports,\r\n                        latest: data.brLatestByUid\r\n                    },\r\n                    loading: false\r\n                });\r\n            }\r\n            if(data.brByUid){\r\n                console.log(\"Beautyreports exist for this user\");\r\n                // If there are reports, set dummy data\r\n                this.setState({\r\n                    reports: { \r\n                        ...this.state.reports,\r\n                        legacy: data.brByUid\r\n                    },\r\n                    loading: false\r\n                });\r\n            } else {\r\n                console.log(\"There are no Beautyreports for this user\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                reports: { \r\n                    legacy: [],\r\n                    latest: undefined\r\n                },\r\n                loading: false\r\n            }, () => console.error(\"Error\",error));\r\n        });\r\n    }\r\n    \r\n    getDate = (date) => {\r\n        // Note: Handling dates in JavaScript is like hunting K'lor'slugs on Korriban. A huge waste of time.\r\n        let dateS = new Date(date);\r\n\r\n        // Get the year\r\n        let year = dateS.getFullYear();\r\n        // Get the month ( January is 0! )\r\n        let month = (\"0\" + (dateS.getMonth() + 1)).slice(-2);\r\n        // Get the day of the month\r\n        let day = (\"0\" + (dateS.getDate())).slice(-2);\r\n        //> Time\r\n        // Get hours\r\n        let hours = (\"0\" + (dateS.getHours())).slice(-2);\r\n        // Get minutes\r\n        let minutes = (\"0\" + (dateS.getMinutes())).slice(-2);\r\n        // Get minutes\r\n        let seconds = (\"0\" + (dateS.getSeconds())).slice(-2);\r\n\r\n        /**\r\n         * Combine to achieve YYYY-MM-DD format like Captain Planet.\r\n         * LET OUR POWERS COMBINE!\r\n         * You certainly feel like Captain Planet when you get it to work.\r\n         */ \r\n        return day+\".\"+month+\".\"+year+\" \"+hours+\":\"+minutes+\":\"+seconds;\r\n    }\r\n\r\n    _getTable = () => {\r\n        return({\r\n                columns: [\r\n            {\r\n                label: '#',\r\n                field: 'id',\r\n                sort: 'desc'\r\n            },\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'Visible',\r\n                field: 'visible',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'PDF Upload',\r\n                field: 'pdf',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Download',\r\n                field: 'download',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Quick actions',\r\n                field: 'actions',\r\n                sort: 'disabled'\r\n            }\r\n        ],\r\n        rows: this._getBeautyReports()\r\n        })\r\n    }\r\n\r\n    _getBeautyReports = () => {\r\n        let reports = this.state.reports.legacy.map((report, i) => {\r\n            return({\r\n                'id': i+1,\r\n                'date': this.getDate(report.date),\r\n                'visible': <MDBInput \r\n                            label=\"Für Kunden sichtbar\"\r\n                            filled\r\n                            type=\"checkbox\"\r\n                            disabled\r\n                            id={\"show_latest_\"+i}\r\n                            />,\r\n                'pdf': <MDBFileInput\r\n                        btnTitle=\"File auswählen\"\r\n                        btnColor=\"purple\"\r\n                        textFieldTitle=\"Lade das PDF hoch\"\r\n                        />,\r\n                'download': <>\r\n                {report.document !== null ? (\r\n                    <a\r\n                    href={\"https://manage.pharmaziegasse.at/\"+report.document.link}\r\n                    >\r\n                        <MDBBtn \r\n                        size=\"md\"\r\n                        color=\"primary\"\r\n                        >\r\n                            <MDBIcon \r\n                            icon=\"file-word\"\r\n                            className=\"pr-2\"\r\n                            />\r\n                            Download\r\n                        </MDBBtn>\r\n                    </a>\r\n                ) : (\r\n                    <p>No download</p>\r\n                )}\r\n                            </>,\r\n                'actions': <MDBBtn \r\n                            size=\"md\"\r\n                            color=\"danger\"\r\n                            disabled\r\n                            >\r\n                                <MDBIcon \r\n                                icon=\"trashcan\"\r\n                                className=\"pr-2\"\r\n                                />\r\n                                Remove\r\n                            </MDBBtn>\r\n            });\r\n        });\r\n        return reports;\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState, location } = this.props;\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n        \r\n        if(!location.state) return <Redirect to=\"/coach\"/>\r\n\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <MDBContainer className=\"text-center pt-5\" id=\"reportlist\">\r\n                <h2 className=\"text-center font-weight-bold\">\r\n                Beautyreports von {location.state.user.firstName + \" \" + location.state.user.lastName}\r\n                </h2>\r\n                <div className=\"mt-4\">\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\" className=\"text-left\">\r\n                        <Link to=\"/coach\">\r\n                            <MDBBtn color=\"red\">\r\n                                <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\" className=\"text-right\">\r\n                        <Link \r\n                        to={{\r\n                        pathname: '/report/add',\r\n                        state: {\r\n                            user: this.props.location.state.user\r\n                        }\r\n                        }}\r\n                        >\r\n                            <MDBBtn\r\n                            color=\"secondary\"\r\n                            rounded\r\n                            >\r\n                            <MDBIcon icon=\"plus\" className=\"pr-2\" />Neuen Report generieren\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                    \r\n                </div>\r\n                {!this.state.loading ? (\r\n                    <div className=\"mt-4\">\r\n                        <MDBRow className=\"flex-center mb-4\">\r\n                            <MDBCol md=\"6\">\r\n                                <MDBCard>\r\n                                {this.state.reports.latest ? (\r\n                                    <MDBCardBody className=\"active-report\">\r\n                                        <p className=\"lead font-weight-bold\">Neuester Beautyreport</p>\r\n                                        <small>{this.getDate(this.state.reports.latest.date)}</small>\r\n                                        <p className=\"lead mt-3 mb-2\">Download</p>\r\n                                        {this.state.reports.latest.document &&\r\n                                            <a\r\n                                            href={\r\n                                                \"https://manage.pharmaziegasse.at/\"+\r\n                                                this.state.reports.latest.document.link\r\n                                            }\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            >\r\n                                            <MDBBtn color=\"primary\" className=\"d-block m-auto\">\r\n                                                <MDBIcon icon=\"file-word\" className=\"pr-2\"/>MS Word\r\n                                            </MDBBtn>\r\n                                            </a>\r\n                                        }\r\n                                        \r\n                                        <hr/>\r\n                                        <p className=\"lead my-3\">Neuste Version hochladen</p>\r\n                                        <MDBFileInput\r\n                                        btnTitle=\"File auswählen\"\r\n                                        btnColor=\"purple\"\r\n                                        textFieldTitle=\"Lade das neueste PDF hoch\"\r\n                                        />\r\n                                        <p className=\"lead mt-3\">Aktuelle Version</p>\r\n                                        <small>Hochgeladen: 19.09.2019 12:42:22</small>\r\n                                        <MDBBtn color=\"red\" disabled className=\"d-block mt-3 ml-auto mr-auto\">\r\n                                            <MDBIcon icon=\"file-pdf\" className=\"pr-2\"/>PDF anzeigen\r\n                                        </MDBBtn>\r\n                                        <MDBInput \r\n                                        disabled\r\n                                        label=\"Für Kunden sichtbar\"\r\n                                        filled\r\n                                        type=\"checkbox\"\r\n                                        id=\"show_latest\"\r\n                                        />\r\n                                    </MDBCardBody>\r\n                                ) : (\r\n                                    null\r\n                                )}\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        \r\n                        {this.state.reports.legacy.length >= 1 ? \r\n                        (\r\n                            <>\r\n                                {this.state.showLegacy ? (\r\n                                    <MDBDataTable\r\n                                    striped\r\n                                    bordered\r\n                                    small\r\n                                    exportToCSV\r\n                                    data={this._getTable()}\r\n                                    paginationLabel={[\r\n                                        <MDBIcon icon=\"angle-left\" size=\"lg\" className=\"pl-3 pr-3\" />,\r\n                                        <MDBIcon icon=\"angle-right\" size=\"lg\" className=\"pl-3 pr-3\" />\r\n                                    ]}\r\n                                    />\r\n                                ) : (\r\n                                    <span\r\n                                    onClick={() => {this.setState({showLegacy: true})}}\r\n                                    className=\"blue-text clickable\"\r\n                                    >\r\n                                    Ältere Versionen anzeigen\r\n                                    </span>\r\n                                )}\r\n                                \r\n                            </>\r\n                        ) : (\r\n                            <h3>Noch kein Beauty-Report vorhanden</h3>\r\n                        )\r\n                        }\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-center w-100 h-100\">\r\n                        <MDBSpinner/>\r\n                    </div>\r\n                )}\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withApollo(ReportList);\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBFormInline,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBSpinner,\r\n} from 'mdbreact';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport gql from 'graphql-tag';\r\n\r\n//> CSS\r\nimport './anamnesis.scss';\r\n\r\n//> Queries\r\n// Get forms\r\nconst GET_FORMS = gql`\r\n    query getAnamneseFields($token: String!) {\r\n        pages (token: $token) {\r\n            ... on AnamneseAnFormPage {\r\n                urlPath\r\n                formFields {\r\n                    name\r\n                    fieldType\r\n                    helpText\r\n                    required\r\n                    choices\r\n                    defaultValue\r\n                    label\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Update data\r\nconst UPDATE_FORMS = gql`\r\n    mutation createAn ($token: String!, $values: GenericScalar!, $urlpath: String!) {\r\n        anamneseAnFormPage(\r\n            token: $token,\r\n            url: $urlpath,\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n                name\r\n                errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get anamnesis data\r\nconst GET_DATA = gql`\r\n    query getAnamneseData_byUid($token: String!, $id: Int!) {\r\n        anLatestByUid(token: $token, uid: $id) {\r\n            id\r\n            date\r\n            formData\r\n            user {\r\n                id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass Anamnesis extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            urlPath: undefined,\r\n            errors: [],\r\n            refNames: [],\r\n            data: undefined,\r\n            user: undefined,\r\n            success: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Anamnese\";\r\n        \r\n        // Set user variable\r\n        const user = this.props.location.state.user;\r\n        if(!this.state.user){\r\n            this.setState({\r\n                user: user\r\n            }, () => this.initialize());\r\n        }\r\n    }\r\n\r\n    initialize = async () => {\r\n        // Get the types and names of the anamnesis fields\r\n        this.getAnamneseFields();\r\n        // Get the actual user data (if existant)\r\n        this.getAnmaneseData();\r\n    }\r\n\r\n    resetButton = () => {\r\n        // Get the button back to the initial state ready for submit\r\n        if(this.state.success){\r\n            this.setState({\r\n                success: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    getAnamneseFields = () => {\r\n        this.props.client.query({\r\n        query: GET_FORMS,\r\n        variables: { \"token\": localStorage.getItem('wca') }\r\n        }).then(({data}) => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                data: false\r\n            }, () => console.error(error));\r\n        });\r\n    }\r\n\r\n    getAnmaneseData = () => {\r\n        console.log(this.state.user);\r\n        this.props.client.query({\r\n        query: GET_DATA,\r\n        variables: { \r\n            \"token\": localStorage.getItem('wca'),\r\n            \"id\": this.state.user.id\r\n        }\r\n        }).then(({data}) => {\r\n            console.log(data);\r\n            if(data.anLatestByUid){\r\n                let fD = JSON.parse(data.anLatestByUid.formData);\r\n                let res = {};\r\n                // Convert null to undefined\r\n                Object.keys(fD).map((field, i) => {\r\n                    res = {\r\n                        ...res,\r\n                        [field]: fD[field] !== null ? fD[field] : undefined\r\n                    }\r\n                    return i;\r\n                });\r\n                this.setState({\r\n                    ...this.state,\r\n                    ...res\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                formdata: false\r\n            }, () => console.log(error.message));\r\n        });\r\n    }\r\n\r\n    sendData = async () => {\r\n        // Set values that will be set\r\n        // Normalize data\r\n        let formvalues = {\r\n            ...this.state\r\n        };\r\n        // Check if the form values have been set\r\n        if(formvalues !== null && formvalues !== undefined && this.state.urlPath !== undefined){\r\n            // Call graphQL mutation\r\n            await this.props.update({\r\n                variables: {\r\n                    \"token\": localStorage.getItem('wca'),\r\n                    \"values\": formvalues,\r\n                    \"urlpath\": this.state.urlPath\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                console.log(data);\r\n                if(data){\r\n                    if(data.anamneseAnFormPage){\r\n                        let page = data.anamneseAnFormPage;\r\n                        if(page.result === \"OK\"){\r\n                            console.log(\"Sent\");\r\n                            this.setState({\r\n                                success: true,\r\n                                errors: [],\r\n                            });\r\n                            // Remove all error messages\r\n                            [].forEach.call(document.querySelectorAll('.alert-error'),function(e){\r\n                                e.parentNode.removeChild(e);\r\n                            });\r\n                        } else if(page.result === \"FAIL\"){\r\n                            console.log(\"Error\");\r\n                            // Write error messages\r\n                            this.setState({\r\n                                success: false,\r\n                            }, () => this.handleError(page.errors));\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Mutation error:\",error);\r\n            })\r\n        }\r\n    };\r\n\r\n    handleError = (errors) => {\r\n        // Clear all previous errors\r\n        this.state.refNames.map((item, i) => {\r\n            const refNode = this[`${item}_ref`].current;\r\n            //refNode.parentNode.removeChild(refNode);\r\n            let refAlert = refNode.querySelector('.alert');\r\n            if(refAlert !== null){\r\n                refNode.removeChild(refAlert);\r\n            }\r\n            return true;\r\n        });\r\n\r\n        if(errors !== undefined){\r\n            if(errors.length >= 1){\r\n                this[`${errors[0].name}_ref`].current.scrollIntoView();\r\n                errors.map((error, i) => {\r\n                    if(error.__typename === \"FormError\"){\r\n                        const node = this[`${error.name}_ref`].current;\r\n                        let elChild = document.createElement('div');\r\n                        elChild.className = 'alert alert-danger alert-error mt-2';\r\n                        elChild.innerHTML = `<i class=\"fa fa-angle-up pr-2\"></i>${error.errors[0]}`;\r\n                        node.appendChild(elChild);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    _handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _handleCheckBoxChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked \r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _handleCheckBoxesChange = (e, name, label) => {\r\n        // Get current active checkboxes\r\n        let current = this.state[name];\r\n        // Check if there currently are active checkboxes\r\n        if(current !== undefined){\r\n            if(current.includes(label)){\r\n                // Remove\r\n                let filtered = current.filter(function(ele){\r\n                    // eslint-disable-next-line\r\n                    return ele != label;\r\n                });\r\n                // Update state\r\n                this.setState({\r\n                    [name]: filtered\r\n                }, () => this.resetButton());\r\n            } else {\r\n                // Add to array\r\n                current.push(label);\r\n                // Update state\r\n                this.setState({\r\n                    [name]: current\r\n                }, () => this.resetButton());\r\n            }\r\n        } else {\r\n            // No active checkboxes - we can only add to the state\r\n            let newCB = [label];\r\n            this.setState({\r\n                [name]: newCB\r\n            }, () => this.resetButton());\r\n        }\r\n    }\r\n\r\n    _handleSelectChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _setDefaultValue = (item, i) => {\r\n        if(item.defaultValue !== \"\" && item.defaultValue !== undefined){\r\n            // CHeck if the state is currently empty - to prevent over writing\r\n            if(this.state[item.fieldType] === undefined\r\n            || this.state[item.fieldType] === \"\" \r\n            || this.state[item.fieldType] === null){\r\n                switch(item.fieldType){\r\n                    case 'multiselect':\r\n                        let multiselect = [];\r\n                        if(item.defaultValue.includes(', ')){\r\n                            multiselect = item.defaultValue.split(', ');\r\n                        } else {\r\n                            multiselect = [item.defaultValue]\r\n                        }\r\n                        if(!this.state[item.name]){\r\n                            this.setState({\r\n                                [item.name]: multiselect\r\n                            })\r\n                        }\r\n                        break;\r\n                    case 'checkboxes':\r\n                        let checkboxes = [];\r\n                        if(item.defaultValue.includes(', ')){\r\n                            checkboxes = item.defaultValue.split(', ');\r\n                        } else {\r\n                            checkboxes = [item.defaultValue]\r\n                        }\r\n                        if(this.state[item.name] === null || this.state[item.name] === undefined){\r\n                            this.setState({\r\n                                [item.name]: checkboxes\r\n                            });\r\n                        }\r\n                        break;\r\n                    case 'checkbox':\r\n                        if(!this.state[item.name]){\r\n                            if(item.defaultValue){\r\n                                this.setState({\r\n                                    [item.name]: true\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    [item.name]: false\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if(!this.state[item.name]){\r\n                            this.setState({\r\n                                [item.name]: item.defaultValue\r\n                            });\r\n                        }\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    getSelectValues = (select) => {\r\n        var result = [];\r\n        var options = select && select.options;\r\n        var opt;\r\n\r\n        for (var i=0, iLen=options.length; i<iLen; i++) {\r\n            opt = options[i];\r\n\r\n            if (opt.selected) {\r\n            result.push(opt.value || opt.text);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    _handleMultiSelectChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: this.getSelectValues(e.target)\r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _handleNumberClick = (name, type) => {\r\n        // Check if state is empty\r\n        if(this.state[name]){\r\n            this.setState({\r\n                [name] : parseInt(this.state[name],10) + parseInt(type,10)\r\n            }, () => this.resetButton());\r\n        } else {\r\n            this.setState({\r\n                [name] : 0 + parseInt(type,10)\r\n            }, () => this.resetButton());\r\n        }\r\n    }\r\n\r\n    printCheckboxes = (item, i) => {\r\n        let arr = item.choices.split(',');\r\n        return arr.map((name, key) => {\r\n            let n = name.trim().toLowerCase().replace(/ /g,'');\r\n            let display = name.trim();\r\n                return(\r\n                    <MDBInput\r\n                    key={key}\r\n                    checked={this.state[item.name] && this.state[item.name].includes(display) ? (true) : (false)}\r\n                    name={n}\r\n                    onChange={(e) => this._handleCheckBoxesChange(e, item.name, display)}\r\n                    label={display}\r\n                    filled\r\n                    type=\"checkbox\"\r\n                    id={\"fromGroupInput\"+i+\"\"+key}\r\n                    />\r\n                );\r\n        });\r\n    }\r\n\r\n    printRadio = (choices, container, required, i) => {\r\n        let arr = choices.split(',');\r\n        return arr.map((name, key) => {\r\n            let n = name.trim().toLowerCase().replace(/ /g,'');\r\n            let display = name.trim();\r\n            return(\r\n                <MDBInput\r\n                onClick={() => this.setState({[container]: display})}\r\n                checked={this.state[container] && this.state[container] === display ? true : false}\r\n                label={display}\r\n                key={key}\r\n                name={n}\r\n                type=\"radio\"\r\n                id={\"radio\"+i+\"\"+key}\r\n                required={required}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    printOptions = (choices, i) => {\r\n        let arr = choices.split(',');\r\n        return arr.map((name, key) => {\r\n            //let n = name.trim().toLowerCase().replace(/ /g,'');\r\n            let display = name.trim();\r\n            return(\r\n                <option key={key} value={display}>{display}</option>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderFields = () => {\r\n        let data = this.state.data;\r\n\r\n        // Loading\r\n        if (data === undefined) {\r\n            console.log(\"Loading\");\r\n            return (<div className=\"text-center\"><MDBSpinner /></div>);\r\n        }\r\n        // Error\r\n        if (data === false) {\r\n            return (<div>Error!</div>);\r\n        }\r\n\r\n        if(data !== undefined){\r\n            if(data.pages !== undefined){\r\n                // Get key\r\n                let key = undefined;\r\n                data.pages.map((item, i) => {\r\n                    if(item.__typename === \"AnamneseAnFormPage\"){\r\n                        key = i;\r\n                    }\r\n                    return true;\r\n                });\r\n                \r\n                // Check if the FormPage exists\r\n                if(key !== undefined){\r\n                    // Set urlpath (where to send data)\r\n                    if(this.state.urlPath === undefined){\r\n                        this.setState({\r\n                            urlPath: data.pages[key].urlPath\r\n                        });\r\n                    }\r\n\r\n                    let formfields = data.pages[key].formFields;\r\n                    \r\n                    return formfields.map((item, i) => {\r\n                        this[`${item.name}_ref`] = React.createRef();\r\n\r\n                        // Debugging\r\n                        //console.log(item);\r\n\r\n                        // Store the names of all items for refs\r\n                        if(!this.state.refNames.includes(item.name)){\r\n                            this.setState(previousState => ({\r\n                                refNames: [...previousState.refNames, item.name]\r\n                            }));\r\n                        }\r\n\r\n                        this._setDefaultValue(item, i);\r\n                        switch(item.fieldType.toLowerCase()){\r\n                            case \"singleline\":\r\n                                // TEXT Input\r\n                                return(\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group my-3\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                        {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state[item.name]}\r\n                                            onChange={this._handleChange}\r\n                                            name={item.name}\r\n                                            className=\"form-control\"\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            required={item.required}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            case \"hidden\":\r\n                                // HIDDEN Input\r\n                                return(\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group my-3 d-none\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                        {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state[item.name]}\r\n                                            name={item.name}\r\n                                            className=\"form-control\"\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            case \"number\":\r\n                                // NUMBER Input\r\n                                return(\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <div\r\n                                        className=\"\r\n                                        def-number-input\r\n                                        number-input\r\n                                        mb-3\"\r\n                                        >\r\n                                            <button\r\n                                            onClick={() => this._handleNumberClick(item.name,-1)}\r\n                                            className=\"minus\">\r\n                                            </button>\r\n                                            <input\r\n                                            name={item.name}\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            value={this.state[item.name]}\r\n                                            onChange={this._handleChange}\r\n                                            type=\"number\"\r\n                                            />\r\n                                            <button\r\n                                            onClick={() => this._handleNumberClick(item.name,1)}\r\n                                            className=\"plus\">\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            case \"checkbox\":\r\n                                // CHECKBOX Input\r\n                                return(\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <MDBInput\r\n                                        checked={this.state[item.name]}\r\n                                        name={item.name}\r\n                                        onChange={this._handleCheckBoxChange}\r\n                                        label={item.label && item.label}\r\n                                        filled\r\n                                        type=\"checkbox\"\r\n                                        id={\"fromGroupInput\"+i}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            case \"checkboxes\":\r\n                                // CHECKBOXES Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                            <MDBFormInline>\r\n                                            {this.printCheckboxes(item, i)}\r\n                                            </MDBFormInline>\r\n                                    </div>\r\n                                );\r\n                            case \"dropdown\":\r\n                                // SELECT Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <div>\r\n                                            <select\r\n                                            name={item.name}\r\n                                            selected={this.state[item.name]}\r\n                                            onChange={this._handleSelectChange}\r\n                                            className=\"browser-default custom-select\">\r\n                                            <option>Choose your option</option>\r\n                                            {this.printOptions(item.choices, i)}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            case \"multiselect\":\r\n                                // MULTI SELECT Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <div>\r\n                                            <select\r\n                                            multiple name={item.name}\r\n                                            selected={this.state[item.name]}\r\n                                            onChange={this._handleMultiSelectChange}\r\n                                            className=\"browser-default custom-select\"\r\n                                            >\r\n                                            <option>Choose your option</option>\r\n                                            {this.printOptions(item.choices, i)}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            case \"radio\":\r\n                                // RADIO Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <MDBFormInline>\r\n                                            {this.printRadio(\r\n                                                item.choices,\r\n                                                item.name,\r\n                                                item.required,\r\n                                                i\r\n                                            )}\r\n                                        </MDBFormInline>\r\n                                    </div>\r\n                                );\r\n                            case \"multiline\":\r\n                                // MULTILINE TEXT Input\r\n                                return (\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <textarea\r\n                                        className=\"form-control\"\r\n                                        value={this.state[item.name]}\r\n                                        onChange={this._handleChange}\r\n                                        name={item.name}\r\n                                        id={\"fromGroupInput\"+i}\r\n                                        rows=\"5\"\r\n                                        required={item.required}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            default:\r\n                                return(\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                        {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state[item.name]}\r\n                                            onChange={this._handleChange}\r\n                                            name={item.name}\r\n                                            className=\"form-control\"\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            required={item.required}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    });\r\n                }else {\r\n                    return null;\r\n                }\r\n                \r\n            }else {\r\n                return null;  \r\n            }\r\n        }else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState, location } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n        // Check if the state has been set in the parent component\r\n        if(location.state === undefined){\r\n            return <Redirect to=\"/coach\"/> \r\n        } else {\r\n            if(location.state.user === undefined){\r\n                return <Redirect to=\"/coach\"/> \r\n            }\r\n        }\r\n\r\n        if(!this.state.user){\r\n            return(\r\n                <div className=\"text-center\"><MDBSpinner /></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <MDBContainer id=\"anamnesis\" className=\"text-left pt-5\">\r\n                    <h2 className=\"mb-5 text-center\">Anamnese für{\" \"}\r\n                    {this.state.user.firstName+\" \"+this.state.user.lastName}\r\n                    </h2>\r\n                    <div className=\"text-left mt-4\">\r\n                        <Link to=\"/coach\">\r\n                            <MDBBtn color=\"red\">\r\n                                <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </div>\r\n                    <MDBRow className=\"mb-4\">\r\n                        <MDBCol md=\"8\">\r\n                            {this.renderFields()}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                    {!this.state.success ? (\r\n                        <MDBBtn\r\n                        color=\"secondary\"\r\n                        onClick={this.sendData}\r\n                        >\r\n                            <MDBIcon icon=\"save\" className=\"pr-2\" />\r\n                            Speichern\r\n                        </MDBBtn>\r\n                    ) : (\r\n                        <MDBBtn\r\n                        color=\"success\"\r\n                        disabled\r\n                        >\r\n                            <MDBIcon icon=\"check\" className=\"pr-2\" />\r\n                            Gespeichert\r\n                        </MDBBtn>\r\n                    )}\r\n                </MDBContainer>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default graphql(UPDATE_FORMS, {\r\n    name: 'update'\r\n})(withApollo(Anamnesis));\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBDataTable,\r\n    MDBTooltip,\r\n} from 'mdbreact';\r\n\r\n//> CSS\r\nimport './coachdashboard.scss';\r\n\r\nclass CoachDashboard extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Your customers\";\r\n    }\r\n\r\n    _getCoachUsers = () => {\r\n        if(this.props.globalState){\r\n            if(this.props.globalState.userdata){\r\n                let userSet = this.props.globalState.userdata.userSet;\r\n                if(userSet.length >= 1){\r\n                    let users = userSet.map((user, i) => {\r\n                        return({\r\n                            'id': i+1,\r\n                            'userid': user.customerId,\r\n                            'first': user.firstName,\r\n                            'last': user.lastName,\r\n                            'email': <a href={\"mailto:\"+user.email} className=\"blue-text\">{user.email}</a>,\r\n                            'phone': user.telephone,\r\n                            'actions':\r\n                            <div className=\"user-action\">\r\n                                {user.beautyreportSet.length >= 1 ? (\r\n                                    <Link \r\n                                    to={{\r\n                                    pathname: '/report',\r\n                                    state: {\r\n                                        user: user\r\n                                    }\r\n                                    }}\r\n                                    >\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn rounded outline color=\"green\">\r\n                                            <MDBIcon icon=\"signature\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Beautyreports einsehen\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    </Link>\r\n                                ) : (\r\n                                    <Link \r\n                                    to={{\r\n                                    pathname: '/report/add',\r\n                                    state: {\r\n                                        user: user\r\n                                    }\r\n                                    }}\r\n                                    >\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn rounded outline color=\"danger\">\r\n                                            <MDBIcon icon=\"signature\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Beautyreport erstellen\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    </Link>\r\n                                )}\r\n                                <Link \r\n                                to={{\r\n                                pathname: '/anamnesis',\r\n                                state: {\r\n                                    user: user\r\n                                }\r\n                                }}\r\n                                >\r\n                                {\r\n                                    user.anamneseSet.length >= 1 ? (\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn outline rounded color=\"purple\">\r\n                                                <MDBIcon icon=\"file\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Anamnese erneuern\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    ) : (\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn outline rounded color=\"danger\">\r\n                                                <MDBIcon far icon=\"file\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Anamnese hinzufügen\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    )\r\n                                }\r\n                                </Link>\r\n                                <MDBTooltip\r\n                                    placement=\"top\"\r\n                                >\r\n                                <MDBBtn\r\n                                href={\"https://api.whatsapp.com/send?phone=\"+user.telephone.replace('+','')}\r\n                                target=\"_blank\"\r\n                                className={true === false ? \"btn-whatsapp-chat notification\" : \"btn-whatsapp-chat\"}\r\n                                outline\r\n                                rounded\r\n                                color=\"success\"\r\n                                >\r\n                                    <MDBIcon fab icon=\"whatsapp\" size=\"lg\" />\r\n                                </MDBBtn>\r\n                                <div>\r\n                                    Mit {user.firstName} chatten\r\n                                </div>\r\n                                </MDBTooltip>\r\n                            </div>\r\n                        })\r\n                    });\r\n                    return users;\r\n                } else {\r\n                    console.log(\"No users for this coach\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTable = () => {\r\n        return({\r\n                columns: [\r\n            {\r\n                label: '#',\r\n                field: 'id',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'Customer ID',\r\n                field: 'userid',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'First',\r\n                field: 'first',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'Last',\r\n                field: 'last',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'E-Mail',\r\n                field: 'email',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Phone',\r\n                field: 'phone',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Quick actions',\r\n                field: 'actions',\r\n                sort: 'disabled'\r\n            }\r\n        ],\r\n        rows: this._getCoachUsers()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n        return(\r\n            <MDBContainer id=\"coach\" className=\"pt-5\">\r\n                <h2 className=\"text-center font-weight-bold\">\r\n                Willkommen zurück, <span>{globalState.userdata.firstName}</span>!\r\n                </h2>\r\n                <div className=\"mt-4 mb-3 text-right\">\r\n                    <Link to=\"/add\">\r\n                        <MDBBtn color=\"green\">\r\n                            <MDBIcon icon=\"plus-circle\" className=\"pr-2\" />Add customer\r\n                        </MDBBtn>\r\n                    </Link>\r\n                </div>\r\n                <MDBRow className=\"text-center\">\r\n                    <MDBCol md=\"12\">\r\n                        <h3>Deine KundInnen</h3>\r\n                        <div className=\"table-labels\">\r\n                        <span><MDBIcon icon=\"cube\" className=\"pr-1 pl-3 red-text\"/>Keine Daten vorhanden</span>\r\n                        <span><MDBIcon icon=\"cube\" className=\"pr-1 pl-3 purple-text\"/>Keine Aktion erforderlich</span>\r\n                        <span><MDBIcon icon=\"cube\" className=\"pr-1 pl-3 green-text\"/>Daten optimal</span>\r\n                        </div>\r\n                        <MDBDataTable\r\n                        striped\r\n                        bordered\r\n                        small\r\n                        exportToCSV\r\n                        data={this._getTable()}\r\n                        paginationLabel={[\r\n                            <MDBIcon icon=\"angle-left\" size=\"lg\" className=\"pl-3 pr-3\" />,\r\n                            <MDBIcon icon=\"angle-right\" size=\"lg\" className=\"pl-3 pr-3\" />\r\n                        ]}\r\n                        />\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\">\r\n\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\">\r\n\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CoachDashboard;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Phone input\r\nimport ReactPhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/dist/style.css';\r\n// Country list\r\nimport countryList from 'react-select-country-list';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport * as compose from 'lodash.flowright';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBDatePicker,\r\n    MDBSelect,\r\n    MDBSpinner,\r\n    MDBAlert,\r\n} from 'mdbreact';\r\n\r\n//> CSS\r\nimport './newcustomer.scss';\r\n\r\n// Country list\r\nconst countries = countryList().getData();\r\n\r\n// Update data\r\nconst UPDATE_FORMS = gql`\r\n    mutation createUser ($token: String!, $urlPath: String!, $values: GenericScalar!) {\r\n        userUserFormPage(\r\n            token: $token,\r\n            url: $urlPath,\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_COACHES = gql`\r\n    query ($token: String!) {\r\n        coachAll(token: $token) {\r\n            id\r\n            firstName\r\n            lastName\r\n        }\r\n        pages (token: $token) {\r\n            ... on UserUserFormPage {\r\n                urlPath\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass NewCustomer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            coach: [],\r\n            verified: false,\r\n            title: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            birthdate: \"\",\r\n            phone: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            zip: \"\",\r\n            country: \"\",\r\n            Coaches: [],\r\n            Countries: [],\r\n            usePhoneAsCountry: true,\r\n            phoneCountry: [],\r\n            urlPath: undefined,\r\n            error: false,\r\n            success: false,\r\n            errors: {},\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._fetchAllCoaches();\r\n        this._fetchAllCountries();\r\n\r\n        // Set page title\r\n        document.title = \"New Customer\";\r\n    }\r\n    \r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handlePhoneChange = (value, country) => {\r\n        // Remove spaces from phone number\r\n        value = value.replace(/\\s/g,'');\r\n        if(this.state.usePhoneAsCountry){\r\n            this.setState({\r\n                phone: value.trim(),\r\n                country: {\r\n                    name: country.name,\r\n                    countryCode: country.countryCode.toUpperCase()\r\n                },\r\n                phoneCountry: {\r\n                    name: country.name,\r\n                    countryCode: country.countryCode.toUpperCase()\r\n                },\r\n            });\r\n        } else {\r\n            this.setState({\r\n                phone: value.trim(),\r\n                phoneCountry: {\r\n                    name: country.name,\r\n                    countryCode: country.countryCode.toUpperCase()\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePhoneByCountry = (e) => {\r\n        if(e.target.checked){\r\n            this.setState({ \r\n                usePhoneAsCountry: e.target.checked,\r\n                country: this.state.phoneCountry\r\n            });\r\n        } else {\r\n            this.setState({ \r\n                usePhoneAsCountry: e.target.checked,\r\n                country: []\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    getPickerValue = (value) => {\r\n        // Note: Handling dates in JavaScript is like hunting K'lor'slugs on Korriban. A huge waste of time.\r\n        let dateS = new Date(value);\r\n\r\n        // Get the year\r\n        let year = dateS.getFullYear();\r\n        // Get the month ( January is 0! )\r\n        let month = (\"0\" + (dateS.getMonth() + 1)).slice(-2);\r\n        // Get the day of the month\r\n        let day = (\"0\" + (dateS.getDate())).slice(-2);\r\n\r\n        /**\r\n         * Combine to achieve YYYY-MM-DD format like Captain Planet.\r\n         * LET OUR POWERS COMBINE!\r\n         * You certainly feel like Captain Planet when you get it to work.\r\n         */ \r\n        let date = year+\"-\"+month+\"-\"+day;\r\n\r\n        this.setState({\r\n            birthdate: date\r\n        });\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({\r\n            coach: value\r\n        });\r\n    }\r\n\r\n    handleCountrySelectChange = (value) => {\r\n        this.setState({\r\n            country: {\r\n                name: \"\",\r\n                countryCode: value[0]\r\n            }\r\n        });\r\n    }\r\n\r\n    _fetchAllCountries = () => {\r\n        let allCountries = countries.map((c, i) => {\r\n            return({\r\n                text: c.label,\r\n                value: c.value\r\n            });\r\n        });\r\n        this.setState({\r\n            Countries: allCountries\r\n        });\r\n    }\r\n\r\n    _fetchAllCoaches = async () => {\r\n        this.props.client.query({\r\n        query: GET_COACHES,\r\n        variables: { \"token\": localStorage.getItem(\"wca\") }\r\n        }).then(({data}) => {\r\n            if(data.coachAll){\r\n                let coaches = data.coachAll.map((coach, i) => {\r\n                    return({\r\n                        text: coach.firstName + \" \" + coach.lastName,\r\n                        value: coach.id\r\n                    });\r\n                });\r\n                let urlPaths = data.pages.map((page, i) => {\r\n                    if(page.urlPath !== undefined){\r\n                        if(page.__typename === \"UserUserFormPage\"){\r\n                            return page.urlPath;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n                this.setState({\r\n                    Coaches: coaches,\r\n                    urlPath: urlPaths.filter(function(el) { return el; })\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error\",error);\r\n        })\r\n    }\r\n\r\n    _createUser = () => {\r\n        if(this.state.phone.trim() !== \"\" && this.state.coach.length >= 1  ){\r\n            \r\n            // Get all values and prepare them for API handling\r\n            const values = {\r\n                \"title\": this.state.title,\r\n                \"coach_id\": this.state.coach[0],\r\n                \"first_name\": this.state.firstName,\r\n                \"last_name\": this.state.lastName,\r\n                \"email\": this.state.email,\r\n                \"birthdate\": this.state.birthdate,\r\n                \"telephone\": this.state.phone,\r\n                \"address\": this.state.address,\r\n                \"city\": this.state.city,\r\n                \"postal_code\": this.state.zip,\r\n                \"country\": this.state.country.countryCode,\r\n                \"customer_id\": this.state.customerid\r\n            }\r\n\r\n            let urlPath = this.state.urlPath[0];\r\n\r\n            if(\r\n                urlPath &&\r\n                this.state.coach[0] &&\r\n                this.state.firstName &&\r\n                this.state.lastName\r\n            ){\r\n                this.setState({\r\n                    loading: true,\r\n                    errors: {}\r\n                });\r\n                this.props.update({\r\n                    variables: { \r\n                        \"token\": localStorage.getItem(\"wca\"),\r\n                        \"urlPath\": urlPath,\r\n                        \"values\": values\r\n                    }\r\n                }).then(({data}) => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if(data.userUserFormPage.result === \"OK\"){\r\n                        this.setState({\r\n                            errors: {},\r\n                            success: true\r\n                        });\r\n                    } else if (data.userUserFormPage.result === \"FAIL\"){\r\n                        console.log(\"Errors\",data.userUserFormPage.errors);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if(error){\r\n                        console.log(error.graphQLErrors.map(x => x.message));\r\n                        let errors = error.graphQLErrors;\r\n\r\n                        let results = {};\r\n                        errors.map((x) => {\r\n                            //let msg = JSON.parse(x.message);\r\n                            console.log(x);\r\n                            if(x.message.includes(\"'telephone'\")){\r\n                                results = {\r\n                                    telephone: true,\r\n                                }\r\n                            }\r\n                            return true;\r\n                        })\r\n\r\n                        console.log(results);\r\n\r\n                        if(results){\r\n                            this.setState({\r\n                                errors: {\r\n                                    ...this.state.errors,\r\n                                    ...results,\r\n                                },\r\n                                loading: false,\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            //console.log(values);\r\n\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    required: true,\r\n                },\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n        console.log(this.state);\r\n\r\n        return(\r\n            <MDBContainer id=\"newcustomer\" className=\"pt-5\">\r\n                <h2 className=\"text-center font-weight-bold\">Create customer</h2>\r\n                <div className=\"text-left mt-4\">\r\n                    <Link to=\"/coach\" onClick={this.props.flushData}>\r\n                        <MDBBtn color=\"red\">\r\n                            <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                        </MDBBtn>\r\n                    </Link>\r\n                </div>\r\n                { this.state.success ? (\r\n                    <div className=\"w-100 h-100 flex-center\">\r\n                        <h2 className=\"green-text text-center\"><MDBIcon icon=\"check\"/><br/>Customer created</h2>\r\n                    </div>\r\n                ) : (\r\n                    <MDBRow className=\"flex-center mt-4 text-center\">\r\n                        { this.state.error &&\r\n                            <MDBCol md=\"7\">\r\n                                <MDBAlert color=\"danger\">\r\n                                    <p className=\"lead\">Sie haben einige Pflichtfelder nicht ausgefüllt.</p>\r\n                                    <p>Bitte füllen Sie mindestens alle Felder, welche \r\n                                    mit <strong>*</strong> gekennzeichnet sind aus.</p>\r\n                                </MDBAlert>\r\n                            </MDBCol>\r\n                        }\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Name</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4 flex-center\">\r\n                            <MDBCol md=\"3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"cus\">Kunden ID</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"customerid\"\r\n                                        value={this.state.customerid}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"cus\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"1\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tit\">Titel</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"tit\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstN\">Vorname<span>*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={this.state.firstName}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"firstN\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastN\">Nachname<span>*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"lastN\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Coach</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <MDBSelect\r\n                            options={this.state.Coaches}\r\n                            className=\"select-coach\"\r\n                            label={<>Coach<span>*</span></>}\r\n                            getValue={this.handleSelectChange}\r\n                            search\r\n                            required\r\n                            />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Kontaktdaten</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"ema\">E-Mail</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"ema\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <label htmlFor=\"pho\">Telefon Nummer<span>*</span></label>\r\n                            <ReactPhoneInput\r\n                            defaultCountry={'at'}\r\n                            preferredCountries={['at','de','ch']}\r\n                            value={this.state.phone}\r\n                            onChange={this.handlePhoneChange}\r\n                            enableSearchField={true}\r\n                            containerClass=\"mb-3 react-tel-input\"\r\n                            required\r\n                            />\r\n                            <MDBInput\r\n                            label=\"Land aus Telefon Nummer\"\r\n                            filled\r\n                            onChange={(e => this.handlePhoneByCountry(e))}\r\n                            checked={this.state.usePhoneAsCountry}\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox-country-in-phone\"\r\n                            />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Wohnort</h4>\r\n                        </MDBCol>\r\n                        { !this.state.usePhoneAsCountry &&\r\n                            <MDBCol md=\"3\">\r\n                                <MDBSelect\r\n                                options={this.state.Countries}\r\n                                className=\"select-countries\"\r\n                                label=\"Land\"\r\n                                getValue={this.handleCountrySelectChange}\r\n                                search\r\n                                required\r\n                                />\r\n                            </MDBCol>\r\n                        }\r\n                            <MDBCol md=\"2\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ema\">Postleitzahl (PLZ)</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"zip\"\r\n                                        value={this.state.zip}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"plz\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ema\">Stadt</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"city\"\r\n                                        value={this.state.city}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"cit\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ema\">Adresse</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"address\"\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"adr\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Weitere daten</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"pho\">Geburtsdatum</label>\r\n                                <MDBDatePicker \r\n                                value={this.state.birthdate}\r\n                                className=\"date-picker\"\r\n                                getValue={this.getPickerValue}\r\n                                disableFuture={true}\r\n                                format='DD.MM.YYYY'\r\n                                initialFocusedDate=\"01.01.1980\"\r\n                                valueDefault={null}\r\n                                keyboard\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                ) }\r\n                <div className=\"text-center\">\r\n                {this.state.errors && this.state.errors.required &&\r\n                    <div>\r\n                    <small className=\"text-danger\">\r\n                        <MDBIcon icon=\"exclamation-triangle\" className=\"text-danger pr-2\" />\r\n                        Pflichtfelder sind noch nicht ausgefüllt.<br/>\r\n                        <span className=\"text-muted\">\r\n                            Hinweis: Pflichtfelder sind mit einem\r\n                            <span className=\"text-danger\"> * </span>\r\n                            versehen.\r\n                        </span>\r\n                    </small>\r\n                    </div>\r\n                }\r\n                {this.state.errors && this.state.errors.telephone &&\r\n                    <div>\r\n                    <small className=\"text-danger\">\r\n                        <MDBIcon icon=\"exclamation-triangle\" className=\"text-danger pr-2\" />\r\n                        Es existiert bereits ein Nutzer mit dieser Telefonnummer.<br/>\r\n                        <span className=\"text-muted\">\r\n                            Hinweis: Der Kunde existiert vermutlich bereits.<br/>\r\n                            Bitte wenden Sie sich an den Supervisor.\r\n                        </span>\r\n                    </small>\r\n                    </div>\r\n                }\r\n                { !this.state.success &&\r\n                    <>\r\n                        { !this.state.loading ? (\r\n                            <MDBBtn\r\n                            color=\"green\"\r\n                            onClick={() => this._createUser()}\r\n                            >\r\n                            <MDBIcon icon=\"check\" className=\"pr-2\" />Erstellen\r\n                            </MDBBtn>\r\n                        ) : (\r\n                            <MDBSpinner />\r\n                        ) }\r\n                    </>\r\n                }\r\n                \r\n                </div>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_FORMS, { name: 'update' }),\r\n)(withApollo(NewCustomer));\r\n\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBAlert,\r\n    MDBProgress,\r\n    MDBSpinner,\r\n} from 'mdbreact';\r\n\r\n//> Connection\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport * as compose from 'lodash.flowright';\r\n\r\n//> Queries\r\n// Get template\r\nconst GET_TEMPLATE = gql`\r\n    query getTemplate($token: String!) {\r\n        pages(token: $token) {\r\n            ... on ReportsReportsPage {\r\n                id\r\n                chapters{\r\n                    __typename\r\n                    ... on Reports_S_ChapterBlock{\r\n                        chapterHeader\r\n                        subChapters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        pages(token: $token) {\r\n            ... on BeautyreportBrFormPage {\r\n                urlPath\r\n                formFields {\r\n                    name\r\n                    fieldType        \r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get user anamnsesis data\r\nconst GET_USERDATA = gql`\r\n    query getAnamneseData_byUid($token: String!, $id: Int!) {\r\n        anLatestByUid(token: $token, uid: $id) {\r\n            id\r\n            date\r\n            formData\r\n            user {\r\n                id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get document link\r\nconst GET_LINK = gql`\r\n    query getlink($token: String!, $id: Int!) {\r\n        brLatestByUid(token: $token, uid: $id) {\r\n            __typename\r\n            id\r\n            document{\r\n                __typename\r\n                id\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Send\r\nconst SEND_DATA = gql`\r\n    mutation sendbr (\r\n        $token: String!\r\n        $urlPath: String!\r\n        $values: GenericScalar!\r\n    ){\r\n        beautyreportBrFormPage(\r\n            token: $token\r\n            url: $urlPath\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n                errors\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//> Eslint settings\r\n// Disable certain things needed for the generation of the report to work\r\n/* eslint-disable array-callback-return, eqeqeq, no-unused-vars, array-callback-return */\r\n\r\nclass GenerateReport extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            template: undefined,\r\n            userdata: undefined,\r\n            result: {},\r\n            loading: false,\r\n            operations: 0,\r\n            userId: undefined,\r\n            error: undefined,\r\n            doclink: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Generate Report\";\r\n\r\n        if(this.props.location){\r\n            if(this.props.location.state){\r\n                if(this.props.location.state.user.id){\r\n                    this.setState({\r\n                        user: this.props.location.state.user,\r\n                        loading: true\r\n                    }, () => this.fetchData());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchTemplate = () => {\r\n        this.props.client.query({\r\n            query: GET_TEMPLATE,\r\n            variables: { \"token\": localStorage.getItem(\"wca\") }\r\n        }).then(({data}) => {\r\n            if(data.pages !== undefined){\r\n                let template = undefined;\r\n                let urlPath = undefined;\r\n                data.pages.map((page, i) => {\r\n                    if(page.__typename === \"ReportsReportsPage\"){\r\n                        template = data.pages[i];\r\n                    }\r\n                    if(page.__typename === \"BeautyreportBrFormPage\"){\r\n                        urlPath = data.pages[i].urlPath\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({\r\n                    template: template,\r\n                    urlPath: urlPath\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Query error:\",error);\r\n        })\r\n    }\r\n\r\n    fetchUserData = async () => {\r\n        await this.props.client.query({\r\n            query: GET_USERDATA,\r\n            variables: { \"token\": localStorage.getItem(\"wca\"), \"id\": this.state.user.id }\r\n        }).then(({data}) => {\r\n            if(data.anLatestByUid !== undefined){\r\n                this.setState({\r\n                    userdata: data.anLatestByUid\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Query error:\",error);\r\n        })\r\n    }\r\n\r\n    fetchData = () => {\r\n        // Check if there is anamnesis data\r\n        if(this.state.user.anamneseSet.length >= 1){\r\n            // Fetch data required for creating a report\r\n            this.fetchTemplate();\r\n            this.fetchUserData();\r\n        }\r\n    }\r\n\r\n    _normalizeStatement = (condition, key) => {\r\n        \r\n        // Get user anamnesis data\r\n        let formData = this.state.userdata.formData;\r\n\r\n        //console.log(condition);\r\n        \r\n        // Check if there is a condition\r\n        if(condition.trim() !== \"\"){\r\n            // Parse user data to JS Object\r\n            let data = JSON.parse(formData);\r\n\r\n            // Check if there are multiple conditions\r\n            if(!condition.includes(', ')){\r\n                // There is only one condition\r\n                return this._normalizeCondition(condition, data);\r\n            } else {\r\n                // There are multiple conditions\r\n                let conditions = condition.split(', ');\r\n                // For each condition\r\n                let results = conditions.map((condition, i) => {\r\n                    return this._normalizeCondition(condition, data);\r\n                });\r\n                // Check if one of the conditions returned false\r\n                if(results.includes(false)){\r\n                    // The AND condition block is false\r\n                    return false;\r\n                } else {\r\n                    // The AND condition block is true\r\n                    return true;\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    _getReturnValue = (item, condition) => {\r\n        // If its a string\r\n        if(typeof item == \"string\"){\r\n            item = item.replace(/\\s/g, '_');\r\n        }\r\n        // If it's an object\r\n        if(typeof item == \"object\"){\r\n            item = item[0].replace(/\\s/g, '_');\r\n        }\r\n\r\n        let condNew = condition.replace(/^\\S+/g, item);\r\n\r\n        let condNewPure = condNew.replace(/\"/g,'');\r\n        \r\n        let compareParts = condNewPure.split(' ');\r\n\r\n        if(this.__convertType(compareParts[0]) === null || this.__convertType(compareParts[0]) === undefined){\r\n            return false;\r\n        } else {\r\n            return this.__compare(this.__convertType(compareParts[0]), compareParts[1], compareParts[2]);\r\n        }\r\n    }\r\n\r\n    _normalizeCondition = (condition, data) => {\r\n        // Get the string between quotes\r\n        let preEscapedCondition = condition.match(/\"(.*?)\"/g);\r\n        // If it's not empty\r\n        if(preEscapedCondition !== null){\r\n            // Replace all blanks with an underscore\r\n            let escapedCondition = preEscapedCondition[0].replace(/\\s/g, '_');\r\n            // Replace the string between quotes with the escaped string (with underscores)\r\n            condition = condition.replace(/\"(.*?)\"/g,escapedCondition);\r\n        }\r\n\r\n        let variableName = condition.replace(/ .*/,'').toLowerCase();\r\n        variableName = variableName.replace(/ä/g, 'a');\r\n        variableName = variableName.replace(/ö/g, 'o');\r\n        variableName = variableName.replace(/ü/g, 'u');\r\n        variableName = variableName.replace(/ß/g, 'ss');\r\n\r\n        // Replace the first word with the value of the corresponding word ( age > 50 => 3 > 50 )\r\n        let replacement = this.__convertType(data[variableName]);\r\n\r\n        // Debugging\r\n        //console.log(condition, replacement, variableName);\r\n        \r\n        if(replacement !== undefined){\r\n            if(Array.isArray(replacement)){\r\n                let repl = replacement.map((item, i) => {\r\n                    return this._getReturnValue(item, condition);\r\n                });\r\n                if(repl.includes(true)){\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return this._getReturnValue(replacement, condition);\r\n            }\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    // convertType('null'); => null\r\n    __convertType = (value) => {\r\n        try {\r\n            return (new Function(\"return \" + value + \";\"))(); // eslint-disable-line\r\n        } catch(e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    // compare(5, '<', 10); // true\r\n    __compare = (post, operator, value) => {\r\n        switch (operator) {\r\n            case '>':   return post > parseInt(value);\r\n            case '<':   return post < parseInt(value);\r\n            case '>=':  return post >= parseInt(value);\r\n            case '<=':  return post <= parseInt(value);\r\n            case '==':  return post == value;\r\n            case '!=':  return post != value;\r\n            case '===': return post === value;\r\n            case '!==': return post !== value;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    getLink = () => {\r\n        console.log(\"User ID\",this.props.location.state.user.id);\r\n        this.props.client.query({\r\n            query: GET_LINK,\r\n            variables: { \r\n                \"token\": localStorage.getItem(\"wca\"),\r\n                \"id\": this.props.location.state.user.id\r\n            }\r\n        }).then(({data}) => {\r\n            console.log(\"User Data\");\r\n            console.log(data);\r\n            if(data){\r\n                if(data.brLatestByUid){\r\n                    this.setState({\r\n                        doclink: \"https://manage.pharmaziegasse.at/\"+data.brLatestByUid.document.link\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Query error:\",error);\r\n        })\r\n    }\r\n\r\n    sendData = (result) => {\r\n        let values = {\r\n            \"uid\": this.state.user.id,\r\n            \"data\": JSON.stringify(result)\r\n        }\r\n        this.props.send({\r\n            variables: { \r\n                \"token\": localStorage.getItem(\"wca\"),\r\n                \"urlPath\": this.state.urlPath,\r\n                \"values\": values\r\n            }\r\n        }).then(({data}) => {\r\n            if(data.beautyreportBrFormPage.result === \"OK\"){\r\n                this.setState({\r\n                    loading: false,\r\n                    error: undefined\r\n                }, () => this.getLink());\r\n            } else if(data.beautyreportBrFormPage.result === \"FAIL\") {\r\n                this.setState({\r\n                    loading: false,\r\n                    error: data.beautyreportBrFormPage.errors\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            this.setState({\r\n                loading: false,\r\n                error: error\r\n            });\r\n        })\r\n    }\r\n\r\n    _fetchVariables = (text) => {\r\n        // Check if the text has variables\r\n        if(text.includes(\"{{\") && text.includes(\"}}\")){\r\n\r\n            let formData = this.state.userdata.formData;\r\n            let data = JSON.parse(formData);\r\n\r\n            let variables = text.match(/{{(.*?)}}/g);\r\n\r\n            //console.log(data);\r\n\r\n            // Replace the variable with the value\r\n            variables.map((variable, i) => {\r\n                let variableName = variable.replace(/{{|}}/g,'').toLowerCase();\r\n                variableName = variableName.replace(/ä/g, 'a');\r\n                variableName = variableName.replace(/ö/g, 'o');\r\n                variableName = variableName.replace(/ü/g, 'u');\r\n                variableName = variableName.replace(/ß/g, 'ss');\r\n                let dat = data[variableName];\r\n                let result = dat;\r\n                if(Array.isArray(dat)){\r\n                    let datarr = \"\";\r\n                    dat.map((da, i) => {\r\n                        if(dat.length > 1){\r\n                            datarr += dat[i];\r\n                            if(dat.length - 1 !== i){\r\n                                datarr += \", \";\r\n                            }\r\n                        } else {\r\n                            datarr += dat[i];\r\n                        }\r\n                    })\r\n                    result = datarr;\r\n                }\r\n                text = text.replace(variable, result);\r\n            });\r\n\r\n            return text;\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    createReport = () => {\r\n        // Set variables\r\n        let template = this.state.template;\r\n        let result = undefined;\r\n\r\n        // For each chapter\r\n        template.chapters.map((chapter, ckey) => {\r\n            //> Extract useful information from chapter\r\n            // Header\r\n            let chapterHeader = this._fetchVariables(chapter.chapterHeader);\r\n\r\n            // Create header items in object\r\n            if(result){\r\n                result = {\r\n                    ...result,\r\n                    [\"chapter\"+ckey]: {\r\n                        ...result[\"chapter\"+ckey],\r\n                        chapterHeader: chapterHeader\r\n                    }\r\n                }\r\n            } else {\r\n                result = {\r\n                    [\"chapter\"+ckey]: {\r\n                        chapterHeader: chapterHeader\r\n                    }\r\n                }\r\n            }\r\n            \r\n            //console.log(chapterHeader);\r\n\r\n            // For each subchapter\r\n            chapter.subChapters.map((subChapter, skey) => {\r\n\r\n                //> Extract useful information from subchapter\r\n                // Header\r\n                let subChapterHeader = this._fetchVariables(subChapter.value.sub_chapter_header);\r\n\r\n                // Create sub header items in object\r\n                result = {\r\n                    ...result,\r\n                    [\"chapter\"+ckey]: {\r\n                        ...result[\"chapter\"+ckey],\r\n                        [\"subchapter\"+skey]: {\r\n                            ...result[\"chapter\"+ckey][\"subchapter\"+skey],\r\n                            subChapterHeader: subChapterHeader\r\n                        }\r\n                    }\r\n                }\r\n                //console.log(subChapterHeader);\r\n\r\n                // For each paragraph\r\n                subChapter.value.paragraphs.map((paragraph, pkey) => {\r\n\r\n                    //> Extract useful information from paragraph\r\n                    // Statement\r\n                    let statement = paragraph.value.statement;\r\n                    // Text\r\n                    let text = this._fetchVariables(paragraph.value.paragraph);\r\n\r\n                    // Debugging\r\n                    //console.log(statement)\r\n                    \r\n                    if(statement !== \"\"){\r\n                        let statementResult = this._normalizeStatement(statement);\r\n\r\n                        // Debugging\r\n                        //console.log(statementResult);\r\n\r\n                        if(statementResult){\r\n                            // Create paragraph items in object\r\n                            result = {\r\n                                ...result,\r\n                                [\"chapter\"+ckey]: {\r\n                                    ...result[\"chapter\"+ckey],\r\n                                    [\"subchapter\"+skey]: {\r\n                                        ...result[\"chapter\"+ckey][\"subchapter\"+skey],\r\n                                        [\"paragraph\"+pkey]: {\r\n                                            ...result[\"chapter\"+ckey][\"subchapter\"+skey][\"paragraph\"+pkey],\r\n                                            text: text\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = {\r\n                            ...result,\r\n                            [\"chapter\"+ckey]: {\r\n                                ...result[\"chapter\"+ckey],\r\n                                [\"subchapter\"+skey]: {\r\n                                    ...result[\"chapter\"+ckey][\"subchapter\"+skey],\r\n                                    [\"paragraph\"+pkey]: {\r\n                                        ...result[\"chapter\"+ckey][\"subchapter\"+skey][\"paragraph\"+pkey],\r\n                                        text: text\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    \r\n\r\n                    //console.log(text);\r\n                    // Check if finished\r\n                    if(\r\n                        ckey + 1 === template.chapters.length  && \r\n                        skey + 1 === chapter.subChapters.length && \r\n                        pkey + 1 === subChapter.value.paragraphs.length \r\n                    ){\r\n                        // Finished\r\n                        this.sendData(result);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState, location } = this.props;\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n        \r\n        if(!location.state) return <Redirect to=\"/coach\"/>\r\n        \r\n        // Check if the data has been set\r\n        if(\r\n            this.state.template !== undefined && \r\n            this.state.userdata !== undefined && \r\n            this.state.loading\r\n        ){\r\n            this.createReport();\r\n        }\r\n\r\n        return (\r\n            <MDBContainer className=\"text-center pt-5\">\r\n                <h2 className=\"text-center font-weight-bold\">\r\n                Beautyreport erstellen\r\n                </h2>\r\n                <div className=\"mt-4\">\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\" className=\"text-left\">\r\n                            <Link \r\n                            onClick={this.props.flushData}\r\n                            to={{\r\n                            pathname: '/report',\r\n                            state: {\r\n                                user: location.state.user\r\n                            }\r\n                            }}\r\n                            >\r\n                                <MDBBtn color=\"red\">\r\n                                    <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                                </MDBBtn>\r\n                            </Link>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </div>\r\n                <MDBRow className=\"flex-center mt-4\">\r\n                        <MDBCol md=\"6\">\r\n                        { !this.state.error ? (\r\n                            <MDBCard>\r\n                            { this.state.user && this.state.user.anamneseSet.length >= 1 ? (\r\n                                <MDBCardBody>\r\n                                    { this.state.loading ? (\r\n                                        <>\r\n                                            <MDBProgress material preloader />\r\n                                            \r\n                                            <p className=\"lead\">Beautyreport wird erstellt...</p>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            { true === false &&\r\n                                            <>\r\n                                                <MDBAlert color=\"danger\">\r\n                                                    <p>Qualitäts-Kontrolle ausstehend!</p>\r\n                                                    <MDBBtn color=\"danger\" size=\"md\" rounded>\r\n                                                        Jetzt kontrollieren\r\n                                                    </MDBBtn>\r\n                                                </MDBAlert>\r\n                                                <MDBAlert color=\"success\">\r\n                                                    <p><MDBIcon icon=\"check\" className=\"pr-2\"/>Von Christian \r\n                                                    Aichner kontrolliert</p>\r\n                                                </MDBAlert>\r\n                                            </>\r\n                                            }\r\n                                            <MDBAlert color=\"success\" className=\"mb-4\">\r\n                                                <p>\r\n                                                <MDBIcon\r\n                                                icon=\"check\"\r\n                                                className=\"pr-2\"\r\n                                                />\r\n                                                Beautyreport erstellt und gespeichert!\r\n                                                </p>\r\n                                            </MDBAlert>\r\n                                            <p className=\"lead\">Download als</p>\r\n                                            {this.state.doclink ? (\r\n                                                <>\r\n                                                    <a\r\n                                                    href={this.state.doclink}\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    >\r\n                                                    <MDBBtn color=\"primary\">\r\n                                                        <MDBIcon icon=\"file-word\" className=\"pr-2\"/>Word\r\n                                                    </MDBBtn>\r\n                                                    </a>\r\n                                                </>\r\n                                            ) : (\r\n                                                <MDBSpinner />\r\n                                            )}\r\n                                        </>\r\n                                    ) }\r\n                                </MDBCardBody>\r\n                            ) : (\r\n                                <MDBCardBody>\r\n                                    <MDBAlert color=\"info\" className=\"mb-0\">\r\n                                        <p className=\"lead\">Es wurden keine Anamnesedaten gefunden!</p>\r\n                                        <p className=\"mb-3\">Möglicherweiße wurden die Daten des Anamnese-Gesprächs \r\n                                        noch nicht in Charm übertragen.</p>\r\n                                        <Link \r\n                                        to={{\r\n                                        pathname: '/anamnesis',\r\n                                        state: {\r\n                                            user: this.state.user\r\n                                        }\r\n                                        }}\r\n                                        >\r\n                                            <MDBBtn color=\"info\" size=\"md\" rounded>\r\n                                                Anamnesedaten eintragen\r\n                                            </MDBBtn>\r\n                                        </Link>\r\n                                    </MDBAlert>\r\n                                </MDBCardBody>\r\n                            )}\r\n                            </MDBCard>\r\n                        ) : (\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    {this.state.error.length >= 1 ? (\r\n                                        <>\r\n                                        {this.state.error.map((error, i) => {\r\n                                            return(\r\n                                                <MDBAlert key={i} color=\"danger\">\r\n                                                    {error.errors[0]}\r\n                                                </MDBAlert>\r\n                                            )\r\n                                        })}\r\n                                        </>\r\n                                    ) : (\r\n                                        <MDBAlert color=\"danger\">\r\n                                            <p>\r\n                                                Ein unerwarteter Fehler ist aufgetreten. Bitte kontaktieren \r\n                                                Sie den Support der Werbeagentur Christian Aichner.\r\n                                            </p>\r\n                                            <p className=\"pt-3\">\r\n                                                <a\r\n                                                href=\"mailto:support@aichner-christian.com\"\r\n                                                >\r\n                                                support@aichner-christian.com\r\n                                                </a>\r\n                                                <br/>\r\n                                                oder\r\n                                                <br/>\r\n                                                +43 681 20502754\r\n                                            </p>\r\n                                        </MDBAlert>\r\n                                    )\r\n                                    }\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        )}\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(SEND_DATA, { name: 'send' }),\r\n)(withApollo(GenerateReport));\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Link and Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBEdgeHeader,\r\n    MDBFreeBird,\r\n    MDBCol,\r\n    MDBRow,\r\n    MDBCardBody,\r\n    MDBBtn,\r\n    MDBAlert,\r\n    MDBIcon,\r\n    MDBSpinner,\r\n} from \"mdbreact\";\r\n\r\n//> Additional libraries\r\n// Phone input\r\nimport ReactPhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/dist/style.css';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\n\r\n//> CSS\r\nimport './login.scss';\r\n\r\n//> Queries and Mutations\r\nconst LOGIN_USER = gql`\r\n    mutation tokenAuth($username: String!, $password: String!){\r\n        tokenAuth(username: $username, password: $password) {\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nconst USER_BY_EMAIL = gql`\r\n    query(\r\n        $token: String!\r\n        $email: String!\r\n    ) {\r\n        usernameByEmail(\r\n            token: $token,\r\n            email: $email\r\n        )\r\n    }\r\n`;\r\n\r\nconst USER_BY_PHONE = gql`\r\n    query(\r\n        $token: String!\r\n        $phone: String!\r\n    ) {\r\n        usernameByPhone(\r\n        token: $token,\r\n        phone: $phone\r\n        )\r\n    }\r\n`;\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            phone: \"\",\r\n            password: \"\",\r\n            method: 'email',\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        // Set page title\r\n        document.title = \"Login\";\r\n\r\n        let method = localStorage.getItem('method');\r\n        if(method){\r\n            this.setState({\r\n                method: method\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.type]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        // Prevent page from reloading\r\n        e.preventDefault();\r\n        // Validation\r\n        e.target.className = \"needs-validation was-validated\";\r\n\r\n        this._loginAnonymous(\"+436643409980\", \"admin\");\r\n    }\r\n\r\n    _loginAnonymous = async (phone, password) => {\r\n\r\n        await this.props.mutate({ variables: { \"username\": \"simon\", \"password\": \"admin\" } })\r\n        .then(({ loading, data }) => {\r\n            console.log(data);\r\n            if(data !== undefined){\r\n                if(data.tokenAuth !== undefined){\r\n                    if(data.tokenAuth.token !== undefined){\r\n                        \r\n                        if(this.state.method === 'phone'){\r\n                            this._getUsernameByMethod(data.tokenAuth.token, 'phone');\r\n                        } else {\r\n                            this._getUsernameByMethod(data.tokenAuth.token, 'email');\r\n                        }\r\n                        \r\n                        //localStorage.setItem('wca',data.tokenAuth.token);\r\n                        //this.props.handler(true);\r\n                    }\r\n                }\r\n            }\r\n        }).catch((loading, error) => {\r\n            // Username or password is wrong\r\n            this.props.handler(false);\r\n        });\r\n    };\r\n\r\n    _getUsernameByMethod = async (token, method) => {\r\n        let variables = {};\r\n        let query = undefined;\r\n\r\n        if(method === 'phone'){\r\n            variables = { \r\n                \"token\": token,\r\n                \"phone\": this.state.phone\r\n            }\r\n            query = USER_BY_PHONE;\r\n        } else {\r\n            variables = {\r\n                \"token\": token,\r\n                \"email\": this.state.email\r\n            }\r\n            query = USER_BY_EMAIL;\r\n        }\r\n\r\n        await this.props.client.query({\r\n            query: query,\r\n            variables: variables\r\n        }).then(({data}) => {\r\n            console.log(data);\r\n            if(method === 'phone'){\r\n                if(data.usernameByPhone !== undefined){\r\n                    this._login(data.usernameByPhone);\r\n                }\r\n            } else {\r\n                if(data.usernameByEmail !== undefined){\r\n                    this._login(data.usernameByEmail);\r\n                }\r\n            }\r\n            \r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                error: true,\r\n                loading: false\r\n            }, () => this.props.handler(false));\r\n        })\r\n    }\r\n\r\n    _login = async (username) => {\r\n        await this.props.mutate({ variables: { \"username\": username, \"password\": this.state.password } })\r\n        .then(({ loading, data }) => {\r\n            if(data !== undefined){\r\n                if(data.tokenAuth !== undefined){\r\n                    if(data.tokenAuth.token !== undefined){\r\n                        localStorage.setItem('wca',data.tokenAuth.token);\r\n                        // Remove error message, but keep it loading\r\n                        this.setState({\r\n                            error: false,\r\n                        }, () => this.props.handler(true));\r\n                    }\r\n                }\r\n            }\r\n        }).catch((loading, error) => {\r\n            // Username or password is wrong\r\n            this.setState({\r\n                error: true,\r\n                loading: false\r\n            }, () => this.props.handler(false));\r\n        });\r\n    }\r\n\r\n    handlePhoneChange = (value) => {\r\n        if(this.state.method === 'phone'){\r\n            value = value.replace(/\\s/g,'');\r\n            if(this.state.email === \"\"){\r\n                this.setState({\r\n                    phone: value.trim()\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    phone: value.trim(),\r\n                    email: \"\"\r\n                });\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    handleEmailChange = (e) => {\r\n        if(this.state.method === 'email'){\r\n            if(this.state.phone === \"\"){\r\n                this.setState({\r\n                    email: e.target.value\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    email: e.target.value,\r\n                    phone: \"\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    switchMethod = (method) => {\r\n        // Update state and set method\r\n        this.setState({\r\n            method: method\r\n        }, () => localStorage.setItem('method',method));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        /**\r\n         * Redirect to Dashboard\r\n         * If user is already logged in, redirect to Dashboard\r\n         * This doubles as a neat way to redirect the user directly after login\r\n         */\r\n        if(globalState.logged){\r\n            return <Redirect to=\"/dashboard\"/> \r\n        } \r\n\r\n        return (\r\n        <div>\r\n            <MDBEdgeHeader color=\"secondary-color lighten-3\" />\r\n            <MDBFreeBird id=\"login\">\r\n                <MDBRow>\r\n                    <MDBCol\r\n                    md=\"10\"\r\n                    className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n                    >\r\n                        <MDBCardBody>\r\n                            <MDBRow className=\"flex-center\">\r\n                            {this.state.loading ? (\r\n                                <MDBCol md=\"12\" className=\"py-5 text-center\">\r\n                                    <MDBSpinner big />\r\n                                </MDBCol>\r\n                            ) : (\r\n                                <MDBCol md=\"6\">\r\n                                    {this.state.error &&\r\n                                        <MDBAlert color=\"danger\" className=\"text-center\">\r\n                                            Die eingegebene Kombination existiert nicht.\r\n                                        </MDBAlert>\r\n                                    }\r\n                                    \r\n                                    <form onSubmit={this.handleSubmit} className=\"needs-validation\" noValidate>\r\n                                        <p className=\"h4 text-center mb-4\">Einloggen</p>\r\n                                        {this.state.method === 'email' ? (\r\n                                            <>\r\n                                                <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                                                Deine E-Mail Adresse\r\n                                                </label>\r\n                                                <input\r\n                                                type=\"email\"\r\n                                                id=\"defaultFormLoginEmailEx\"\r\n                                                className=\"form-control\"\r\n                                                value={this.state.email}\r\n                                                onChange={this.handleEmailChange}\r\n                                                required\r\n                                                />\r\n                                                <div className=\"invalid-feedback\">\r\n                                                    Bitte gib deine E-Mail Adresse an.\r\n                                                </div>\r\n                                                <div className=\"text-right\">\r\n                                                    <span\r\n                                                    className=\"blue-text\"\r\n                                                    onClick={() => this.switchMethod('phone')}\r\n                                                    >\r\n                                                    Über Telefonnummer einloggen\r\n                                                    </span>\r\n                                                </div>\r\n                                                \r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <label htmlFor=\"pho\">Telefon Nummer</label>\r\n                                                <ReactPhoneInput\r\n                                                defaultCountry={'at'}\r\n                                                preferredCountries={['at','de','ch']}\r\n                                                value={this.state.phone}\r\n                                                onChange={this.handlePhoneChange}\r\n                                                inputExtraProps={{\r\n                                                    className: 'w-100'\r\n                                                }}\r\n                                                />\r\n                                                <div className=\"text-right\">\r\n                                                    <span\r\n                                                    className=\"blue-text\"\r\n                                                    onClick={() => this.switchMethod('email')}\r\n                                                    >\r\n                                                    Über E-Mail einloggen\r\n                                                    </span>\r\n                                                </div>\r\n                                            </>\r\n                                        ) }\r\n                                        <br />\r\n                                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                                        Dein Passwort\r\n                                        </label>\r\n                                        <input\r\n                                        type=\"password\"\r\n                                        id=\"defaultFormLoginPasswordEx\"\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Bitte gib ein Passwort an.\r\n                                        </div>\r\n                                        <div className=\"text-center mt-4\">\r\n                                            <MDBBtn color=\"success\" type=\"submit\">\r\n                                                <MDBIcon icon=\"angle-right\" className=\"pr-2\" />Einloggen\r\n                                            </MDBBtn>\r\n                                        </div>\r\n                                        <p className=\"text-muted text-center mt-3\">\r\n                                        Noch kein Mitglied? Jetzt einfach <Link to=\"/join\">\r\n                                        <strong>Mitglied werden</strong>\r\n                                        </Link>!\r\n                                        </p>\r\n                                    </form>\r\n                                </MDBCol>\r\n                            )}\r\n                                \r\n                            </MDBRow>\r\n                        </MDBCardBody>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBFreeBird>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst AuthWithMutation = graphql(LOGIN_USER)(withApollo(Login));\r\n\r\nexport default AuthWithMutation;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// DOM bindings for React Router\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n//> Components\r\n/**\r\n * Dashboard: Basic Charm front-end for customers\r\n */\r\nimport {\r\n  Dashboard\r\n} from './components/pages/customer';\r\n/**\r\n * ReportRevision: Page for coaches to review beauty reports\r\n */\r\nimport {\r\n  ReportRevision,\r\n  GenerateReport,\r\n  ReportList,\r\n  Anamnesis,\r\n  CoachDashboard,\r\n  NewCustomer,\r\n} from './components/pages/coach';\r\n/**\r\n * Login: Login page\r\n */\r\nimport {\r\n  Login,\r\n} from './components/pages';\r\n\r\nclass Routes extends React.Component {\r\n\r\n  // Handle login\r\n  handleLogin = (status) => {\r\n    // Call root component handler\r\n    this.props.handler(status);\r\n  }\r\n\r\n  flushData = () => {\r\n    this.props.flushData();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Called\");\r\n    return (\r\n      <Switch>\r\n        <Route\r\n        exact\r\n        path='/dashboard'\r\n        component={(props) => <Dashboard globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/login'\r\n        component={(props) => <Login handler = {this.handleLogin} globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/anamnesis'\r\n        component={(props) => <Anamnesis globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/coach'\r\n        component={(props) => <CoachDashboard \r\n        globalState={this.props.globalState} {...props}\r\n        />\r\n        }\r\n\r\n        />\r\n        <Route\r\n        exact\r\n        path='/add'\r\n        component={(props) => <NewCustomer \r\n        globalState={this.props.globalState} {...props}\r\n        flushData={this.flushData}\r\n        />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/report'\r\n        component={(props) => <ReportList globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/report/add'\r\n        component={(props) => <GenerateReport \r\n        globalState={this.props.globalState} {...props} \r\n        flushData={this.flushData}\r\n        />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/report/edit'\r\n        component={(props) => <ReportRevision globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route \r\n        exact\r\n        path='/admin'\r\n        component={() => window.location = 'https://manage.pharmaziegasse.at'}\r\n        />\r\n        <Route \r\n        exact\r\n        path='/api/graphiql'\r\n        component={() => window.location = 'https://manage.pharmaziegasse.at/api/graphiql'}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/test'\r\n        component={(props) => <Dashboard globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n          render={function () {\r\n            console.log(\"Called\");\r\n            return <Redirect to='/login' />;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// DOM bindings for React Router\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n//> Components\r\n/**\r\n * Footer: Global Footer\r\n * Navbar: Global navigation bar\r\n */\r\nimport {\r\n  Footer,\r\n} from './components/molecules';\r\n// Routes\r\nimport Routes from './Routes';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport * as compose from 'lodash.flowright';\r\n\r\nconst VERIFY_TOKEN = gql`\r\n  mutation verify($token: String!) {\r\n      verifyToken(token: $token) {\r\n        payload\r\n      }\r\n  }\r\n`;\r\n\r\nconst REFRESH_TOKEN = gql`\r\n  mutation refresh($token: String!) {\r\n    refreshToken(token: $token) {\r\n      payload\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_DATA = gql`\r\n  query ($token: String!) {\r\n    userSelf(token: $token) {\r\n      id\r\n      lastLogin\r\n      email\r\n      isActive\r\n      isStaff\r\n      isCoach\r\n      isCustomer\r\n      title    \r\n      firstName\r\n      lastName\r\n      birthdate\r\n      telephone\r\n      address\r\n      city\r\n      postalCode\r\n      userSet{\r\n        anamneseSet{\r\n          id\r\n        }\r\n        beautyreportSet{\r\n          id\r\n        }\r\n        id\r\n        customerId\r\n        firstName\r\n        lastName\r\n        email\r\n        telephone\r\n      }\r\n      country\r\n      newsletter\r\n      verified\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    logged: false,\r\n    username: undefined,\r\n    coach: undefined,\r\n    loaded: false,\r\n    userdata: {},\r\n    flush: false,\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if(localStorage.getItem('wca') !== null){\r\n      try {\r\n        // Verify Token on first load\r\n        this._verifyToken();\r\n        // Refresh token every 4 minutes\r\n        setInterval(async () => {\r\n          this._verifyToken();\r\n        }, 180000);\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        loaded: true\r\n      });\r\n    }\r\n  }\r\n\r\n  _getUserData = () => {\r\n    this.props.client.query({\r\n        query: GET_DATA,\r\n        variables: { \"token\": localStorage.getItem(\"wca\") }\r\n    }).then(({data}) => {\r\n        if(data.userSelf !== undefined){\r\n          this.setState({\r\n            userdata: data.userSelf,\r\n            coach: data.userSelf.isCoach,\r\n            loaded: true\r\n          });\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error\",error);\r\n    })\r\n  }\r\n\r\n  _verifyToken = () => {\r\n    this.props.verify({\r\n      variables: { \"token\": localStorage.getItem('wca') }\r\n    })\r\n    .then(({data}) => {\r\n        if(data !== undefined){\r\n          if(data.verifyToken !== null){\r\n            this._isLogged(\r\n              data.verifyToken.payload.exp,\r\n              data.verifyToken.payload.origIat,\r\n              data.verifyToken.payload.username\r\n            );\r\n          } else {\r\n            this._notLogged();\r\n          }\r\n        } else {\r\n          this._notLogged();\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Mutation error:\",error);\r\n    })\r\n  }\r\n\r\n  _notLogged = () => {\r\n    this.setState({\r\n      logged: false,\r\n      username: undefined,\r\n      loaded: true\r\n    });\r\n  }\r\n\r\n  _setLogged = (uname) => {\r\n    this.setState({\r\n      logged: true,\r\n      username: uname,\r\n    }, () => this._getUserData());\r\n  }\r\n\r\n  _isLogged = (exp, orig, uname) => {\r\n    /**\r\n     * Generate current timestamp\r\n     * Ref: https://flaviocopes.com/how-to-get-timestamp-javascript/\r\n     */\r\n    let currentTS = ~~(Date.now() / 1000);\r\n    // Check if the token is still valid\r\n    if(currentTS > exp){\r\n      console.log(\"Token has expired. User should be logged out.\");\r\n      this._notLogged();\r\n    } else {\r\n      // Only if anything has changed, update the data\r\n      if(this.state.logged !== true){\r\n        if(this.state.username !== uname){\r\n          this._setLogged(uname);\r\n        }\r\n      }\r\n      this._refeshToken();\r\n    }\r\n  }\r\n\r\n  _refeshToken = () => {\r\n    this.props.refresh({\r\n      variables: { \"token\": localStorage.getItem('wca') }\r\n    })\r\n    .then(({data}) => {\r\n        if(data !== undefined){\r\n          localStorage.setItem('wca', data.refreshToken.token);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Mutation error:\",error);\r\n    })\r\n  }\r\n\r\n  handler = (logged) => {\r\n    if(logged){\r\n      this._verifyToken();\r\n    }\r\n  }\r\n\r\n  flushData = () => {\r\n    this.setState({\r\n      flush: !this.state.flush\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Updated\", this.state);\r\n    return (\r\n      <Router>\r\n        <div className=\"flyout\">\r\n          <main>\r\n            {this.state.loaded &&\r\n            <Routes \r\n            handler={this.handler}\r\n            globalState={this.state}\r\n            flushData={this.flushData}\r\n            />\r\n            }\r\n          </main>\r\n          <Footer globalState={this.state} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(VERIFY_TOKEN, { name: 'verify' }),\r\n  graphql(REFRESH_TOKEN, { name: 'refresh' }),\r\n)(withApollo(App));\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// This serves as an entry point to the DOM and server renderers for React\r\nimport ReactDOM from 'react-dom';\r\n\r\n//> Font Awesome\r\n// Font Awesome is an awesome icon library\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n//> Connect to backend\r\n// Apollo\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { InMemoryCache, IntrospectionFragmentMatcher } from \"apollo-cache-inmemory\";\r\n\r\n//> Bootstrap\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n//> CSS\r\n// Root SCSS file\r\nimport './index.scss';\r\n\r\n//> Components\r\n// Root component\r\nimport App from './App';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Base url\r\nexport const APIHost = 'https://manage.pharmaziegasse.at';\r\n\r\n// Cache setup\r\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\r\n  introspectionQueryResultData: {\r\n    __schema: {\r\n      types: [], // no types provided - works like a charm.ing\r\n    },\r\n  },\r\n});\r\nconst cache = new InMemoryCache({ fragmentMatcher });\r\n\r\n// Create api url from base url\r\nconst APILink = APIHost+\"/api/graphql\";\r\n\r\nconst LINK:HttpLink = new HttpLink({\r\n  uri: APILink,\r\n  headers: {\r\n    authorization:\r\n      localStorage.getItem('wca')\r\n  }\r\n});\r\n\r\n// Apollo Client setup\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link: LINK,\r\n});\r\n\r\n// Render the root component to <div id=\"root\"></div>\r\nReactDOM.render( \r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n"],"sourceRoot":""}
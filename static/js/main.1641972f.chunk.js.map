{"version":3,"sources":["assets/logo.png","components/molecules/Footer/index.jsx","components/molecules/Navbar/index.jsx","components/atoms/ScrollToTop/index.jsx","components/pages/customer/Dashboard/index.jsx","components/pages/coach/ReportRevision/index.jsx","components/pages/coach/ReportList/index.jsx","utilities/intel/getLatLongByCity.js","utilities/intel/getWeatherbyLatLng.js","components/pages/coach/Anamnesis/index.jsx","assets/icons/morning.svg","assets/icons/day.svg","assets/icons/night.svg","components/pages/coach/CoachDashboard/index.jsx","components/pages/coach/NewCustomer/index.jsx","components/pages/coach/GenerateReport/index.jsx","components/pages/coach/Questionnaire/index.jsx","components/pages/Login/index.jsx","components/pages/SetPassword/index.jsx","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Footer","logout","localStorage","removeItem","window","location","href","globalState","this","props","color","className","undefined","coach","logged","md","icon","onClick","fab","fluid","Date","getFullYear","process","rel","target","React","PureComponent","Navbar","handleResize","setState","windowWidth","innerWidth","handleToggleClickA","toggleStateA","state","breakWidth","addEventListener","removeEventListener","triggerOpening","fixed","src","alt","name","id","iconRegular","Component","ScrollToTop","prevProps","scrollTo","children","withRouter","HomePage","dataRadar","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","dataRadarOptions","responsive","elements","line","tension","legend","display","scale","ticks","beginAtZero","max","min","scales","yAxes","gridLines","drawBorder","xAxes","stepSize","dataRadarPlugins","beforeInit","chart","forEach","e","i","a","test","split","componentDidMount","document","title","loaded","to","tag","size","floating","gradient","far","rounded","outline","options","plugins","toolbarConfig","INLINE_STYLE_BUTTONS","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","ReportRevision","componentWillMount","Object","keys","articles","map","text","RichTextEditor","createValueFromString","createEmptyValue","toggleCollapse","collapseID","getStatus","reviewed","item","count","length","isFinished","onChange","goBack","history","push","console","log","material","value","height","Math","round","article","key","heading","filled","type","isOpen","readOnly","disabled","GET_REPORTS","gql","ReportList","user","loading","fetchReports","componentWillUnmount","uid","fetchAllReports","client","query","variables","getItem","then","brLatestByUid","reports","latest","brByUid","legacy","catch","error","getDate","date","dateS","year","month","getMonth","slice","getHours","getMinutes","getSeconds","_getTable","columns","field","sort","rows","_getBeautyReports","report","btnTitle","btnColor","textFieldTitle","link","userId","showLegacy","firstName","lastName","pathname","striped","bordered","small","exportToCSV","paginationLabel","withApollo","getLatLongByCityname","city","country","async","trim","api","REACT_APP_LATLONG_APIKEY","fetch","response","ok","json","results","geometry","result","components","confidence","status","lat","lng","getWeatherbyLatLng","time","setFullYear","timestamp","REACT_APP_DARKSKY_APIKEY","daily","day","avgTemp","temperatureHigh","temperatureLow","uvIndex","humidity","GET_FORMS","UPDATE_FORMS","GET_DATA","Anamnesis","userdata","initialize","getAnamneseFields","getAnmaneseData","__init","__getCityLatLng","res","__getWeatherData","weatherAPI","resetButton","success","documentLink","anLatestByUid","fD","JSON","parse","formData","formdata","message","sendData","rtn","pages","page","__typename","formFields","stringify","helpText","fieldType","urlPath","update","anamneseAnFormPage","errors","call","querySelectorAll","parentNode","removeChild","handleError","refNames","refNode","current","refAlert","querySelector","scrollIntoView","node","elChild","createElement","innerHTML","appendChild","_handleChange","_handleCheckBoxChange","checked","_handleCheckBoxesChange","includes","filtered","filter","ele","newCB","_handleSelectChange","_setDefaultValue","defaultValue","multiselect","checkboxes","getSelectValues","select","opt","iLen","selected","_handleMultiSelectChange","_handleNumberClick","parseInt","printCheckboxes","choices","n","toLowerCase","replace","printRadio","container","required","printOptions","renderFields","createRef","previousState","ref","htmlFor","multiple","toFixed","graphql","_extends","assign","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref3","d","x1","y1","x2","y2","_ref","svgRef","viewBox","ForwardRef","forwardRef","cx","cy","r","transform","points","GET_USERS_ALL","CREATE_USER","clientNoCache","ApolloClient","HttpLink","uri","cache","InMemoryCache","defaultOptions","fetchPolicy","errorPolicy","clientOnlyCache","CoachDashboard","_loginUser","_fetchUsersFirstTime","getGreetingImg","getGreetingQuote","syncManually","syncing","_fetchUsersWithoutCache","_fetchNodeUsers","jwt","token","config","headers","axios","get","customers","_fetchAllUsers","post","userSelf","coachusers","users","userAll","_getDifference","selection","customer","some","telephone","phone","_createUser","values","first_name","last_name","email","default_address","address1","province_code","country_code","accepts_marketing","verified_email","create","curHr","greetingImage","quotes","author","random","floor","greetingQuote","getGreetingTxt","_getCoachUsers","userSet","b","dateJoined","customerId","beautyreportSet","placement","anamneseSet","compose","countries","countryList","getData","GET_COACHES","NewCustomer","handleTextChange","handlePhoneChange","usePhoneAsCountry","countryCode","toUpperCase","phoneCountry","handlePhoneByCountry","getPickerValue","birthdate","handleSelectChange","handleCountrySelectChange","_fetchAllCountries","allCountries","c","Countries","_fetchAllCoaches","coachAll","coaches","urlPaths","Coaches","el","address","zip","customerid","userUserFormPage","graphQLErrors","x","verified","flushData","getValue","search","defaultCountry","preferredCountries","enableSearchField","containerClass","disableFuture","format","initialFocusedDate","valueDefault","keyboard","GET_TEMPLATE","GET_USERDATA","GET_LINK","SEND_DATA","GenerateReport","fetchData","fetchTemplate","template","fetchUserData","_normalizeStatement","condition","_normalizeCondition","_getReturnValue","compareParts","__convertType","__compare","preEscapedCondition","match","escapedCondition","variableName","replacement","Array","isArray","Function","operator","getLink","doclink","send","beautyreportBrFormPage","_fetchVariables","variable","dat","datarr","da","version","createReport","chapters","chapter","ckey","chapterHeader","subChapters","subChapter","skey","subChapterHeader","sub_chapter_header","paragraphs","paragraph","pkey","statement","operations","preloader","QuestionnaireQ3FormPage","formfields","formtitle","LOGIN_USER","USER_BY_EMAIL","USER_BY_PHONE","RESET_PSW","Login","method","handleChange","handleSubmit","preventDefault","_getUsernameByMethod","usernameByPhone","_login","usernameByEmail","handler","username","mutate","password","tokenAuth","setItem","handleEmailChange","switchMethod","resetPsw","reset","passwordResetActivation","successReset","errorReset","warn","big","logo","onSubmit","noValidate","inputExtraProps","AuthWithMutation","SET_PSW","SetPassword","param","qs","ignoreQueryPrefix","activationToken","submitForm","passwordRepeat","accessToken","set","Routes","handleLogin","exact","path","component","Dashboard","Questionnaire","render","VERIFY_TOKEN","REFRESH_TOKEN","App","flush","_verifyToken","setInterval","_loginAnonymous","_getUserData","isCoach","login","verify","verifyToken","payload","_isLogged","exp","origIat","_notLogged","_setLogged","uname","orig","now","_refeshToken","refresh","refreshToken","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","APIHost","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","APILink","LINK","authorization","ReactDOM","getElementById","URL","origin","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1641972f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.58fe2d77.png\";","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\n//import { Link } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBFooter,\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBBtn,\r\n} from 'mdbreact';\r\n\r\n//> CSS\r\nimport './footer.scss';\r\n\r\nclass Footer extends React.PureComponent{\r\n    logout = () => {\r\n        // Remove the token\r\n        localStorage.removeItem('fprint');\r\n        // Redirect to login\r\n        window.location.href = '/login'; \r\n    }\r\n\r\n    render(){\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        return(\r\n            <MDBFooter color=\"unique-darkblue\" className=\"mt-4\">\r\n                {globalState.coach !== undefined && globalState.logged &&\r\n                <div className=\"py-4\">\r\n                    <MDBContainer>\r\n                        {!globalState.coach ? (\r\n                                <MDBRow className=\"text-center flex-center\">\r\n                                    <MDBCol md=\"4\">\r\n                                        <a href=\"#!\">Referral Programm</a>\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"4\">\r\n                                        <a href=\"#!\"><MDBIcon fab icon=\"facebook-f\" className=\"pr-2\" /></a>\r\n                                        <a href=\"#!\"><MDBIcon fab icon=\"instagram\" className=\"pl-2\" /></a>\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"4\">\r\n                                        <a href=\"#!\">Fragen? Wir sind für Sie da!</a>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            ) : (\r\n                                <MDBRow className=\"text-center flex-center\">\r\n                                    <MDBCol md=\"4\">\r\n                                        <a\r\n                                        href=\"mailto:support@aichner-christian.com\"\r\n                                        >\r\n                                            <li className=\"list-unstyled\">\r\n                                                <MDBIcon icon=\"medkit\" />Support\r\n                                            </li>\r\n                                        </a>\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"4\">\r\n                                        <li \r\n                                        className=\"list-unstyled clickable\"\r\n                                        onClick={() => this.logout()}\r\n                                        >\r\n                                            <MDBIcon icon=\"sign-out-alt\" />Logout\r\n                                        </li>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            )\r\n                        }\r\n                    </MDBContainer>\r\n                </div>\r\n                }\r\n                <div className=\"footer-copyright text-center py-3\">\r\n                    <MDBContainer fluid>\r\n                    <div>\r\n                        &copy; 2018 - {new Date().getFullYear()} Copyright: PHARMAZIEGASSE<sup>®</sup>\r\n                    </div>\r\n                    <div>\r\n                        <small className=\"text-muted\">\r\n                            Alpha release\r\n                            <span className=\"pl-2 pr-2\">·</span>\r\n                            Version v{process.env.REACT_APP_VERSION}\r\n                            <span className=\"pl-2 pr-2\">·</span>\r\n                            <a \r\n                            href=\"https://github.com/pharmaziegasse/charm-webapp\"\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                            >\r\n                            <MDBIcon fab icon=\"github\" className=\"pr-2\"/>\r\n                            View on GitHub\r\n                            </a>\r\n                            <span className=\"pl-2 pr-2\">·</span>\r\n                            <a \r\n                            href=\"https://github.com/pharmaziegasse/charm-webapp/issues/new?template=bug_report.md\"\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                            >\r\n                            <MDBIcon icon=\"bug\" className=\"pr-2\"/>\r\n                            Report bug\r\n                            </a>\r\n                        </small>\r\n                    </div>\r\n                    </MDBContainer>\r\n                </div>\r\n            </MDBFooter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBSideNav,\r\n  MDBSideNavCat,\r\n  MDBSideNavItem,\r\n  MDBSideNavNav,\r\n  MDBIcon,\r\n  MDBAvatar,\r\n} from 'mdbreact';\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        toggleStateA: false,\r\n        breakWidth: 1300,\r\n        windowWidth: 0\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.handleResize();\r\n      window.addEventListener(\"resize\", this.handleResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"resize\", this.handleResize);\r\n    }\r\n\r\n    handleResize = () =>\r\n      this.setState({\r\n        windowWidth: window.innerWidth\r\n      });\r\n\r\n    handleToggleClickA = () => {\r\n      this.setState({\r\n        toggleStateA: !this.state.toggleStateA\r\n      });\r\n    };\r\n\r\n    render(){\r\n      return(\r\n        <>\r\n          <MDBSideNav\r\n            triggerOpening={this.state.toggleStateA}\r\n            breakWidth={this.state.breakWidth}\r\n            fixed\r\n          >\r\n            <MDBAvatar className=\"mx-5 mt-5 mb-3\">\r\n              <img\r\n                src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(20).jpg\"\r\n                alt=\"\"\r\n                className=\"rounded-circle img-fluid\"\r\n              />\r\n            </MDBAvatar>\r\n            <h4 className=\"text-center\">Erika Mustermann</h4>\r\n            <li>\r\n              <ul className=\"social\">\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"facebook-f\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"pinterest\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"google-plus-g\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    <MDBIcon fab icon=\"twitter\" />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <MDBSideNavNav>\r\n              <MDBSideNavCat\r\n                name=\"Submit blog\"\r\n                id=\"submit-blog-cat\"\r\n                icon=\"chevron-right\"\r\n              >\r\n                <MDBSideNavItem>Submit listing</MDBSideNavItem>\r\n                <MDBSideNavItem>Registration form</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n              <MDBSideNavCat\r\n                iconRegular\r\n                name=\"Instruction\"\r\n                id=\"instruction-cat\"\r\n                icon=\"hand-pointer\"\r\n              >\r\n                <MDBSideNavItem>For bloggers</MDBSideNavItem>\r\n                <MDBSideNavItem>For authors</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n              <MDBSideNavCat name=\"About\" id=\"about-cat\" icon=\"eye\">\r\n                <MDBSideNavItem>Instruction</MDBSideNavItem>\r\n                <MDBSideNavItem>Monthly meetings</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n              <MDBSideNavCat\r\n                name=\"Contact me\"\r\n                id=\"contact-me-cat\"\r\n                icon=\"envelope\"\r\n              >\r\n                <MDBSideNavItem>FAQ</MDBSideNavItem>\r\n                <MDBSideNavItem>Write a message</MDBSideNavItem>\r\n              </MDBSideNavCat>\r\n            </MDBSideNavNav>\r\n            <MDBSideNavItem className=\"nav-settings\"><MDBIcon icon=\"cog\" className=\"pr-2\" />Einstellungen</MDBSideNavItem>\r\n          </MDBSideNav>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React, { Fragment } from 'react';\r\n// Link and Redirect from Router\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBBtn,\r\n  MDBAvatar,\r\n  MDBSpinner,\r\n} from 'mdbreact';\r\n// Radar chart\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\n//> Components\r\n/**\r\n * Navbar: User navigation bar\r\n */\r\nimport {\r\n  Navbar,\r\n} from '../../../molecules';\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    dataRadar: {\r\n      labels: [\r\n        'Große Poren',\r\n        'Sensible Haut',\r\n        'Hautalterung',\r\n        'Ölige Haut',\r\n        'Trockene Haut',\r\n        'Unreine Haut',\r\n        'Pigmentflecken',\r\n        'Zeichen\\noxidativen Stresses'\r\n      ],\r\n      datasets: [{\r\n          label: '# of Votes',\r\n          data: [10, 7, 10, 10, 4, 10, 2, 5],\r\n          backgroundColor: [\r\n              'rgba(150, 0, 150, 0.2)',\r\n          ],\r\n          borderColor: [\r\n              'rgba(150, 0, 150, 1)',\r\n          ],\r\n          borderWidth: 1\r\n      }]\r\n    },\r\n    dataRadarOptions: {\r\n        responsive: true,\r\n        elements: {\r\n            line: {\r\n                tension: 0.4\r\n            }\r\n        },\r\n        legend: {\r\n            display: false,\r\n        },\r\n        scale: {\r\n            ticks: {\r\n                beginAtZero: true,\r\n                max: 10,\r\n                min: 0\r\n            }\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                },\r\n                ticks: {\r\n                    display: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                },\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                    stepSize: 1,\r\n                    min: 0,\r\n                    max: 10\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    dataRadarPlugins: [{\r\n        beforeInit: function (chart) {\r\n        chart.data.labels.forEach(function (e, i, a) {\r\n            if (/\\n/.test(e)) {\r\n            a[i] = e.split(/\\n/)\r\n            }\r\n        })\r\n        }\r\n    }]\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Set page title\r\n    document.title = \"Dein individuelles Programm\";\r\n  }\r\n\r\n  render() {\r\n    // Get global state with login information\r\n    const { globalState } = this.props;\r\n\r\n    // Secure page\r\n    if(!globalState.logged) { return (<Redirect to=\"/login\"/>) }\r\n\r\n    if(!globalState.loaded || globalState.coach === undefined){\r\n      return (\r\n        <div className=\"w-100 h-100 flex-center\">\r\n          <MDBSpinner />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if(globalState.logged && globalState.coach) { return (<Redirect to=\"/coach\"/>) }\r\n\r\n    return (\r\n      <Fragment>\r\n      <Navbar />\r\n        <div className=\"support-card\">\r\n          <MDBBtn tag=\"a\" size=\"lg\" floating gradient=\"night-fade\">\r\n            <MDBIcon far icon=\"comments fa-2x\" />\r\n          </MDBBtn>\r\n          <MDBBtn rounded outline color=\"secondary\">Coach kontaktieren</MDBBtn>\r\n        </div>\r\n        <MDBContainer>\r\n          <MDBRow className=\"justify-content-center\">\r\n            <MDBCol md=\"6\">\r\n              <MDBCard className=\"chart-card\">\r\n                <MDBCardBody>\r\n                  <MDBCardTitle className=\"mb-4\">Ihr Hautzustand</MDBCardTitle>\r\n                  <Radar data={this.state.dataRadar} options={this.state.dataRadarOptions} plugins={this.state.dataRadarPlugins} />\r\n                  <MDBCardText className=\"mt-4\">\r\n                    Some quick example text to build on the card title and make\r\n                    up the bulk of the card&apos;s content.\r\n                  </MDBCardText>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol md=\"6\">\r\n              <MDBCard className=\"timeline-card\">\r\n                <MDBCardBody className=\"py-0\">\r\n                  <MDBRow>\r\n                    <div className=\"mdb-feed\">\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(18)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            <a href=\"#!\" className=\"name\">\r\n                              Monika\r\n                            </a> hat Ihr neues Programm <a href=\"#!\">versendet</a>\r\n                            <div className=\"date\">Vor 10 Stunden</div>\r\n                          </div>\r\n                          <div className=\"added-images\">\r\n                            <img\r\n                              src=\"https://pharmaziegasse.at/media/images/IMG_9948.original.jpg\"\r\n                              alt=\"\"\r\n                              className=\"z-depth-1 rounded mb-md-0 mb-2\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(20)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            Sie haben sich die Verbesserungen angesehen\r\n                            <div href=\"#!\" className=\"date\">\r\n                              Vor 14 Stunden\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(18)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            <a href=\"#!\" className=\"name\">\r\n                              Monika\r\n                            </a> hat Ihr Programm verbessert\r\n                            <div className=\"date\">Vor 2 Tagen</div>\r\n                          </div>\r\n                          <div className=\"added-text\">\r\n                            Da Ihre unreine Haut am meisten Potential für Verbesserungen bietet, habe ich Ihr individuelles Programm genau auf Ihre Bedürfnisse hin angepasst.\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"news\">\r\n                        <div className=\"label\">\r\n                          <img\r\n                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(20)-mini.jpg\"\r\n                            alt=\"\"\r\n                            className=\"rounded-circle z-depth-1-half\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"excerpt\">\r\n                          <div className=\"brief\">\r\n                            Sie haben Ihren <a href=\"#!\">Hautzustand</a> aktualisiert\r\n                            <div className=\"date\">Vor 3 Tagen</div>\r\n                          </div>\r\n                          <div className=\"added-images\">\r\n                            <img\r\n                              src=\"https://pixnio.com/free-images/2017/11/30/2017-11-30-18-11-20-1200x800.jpg\"\r\n                              alt=\"\"\r\n                              className=\"z-depth-1 rounded\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <a href=\"!#\">Gesamte Timeline anzeigen</a>\r\n                    </div>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol md=\"10\" className=\"my-5\">\r\n              <MDBCard className=\"coach-card\">\r\n                <MDBCardBody>\r\n                  <MDBRow>\r\n                    <MDBCol md=\"auto pl-5\">\r\n                      <MDBAvatar>\r\n                        <img\r\n                          src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(18).jpg\"\r\n                          alt=\"\"\r\n                          className=\"rounded-circle img-fluid\"\r\n                        />\r\n                      </MDBAvatar>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"align-self-center\">\r\n                      <h4>Monika Mustermann</h4>\r\n                      <p className=\"text-muted m-0\">Ihr persölicher Beauty Coach</p>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"align-self-center text-right pr-5\">\r\n                      <MDBBtn rounded outline color=\"secondary\">Coach kontaktieren</MDBBtn>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Rich-Text Editor\r\nimport RichTextEditor from 'react-rte';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBCollapse,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCollapseHeader,\r\n    MDBProgress,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBIcon,\r\n} from 'mdbreact';\r\n\r\n// Rich Text Box editor config\r\nconst toolbarConfig = {\r\n    display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'LINK_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n    INLINE_STYLE_BUTTONS: [\r\n        {label: 'Bold', style: 'BOLD', className: 'custom-css-class'},\r\n        {label: 'Italic', style: 'ITALIC'},\r\n        {label: 'Underline', style: 'UNDERLINE'}\r\n    ],\r\n    BLOCK_TYPE_DROPDOWN: [\r\n        {label: 'Normal', style: 'unstyled'},\r\n        {label: 'Heading Large', style: 'header-one'},\r\n        {label: 'Heading Medium', style: 'header-two'},\r\n        {label: 'Heading Small', style: 'header-three'}\r\n    ],\r\n    BLOCK_TYPE_BUTTONS: [\r\n        {label: 'UL', style: 'unordered-list-item'},\r\n        {label: 'OL', style: 'ordered-list-item'}\r\n    ]\r\n};\r\n\r\nclass ReportRevision extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            test: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        Object.keys(this.props.location.state.articles).map((name, i) => {\r\n            // Generate states for every section\r\n            this.setState({ [\"collapse\"+i]: true })\r\n            // Text Editor\r\n            if(this.props.location.state.articles[name].text !== \"\" &&\r\n            this.props.location.state.articles[name].text !== undefined){\r\n                // Save current section to text editor\r\n                this.setState({ \r\n                    [\"value\"+i]: RichTextEditor.createValueFromString(\r\n                            this.props.location.state.articles[name].text, 'html'\r\n                        ) \r\n                    })\r\n                return true;\r\n            } else {\r\n                // Create empty value if the section has no text\r\n                this.setState({ [\"value\"+i]: RichTextEditor.createEmptyValue() })\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // Set page title\r\n        document.title = \"Beautyreport Revision\";\r\n    }\r\n\r\n    // Toggle the visibility of the sections\r\n    toggleCollapse = collapseID => () =>\r\n    this.setState({\r\n        [collapseID]: !(this.state[collapseID])\r\n    });\r\n\r\n    // Get how many % of the sections are finished\r\n    getStatus = () => {\r\n        let reviewed = 0;\r\n        Object.keys(this.state).map((item, i) => {\r\n            // Get how many collapse items are reviewed\r\n            if(this.state[item] === false){\r\n                reviewed++;\r\n            }\r\n            return true;\r\n        })\r\n        let count = Object.keys(this.props.location.state.articles).length;\r\n        return (reviewed / count) * 100;\r\n    }\r\n\r\n    // Get if its finished\r\n    isFinished = () => {\r\n        if(this.getStatus() === 100){\r\n            // Is enabled\r\n            return false;\r\n        } else {\r\n            // Is disabled\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Change text in box\r\n    onChange = (i,e) => {\r\n        // e contains the value and additional information about the editor\r\n        this.setState({[\"value\"+i]: e});\r\n    }\r\n\r\n    goBack = () => {\r\n        let path = `../report`;\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n        \r\n        console.log(this.state);\r\n        // Secure this page - Make sure there is an active state\r\n        const { location } = this.props; \r\n        if(location !== undefined){\r\n            if(location.state !== undefined){\r\n                return (\r\n                    <MDBContainer className=\"pt-5\">\r\n                        <h2 className=\"text-center font-weight-bold\">\r\n                        Beautyreport überprüfen\r\n                        </h2>\r\n                        <div className=\"mt-4 mb-3 text-left\">\r\n                            <Link to=\"/report\">\r\n                                <MDBBtn color=\"red\">\r\n                                    <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                                </MDBBtn>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <MDBProgress\r\n                        material\r\n                        color={this.getStatus() === 100 ? (\"success\") : (\"secondary\")}\r\n                        value={this.getStatus()}\r\n                        height=\"20px\">\r\n                        {this.getStatus() > 0 &&\r\n                            <>{Math.round(this.getStatus())}% abgeschlossen</>\r\n                        }\r\n                            \r\n                        </MDBProgress>\r\n                        {Object.keys(location.state.articles).map((name, i) => {\r\n                            let article = location.state.articles[name];\r\n                            return(\r\n                                <MDBCard key={i} className=\"mt-3\">\r\n                                    <MDBCollapseHeader>\r\n                                        <MDBRow className=\"justify-content-center\">\r\n                                            <MDBCol md=\"6\" className=\"align-self-center section-title\">\r\n                                                {article.heading}\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"6\" className=\"text-right\">\r\n                                                <MDBInput\r\n                                                label=\"Überprüft\"\r\n                                                filled\r\n                                                type=\"checkbox\"\r\n                                                id={\"checkbox\"+i}\r\n                                                onClick={this.toggleCollapse(\"collapse\"+i)}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBCollapseHeader>\r\n                                    <MDBCollapse id=\"collapse1\" isOpen={this.state[\"collapse\"+i]}>\r\n                                        <MDBCardBody>\r\n                                            <RichTextEditor\r\n                                                value={this.state[\"value\"+i]}\r\n                                                className=\"textfield\"\r\n                                                onChange={(e) => this.onChange(i, e)}\r\n                                                readOnly={!this.state[\"collapse\"+i]}\r\n                                                toolbarConfig={toolbarConfig}\r\n                                            />\r\n                                        </MDBCardBody>\r\n                                    </MDBCollapse>\r\n                                </MDBCard>\r\n                            )\r\n                        })\r\n                        }\r\n                        <MDBRow className=\"my-4\">\r\n                            <MDBCol md=\"6\" className=\"text-left\">\r\n                                <MDBBtn\r\n                                color=\"danger\"\r\n                                onClick={this.goBack}\r\n                                ><MDBIcon icon=\"times\" className=\"pr-2\" />Verwerfen</MDBBtn>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"6\" className=\"text-right\">\r\n                                <MDBBtn\r\n                                color=\"success\"\r\n                                disabled={this.isFinished()}\r\n                                >\r\n                                <MDBIcon icon=\"save\" className=\"pr-2\" />Speichern\r\n                                </MDBBtn>\r\n                                <MDBBtn\r\n                                color=\"green\"\r\n                                disabled={this.isFinished()}\r\n                                >\r\n                                <MDBIcon far icon=\"file-pdf\" className=\"pr-2\" />Speichern + PDF\r\n                                </MDBBtn>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return <Redirect to=\"/login\"/> \r\n        }\r\n    }\r\n}\r\n\r\nexport default ReportRevision;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Moment.js for time handling\r\n//import moment from 'moment';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBDataTable,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBSpinner,\r\n    MDBFileInput,\r\n    MDBInput,\r\n} from 'mdbreact';\r\n\r\n//> Connection\r\nimport { withApollo } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\n//> CSS\r\nimport './reportlist.scss';\r\n\r\n//> Queries\r\n// Get all beauty reports\r\nconst GET_REPORTS = gql`\r\n    query getBeautyReports_byUid($token: String!, $id: Int!) {\r\n        brByUid(token: $token, uid: $id) {\r\n            __typename\r\n            id\r\n            date\r\n            document{\r\n                __typename\r\n                id\r\n                link\r\n            }\r\n        }\r\n        brLatestByUid(token: $token, uid: $id) {\r\n            __typename\r\n            id\r\n            date\r\n            document{\r\n                __typename\r\n                id\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass ReportList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            userId: undefined,\r\n            reports: {\r\n                latest: undefined,\r\n                legacy: []\r\n            },\r\n            showLegacy: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Beautyreport List\";\r\n        \r\n        if(this.props.location){\r\n            if(this.props.location.state){\r\n                if(this.props.location.state.user.id){\r\n                    this.setState({\r\n                        user: this.props.location.state.user,\r\n                        loading: true\r\n                    }, () => this.fetchReports(this.props.location.state.user.id));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        //clearInterval(this.interval);\r\n    }\r\n\r\n    fetchReports = (uid) => {\r\n        //this.interval = setInterval(() => this.fetchAllReports(uid), 5000);\r\n        // Fetch data required for creating a report\r\n        this.fetchAllReports(uid);\r\n    }\r\n\r\n    fetchAllReports = (uid) => {;\r\n        this.props.client.query({\r\n        query: GET_REPORTS,\r\n        variables: { \"id\": uid, \"token\": localStorage.getItem(\"fprint\") }\r\n        }).then(({data}) => {\r\n            if(data.brLatestByUid){\r\n                console.log(\"Data\");\r\n                console.log(data);\r\n                this.setState({\r\n                    reports: { \r\n                        ...this.state.reports,\r\n                        latest: data.brLatestByUid\r\n                    },\r\n                    loading: false\r\n                });\r\n            }\r\n            if(data.brByUid){\r\n                console.log(\"Beautyreports exist for this user\");\r\n                // If there are reports, set dummy data\r\n                this.setState({\r\n                    reports: { \r\n                        ...this.state.reports,\r\n                        legacy: data.brByUid\r\n                    },\r\n                    loading: false\r\n                });\r\n            } else {\r\n                console.log(\"There are no Beautyreports for this user\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                reports: { \r\n                    legacy: [],\r\n                    latest: undefined\r\n                },\r\n                loading: false\r\n            }, () => console.error(\"Error\",error));\r\n        });\r\n    }\r\n    \r\n    getDate = (date) => {\r\n        // Note: Handling dates in JavaScript is like hunting K'lor'slugs on Korriban. A huge waste of time.\r\n        let dateS = new Date(date);\r\n\r\n        // Get the year\r\n        let year = dateS.getFullYear();\r\n        // Get the month ( January is 0! )\r\n        let month = (\"0\" + (dateS.getMonth() + 1)).slice(-2);\r\n        // Get the day of the month\r\n        let day = (\"0\" + (dateS.getDate())).slice(-2);\r\n        //> Time\r\n        // Get hours\r\n        let hours = (\"0\" + (dateS.getHours())).slice(-2);\r\n        // Get minutes\r\n        let minutes = (\"0\" + (dateS.getMinutes())).slice(-2);\r\n        // Get minutes\r\n        let seconds = (\"0\" + (dateS.getSeconds())).slice(-2);\r\n\r\n        /**\r\n         * Combine to achieve YYYY-MM-DD format like Captain Planet.\r\n         * LET OUR POWERS COMBINE!\r\n         * You certainly feel like Captain Planet when you get it to work.\r\n         */ \r\n        return day+\".\"+month+\".\"+year+\" \"+hours+\":\"+minutes+\":\"+seconds;\r\n    }\r\n\r\n    _getTable = () => {\r\n        return({\r\n                columns: [\r\n            {\r\n                label: '#',\r\n                field: 'id',\r\n                sort: 'desc'\r\n            },\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'Visible',\r\n                field: 'visible',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'PDF Upload',\r\n                field: 'pdf',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Download',\r\n                field: 'download',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Quick actions',\r\n                field: 'actions',\r\n                sort: 'disabled'\r\n            }\r\n        ],\r\n        rows: this._getBeautyReports()\r\n        })\r\n    }\r\n\r\n    _getBeautyReports = () => {\r\n        let reports = this.state.reports.legacy.map((report, i) => {\r\n            return({\r\n                'id': i+1,\r\n                'date': this.getDate(report.date),\r\n                'visible': <MDBInput \r\n                            label=\"Für Kunden sichtbar\"\r\n                            filled\r\n                            type=\"checkbox\"\r\n                            disabled\r\n                            id={\"show_latest_\"+i}\r\n                            />,\r\n                'pdf': <MDBFileInput\r\n                        btnTitle=\"File auswählen\"\r\n                        btnColor=\"purple\"\r\n                        textFieldTitle=\"Lade das PDF hoch\"\r\n                        />,\r\n                'download': <>\r\n                {report.document !== null ? (\r\n                    <a\r\n                    href={\"https://manage.pharmaziegasse.at/\"+report.document.link}\r\n                    >\r\n                        <MDBBtn \r\n                        size=\"md\"\r\n                        color=\"primary\"\r\n                        >\r\n                            <MDBIcon \r\n                            icon=\"file-word\"\r\n                            className=\"pr-2\"\r\n                            />\r\n                            Download\r\n                        </MDBBtn>\r\n                    </a>\r\n                ) : (\r\n                    <p>No download</p>\r\n                )}\r\n                            </>,\r\n                'actions': <MDBBtn \r\n                            size=\"md\"\r\n                            color=\"danger\"\r\n                            disabled\r\n                            >\r\n                                <MDBIcon \r\n                                icon=\"trashcan\"\r\n                                className=\"pr-2\"\r\n                                />\r\n                                Remove\r\n                            </MDBBtn>\r\n            });\r\n        });\r\n        return reports;\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState, location } = this.props;\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n        \r\n        if(!location.state) return <Redirect to=\"/coach\"/>\r\n\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <MDBContainer className=\"text-center pt-5\" id=\"reportlist\">\r\n                <h2 className=\"text-center font-weight-bold\">\r\n                Beautyreports von {location.state.user.firstName + \" \" + location.state.user.lastName}\r\n                </h2>\r\n                <div className=\"mt-4\">\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\" className=\"text-left\">\r\n                        <Link to=\"/coach\">\r\n                            <MDBBtn color=\"red\">\r\n                                <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\" className=\"text-right\">\r\n                        <Link \r\n                        to={{\r\n                        pathname: '/report/add',\r\n                        state: {\r\n                            user: this.props.location.state.user\r\n                        }\r\n                        }}\r\n                        >\r\n                            <MDBBtn\r\n                            color=\"secondary\"\r\n                            rounded\r\n                            >\r\n                            <MDBIcon icon=\"plus\" className=\"pr-2\" />Neuen Report generieren\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                    \r\n                </div>\r\n                {!this.state.loading ? (\r\n                    <div className=\"mt-4\">\r\n                        <MDBRow className=\"flex-center mb-4\">\r\n                            <MDBCol md=\"6\">\r\n                                <MDBCard>\r\n                                {this.state.reports.latest ? (\r\n                                    <MDBCardBody className=\"active-report\">\r\n                                        <p className=\"lead font-weight-bold\">Neuester Beautyreport</p>\r\n                                        <small>{this.getDate(this.state.reports.latest.date)}</small>\r\n                                        <p className=\"lead mt-3 mb-2\">Download</p>\r\n                                        {this.state.reports.latest.document &&\r\n                                            <a\r\n                                            href={\r\n                                                \"https://manage.pharmaziegasse.at/\"+\r\n                                                this.state.reports.latest.document.link\r\n                                            }\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            >\r\n                                            <MDBBtn color=\"primary\" className=\"d-block m-auto\">\r\n                                                <MDBIcon icon=\"file-word\" className=\"pr-2\"/>MS Word\r\n                                            </MDBBtn>\r\n                                            </a>\r\n                                        }\r\n                                        \r\n                                        <hr/>\r\n                                        <p className=\"lead my-3\">Neuste Version hochladen</p>\r\n                                        <MDBFileInput\r\n                                        btnTitle=\"File auswählen\"\r\n                                        btnColor=\"purple\"\r\n                                        textFieldTitle=\"Lade das neueste PDF hoch\"\r\n                                        />\r\n                                        <p className=\"lead mt-3\">Aktuelle Version</p>\r\n                                        <small>Hochgeladen: 19.09.2019 12:42:22</small>\r\n                                        <MDBBtn color=\"red\" disabled className=\"d-block mt-3 ml-auto mr-auto\">\r\n                                            <MDBIcon icon=\"file-pdf\" className=\"pr-2\"/>PDF anzeigen\r\n                                        </MDBBtn>\r\n                                        <MDBInput \r\n                                        disabled\r\n                                        label=\"Für Kunden sichtbar\"\r\n                                        filled\r\n                                        type=\"checkbox\"\r\n                                        id=\"show_latest\"\r\n                                        />\r\n                                    </MDBCardBody>\r\n                                ) : (\r\n                                    null\r\n                                )}\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        \r\n                        {this.state.reports.legacy.length >= 1 ? \r\n                        (\r\n                            <>\r\n                                {this.state.showLegacy ? (\r\n                                    <MDBDataTable\r\n                                    striped\r\n                                    bordered\r\n                                    small\r\n                                    exportToCSV\r\n                                    data={this._getTable()}\r\n                                    paginationLabel={[\r\n                                        <MDBIcon icon=\"angle-left\" size=\"lg\" className=\"pl-3 pr-3\" />,\r\n                                        <MDBIcon icon=\"angle-right\" size=\"lg\" className=\"pl-3 pr-3\" />\r\n                                    ]}\r\n                                    />\r\n                                ) : (\r\n                                    <span\r\n                                    onClick={() => {this.setState({showLegacy: true})}}\r\n                                    className=\"blue-text clickable\"\r\n                                    >\r\n                                    Ältere Versionen anzeigen\r\n                                    </span>\r\n                                )}\r\n                                \r\n                            </>\r\n                        ) : (\r\n                            <h3>Noch kein Beauty-Report vorhanden</h3>\r\n                        )\r\n                        }\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-center w-100 h-100\">\r\n                        <MDBSpinner/>\r\n                    </div>\r\n                )}\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withApollo(ReportList);\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export default async function getLatLongByCityname(city, country) {\r\n  // Check if city has been set\r\n  if(city && country){\r\n    // Remove spaces from strings\r\n    city = city.trim();\r\n    country = country.trim();\r\n\r\n    // Set API link and infuse city and API key\r\n    const api = `https://api.opencagedata.com/geocode/v1/json?q=${city}\r\n&key=${process.env.REACT_APP_LATLONG_APIKEY}\r\n&language=en`;\r\n\r\n    // Get response\r\n    let response = await fetch(api);\r\n\r\n    // If the response was successful\r\n    if(response.ok){\r\n      // Get json of response\r\n      let json = await response.json();\r\n\r\n      // If there is content to the response json\r\n      if(json){\r\n        if(json.results){\r\n          let results = json.results;\r\n\r\n          // Init variables\r\n          let geometry = undefined;\r\n\r\n          // Go through every result and check the confidence\r\n          results.map((result, i) => {\r\n            console.log(result);\r\n            if(result.components[\"ISO_3166-1_alpha-2\"] === country){\r\n              if(!geometry){\r\n                geometry = {\r\n                  status: response.status,\r\n                  confidence: result.confidence,\r\n                  lat: result.geometry.lat,\r\n                  lng: result.geometry.lng\r\n                };\r\n              } else {\r\n                if(result.confidence > geometry.confidence){\r\n                  geometry = {\r\n                    status: response.status,\r\n                    confidence: result.confidence,\r\n                    lat: result.geometry.lat,\r\n                    lng: result.geometry.lng\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          });\r\n          // Return final result\r\n          return geometry;\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        status: response.status\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      status: 400\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export default async function getWeatherbyLatLng(lat, lng) {\r\n  // Check if lat/lng have been set\r\n  if(lat && lng){\r\n\r\n    const time = new Date(new Date().setFullYear(new Date().getFullYear() -1 ));\r\n    let timestamp = Math.round(time/1000);\r\n\r\n    // Set API link and infuse with data\r\n    const api = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/\r\n${process.env.REACT_APP_DARKSKY_APIKEY}/\r\n${lat},${lng},\r\n${timestamp}?exclude=currently,flags,hourly,alerts`;\r\n\r\n    // Get response\r\n    let response = await fetch(api);\r\n\r\n    // If the response was successful\r\n    if(response.ok){\r\n      // Get json of response\r\n      let json = await response.json();\r\n\r\n      // If there is content to the response json\r\n      if(json){\r\n        if(json.daily){\r\n          let day = json.daily.data[0];\r\n          return {\r\n            status: 200,\r\n            avgTemp: (5/9) * (((day.temperatureHigh + day.temperatureLow) / 2) - 32),\r\n            uvIndex: day.uvIndex,\r\n            humidity: day.humidity,\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        status: response.status\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      status: 400\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBFormInline,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBSpinner,\r\n} from 'mdbreact';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport gql from 'graphql-tag';\r\n\r\n//> Fetch\r\n// Get lag long from city name\r\nimport getLatLongByCityname from '../../../../utilities/intel/getLatLongByCity.js';\r\n// Get weather by lat/lng\r\nimport getWeatherbyLatLng from '../../../../utilities/intel/getWeatherbyLatLng.js';\r\n\r\n//> CSS\r\nimport './anamnesis.scss';\r\n\r\n//> Queries\r\n// Get forms\r\nconst GET_FORMS = gql`\r\n    query getAnamneseFields($token: String!) {\r\n        pages (token: $token) {\r\n            ... on AnamneseAnFormPage {\r\n                urlPath\r\n                formFields {\r\n                    name\r\n                    fieldType\r\n                    helpText\r\n                    required\r\n                    choices\r\n                    defaultValue\r\n                    label\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Update data\r\nconst UPDATE_FORMS = gql`\r\n    mutation createAn ($token: String!, $values: GenericScalar!, $urlpath: String!) {\r\n        anamneseAnFormPage(\r\n            token: $token,\r\n            url: $urlpath,\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n                name\r\n                errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get anamnesis data\r\nconst GET_DATA = gql`\r\n    query getAnamneseData_byUid($token: String!, $id: Int!) {\r\n        anLatestByUid(token: $token, uid: $id) {\r\n            id\r\n            date\r\n            formData\r\n            user {\r\n                id\r\n                username\r\n            }\r\n            document{\r\n                id\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass Anamnesis extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            urlPath: undefined,\r\n            errors: [],\r\n            refNames: [],\r\n            data: undefined,\r\n            user: undefined,\r\n            success: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Anamnese\";\r\n        \r\n        // Set user variable\r\n        const user = this.props.location.state.user;\r\n        const userdata = this.props.location.state.userdata;\r\n        if(!this.state.user){\r\n            this.setState({\r\n                user,\r\n                userdata,\r\n                uid: user.id\r\n            }, () => this.initialize());\r\n        }\r\n    }\r\n\r\n    initialize = async () => {\r\n        // Get the types and names of the anamnesis fields\r\n        this.getAnamneseFields();\r\n        // Get the actual user data (if existant)\r\n        this.getAnmaneseData();\r\n        // Initialize data fetching\r\n        this.__init();\r\n    }\r\n\r\n    //> Fetching customer data\r\n    __init = () => {\r\n        // Here I need to get the user city and convert it to lag/long\r\n        // We use: https://opencagedata.com/\r\n        let userdata = this.state.userdata;\r\n        if(userdata.city && userdata.country){\r\n            this.__getCityLatLng(userdata.city, userdata.country);\r\n        }\r\n    }\r\n    __getCityLatLng = async (city, country) => {\r\n        let res = await getLatLongByCityname(city, country);\r\n        if(res.status === 200){\r\n            this.__getWeatherData(res.lat, res.lng);\r\n        }\r\n    }\r\n    __getWeatherData = async (lat, lng) => {\r\n        // Get the history data\r\n        // We use: https://darksky.net/\r\n        let res = await getWeatherbyLatLng(lat, lng);\r\n        this.setState({\r\n            weatherAPI: res\r\n        });\r\n    } \r\n\r\n    resetButton = () => {\r\n        // Get the button back to the initial state ready for submit\r\n        if(this.state.success){\r\n            this.setState({\r\n                success: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    getAnamneseFields = () => {\r\n        this.props.client.query({\r\n        query: GET_FORMS,\r\n        variables: { \"token\": localStorage.getItem('fprint') }\r\n        }).then(({data}) => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                data: false\r\n            }, () => console.error(error));\r\n        });\r\n    }\r\n\r\n    getAnmaneseData = () => {\r\n        console.log(this.state.user);\r\n        this.props.client.query({\r\n        query: GET_DATA,\r\n        variables: { \r\n            \"token\": localStorage.getItem('fprint'),\r\n            \"id\": this.state.user.id\r\n        }\r\n        }).then(({data}) => {\r\n            console.log(\"Get anamnesis data\");\r\n            console.log(data);\r\n            // Set the Excel document link\r\n            let documentLink = undefined;\r\n            if(data.anLatestByUid.document){\r\n                if(data.anLatestByUid.document.link){\r\n                    documentLink = \"https://manage.pharmaziegasse.at/\"+data.anLatestByUid.document.link;\r\n                }\r\n            }\r\n            if(data.anLatestByUid){\r\n                let fD = JSON.parse(data.anLatestByUid.formData);\r\n                let res = {};\r\n                console.log(fD);\r\n                // Check if the data type is old\r\n                if(fD.uid.value === undefined){\r\n                    Object.keys(fD).map((field, i) => {\r\n                        res = {\r\n                            ...res,\r\n                            [field]: fD[field] !== null ? fD[field] : undefined\r\n                        }\r\n                        return i;\r\n                    });\r\n                } else {\r\n                    // Convert null to undefined\r\n                    Object.keys(fD).map((field, i) => {\r\n                        res = {\r\n                            ...res,\r\n                            [field]: fD[field] !== null ? fD[field].value : undefined\r\n                        }\r\n                        return i;\r\n                    });\r\n                }\r\n                this.setState({\r\n                    ...this.state,\r\n                    ...res,\r\n                    documentLink,\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                formdata: false\r\n            }, () => console.log(error.message));\r\n        });\r\n    }\r\n\r\n    sendData = async () => {\r\n        // Set values that will be set\r\n        // Normalize data\r\n        let rtn = {};\r\n        this.state.data.pages.map((page, i) => {\r\n            if(page.__typename === \"AnamneseAnFormPage\"){\r\n                page.formFields.map((field, key) => {\r\n                    if(this.state[field.name]){\r\n                        rtn[field.name] = JSON.stringify({\r\n                            helpText: field.helpText,\r\n                            fieldType: field.fieldType,\r\n                            value: this.state[field.name]\r\n                        });\r\n                    } else {\r\n                        rtn[field.name] = JSON.stringify({\r\n                            helpText: field.helpText,\r\n                            fieldType: \"\",\r\n                            value: \"\"\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        console.log(rtn);\r\n\r\n        //rtn = null;\r\n        \r\n        // Check if the form values have been set\r\n        if(rtn !== null && rtn !== undefined && this.state.urlPath !== undefined){\r\n            // Call graphQL mutation\r\n            await this.props.update({\r\n                variables: {\r\n                    \"token\": localStorage.getItem('fprint'),\r\n                    \"values\": rtn,\r\n                    \"urlpath\": this.state.urlPath\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                console.log(data);\r\n                if(data){\r\n                    if(data.anamneseAnFormPage){\r\n                        let page = data.anamneseAnFormPage;\r\n                        if(page.result === \"OK, parsed special input\" || page.result === \"OK\"){\r\n                            this.setState({\r\n                                success: true,\r\n                                errors: [],\r\n                            });\r\n                            // Remove all error messages\r\n                            [].forEach.call(document.querySelectorAll('.alert-error'),function(e){\r\n                                e.parentNode.removeChild(e);\r\n                            });\r\n                        } else if(page.result === \"FAIL\"){\r\n                            console.log(\"Error\");\r\n                            // Write error messages\r\n                            this.setState({\r\n                                success: false,\r\n                            }, () => this.handleError(page.errors));\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Mutation error:\",error);\r\n            })\r\n        }\r\n    };\r\n\r\n    handleError = (errors) => {\r\n        // Clear all previous errors\r\n        this.state.refNames.map((item, i) => {\r\n            const refNode = this[`${item}_ref`].current;\r\n            //refNode.parentNode.removeChild(refNode);\r\n            let refAlert = refNode.querySelector('.alert');\r\n            if(refAlert !== null){\r\n                refNode.removeChild(refAlert);\r\n            }\r\n            return true;\r\n        });\r\n\r\n        if(errors !== undefined){\r\n            if(errors.length >= 1){\r\n                this[`${errors[0].name}_ref`].current.scrollIntoView();\r\n                errors.map((error, i) => {\r\n                    if(error.__typename === \"FormError\"){\r\n                        const node = this[`${error.name}_ref`].current;\r\n                        let elChild = document.createElement('div');\r\n                        elChild.className = 'alert alert-danger alert-error mt-2';\r\n                        elChild.innerHTML = `<i class=\"fa fa-angle-up pr-2\"></i>${error.errors[0]}`;\r\n                        node.appendChild(elChild);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    _handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _handleCheckBoxChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked \r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _handleCheckBoxesChange = (e, name, label) => {\r\n        // Get current active checkboxes\r\n        let current = this.state[name];\r\n        // Check if there currently are active checkboxes\r\n        if(current !== undefined){\r\n            if(current.includes(label)){\r\n                // Remove\r\n                let filtered = current.filter(function(ele){\r\n                    // eslint-disable-next-line\r\n                    return ele != label;\r\n                });\r\n                // Update state\r\n                this.setState({\r\n                    [name]: filtered\r\n                }, () => this.resetButton());\r\n            } else {\r\n                // Add to array\r\n                current.push(label);\r\n                // Update state\r\n                this.setState({\r\n                    [name]: current\r\n                }, () => this.resetButton());\r\n            }\r\n        } else {\r\n            // No active checkboxes - we can only add to the state\r\n            let newCB = [label];\r\n            this.setState({\r\n                [name]: newCB\r\n            }, () => this.resetButton());\r\n        }\r\n    }\r\n\r\n    _handleSelectChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _setDefaultValue = (item, i) => {\r\n        if(item.defaultValue !== \"\" && item.defaultValue !== undefined){\r\n            // CHeck if the state is currently empty - to prevent over writing\r\n            if(this.state[item.fieldType] === undefined\r\n            || this.state[item.fieldType] === \"\" \r\n            || this.state[item.fieldType] === null){\r\n                switch(item.fieldType){\r\n                    case 'multiselect':\r\n                        let multiselect = [];\r\n                        if(item.defaultValue.includes(', ')){\r\n                            multiselect = item.defaultValue.split(', ');\r\n                        } else {\r\n                            multiselect = [item.defaultValue]\r\n                        }\r\n                        if(!this.state[item.name]){\r\n                            this.setState({\r\n                                [item.name]: multiselect\r\n                            })\r\n                        }\r\n                        break;\r\n                    case 'checkboxes':\r\n                        let checkboxes = [];\r\n                        if(item.defaultValue.includes(', ')){\r\n                            checkboxes = item.defaultValue.split(', ');\r\n                        } else {\r\n                            checkboxes = [item.defaultValue]\r\n                        }\r\n                        if(this.state[item.name] === null || this.state[item.name] === undefined){\r\n                            this.setState({\r\n                                [item.name]: checkboxes\r\n                            });\r\n                        }\r\n                        break;\r\n                    case 'checkbox':\r\n                        if(!this.state[item.name]){\r\n                            if(item.defaultValue){\r\n                                this.setState({\r\n                                    [item.name]: true\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    [item.name]: false\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if(!this.state[item.name]){\r\n                            this.setState({\r\n                                [item.name]: item.defaultValue\r\n                            });\r\n                        }\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    getSelectValues = (select) => {\r\n        var result = [];\r\n        var options = select && select.options;\r\n        var opt;\r\n\r\n        for (var i=0, iLen=options.length; i<iLen; i++) {\r\n            opt = options[i];\r\n\r\n            if (opt.selected) {\r\n            result.push(opt.value || opt.text);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    _handleMultiSelectChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: this.getSelectValues(e.target)\r\n        }, () => this.resetButton());\r\n    }\r\n\r\n    _handleNumberClick = (name, type) => {\r\n        // Check if state is empty\r\n        if(this.state[name]){\r\n            this.setState({\r\n                [name] : parseInt(this.state[name],10) + parseInt(type,10)\r\n            }, () => this.resetButton());\r\n        } else {\r\n            this.setState({\r\n                [name] : 0 + parseInt(type,10)\r\n            }, () => this.resetButton());\r\n        }\r\n    }\r\n\r\n    printCheckboxes = (item, i) => {\r\n        let arr = item.choices.split(',');\r\n        return arr.map((name, key) => {\r\n            let n = name.trim().toLowerCase().replace(/ /g,'');\r\n            let display = name.trim();\r\n                return(\r\n                    <MDBInput\r\n                    key={key}\r\n                    checked={this.state[item.name] && this.state[item.name].includes(display) ? (true) : (false)}\r\n                    name={n}\r\n                    onChange={(e) => this._handleCheckBoxesChange(e, item.name, display)}\r\n                    label={display}\r\n                    filled\r\n                    type=\"checkbox\"\r\n                    id={\"fromGroupInput\"+i+\"\"+key}\r\n                    />\r\n                );\r\n        });\r\n    }\r\n\r\n    printRadio = (choices, container, required, i) => {\r\n        let arr = choices.split(',');\r\n        return arr.map((name, key) => {\r\n            let n = name.trim().toLowerCase().replace(/ /g,'');\r\n            let display = name.trim();\r\n            return(\r\n                <MDBInput\r\n                onClick={() => this.setState({[container]: display}, () => this.resetButton())}\r\n                checked={this.state[container] && this.state[container] === display ? true : false}\r\n                label={display}\r\n                key={key}\r\n                name={n}\r\n                type=\"radio\"\r\n                id={\"radio\"+i+\"\"+key}\r\n                required={required}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    printOptions = (choices, i) => {\r\n        let arr = choices.split(',');\r\n        return arr.map((name, key) => {\r\n            //let n = name.trim().toLowerCase().replace(/ /g,'');\r\n            let display = name.trim();\r\n            return(\r\n                <option key={key} value={display}>{display}</option>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderFields = () => {\r\n        let data = this.state.data;\r\n\r\n        // Loading\r\n        if (data === undefined) {\r\n            console.log(\"Loading\");\r\n            return (<div className=\"text-center\"><MDBSpinner /></div>);\r\n        }\r\n        // Error\r\n        if (data === false) {\r\n            return (<div>Error!</div>);\r\n        }\r\n\r\n        if(data !== undefined){\r\n            if(data.pages !== undefined){\r\n                // Get key\r\n                let key = undefined;\r\n                data.pages.map((item, i) => {\r\n                    if(item.__typename === \"AnamneseAnFormPage\"){\r\n                        key = i;\r\n                    }\r\n                    return true;\r\n                });\r\n                \r\n                // Check if the FormPage exists\r\n                if(key !== undefined){\r\n                    // Set urlpath (where to send data)\r\n                    if(this.state.urlPath === undefined){\r\n                        this.setState({\r\n                            urlPath: data.pages[key].urlPath\r\n                        });\r\n                    }\r\n\r\n                    let formfields = data.pages[key].formFields;\r\n                    \r\n                    return formfields.map((item, i) => {\r\n                        this[`${item.name}_ref`] = React.createRef();\r\n\r\n                        // Debugging\r\n                        //console.log(item);\r\n\r\n                        // Store the names of all items for refs\r\n                        if(!this.state.refNames.includes(item.name)){\r\n                            this.setState(previousState => ({\r\n                                refNames: [...previousState.refNames, item.name]\r\n                            }));\r\n                        }\r\n\r\n                        this._setDefaultValue(item, i);\r\n                        switch(item.fieldType.toLowerCase()){\r\n                            case \"singleline\":\r\n                                // TEXT Input\r\n                                return(\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group my-3\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                        {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state[item.name]}\r\n                                            onChange={this._handleChange}\r\n                                            name={item.name}\r\n                                            className=\"form-control\"\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            required={item.required}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            case \"hidden\":\r\n                                // HIDDEN Input\r\n                                return(\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group my-3 d-none\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                        {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state[item.name]}\r\n                                            name={item.name}\r\n                                            className=\"form-control\"\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            case \"number\":\r\n                                // NUMBER Input\r\n                                return(\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <div\r\n                                        className=\"\r\n                                        def-number-input\r\n                                        number-input\r\n                                        mb-3\"\r\n                                        >\r\n                                            <button\r\n                                            onClick={() => this._handleNumberClick(item.name,-1)}\r\n                                            className=\"minus\">\r\n                                            </button>\r\n                                            <input\r\n                                            name={item.name}\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            value={this.state[item.name]}\r\n                                            onChange={this._handleChange}\r\n                                            type=\"number\"\r\n                                            />\r\n                                            <button\r\n                                            onClick={() => this._handleNumberClick(item.name,1)}\r\n                                            className=\"plus\">\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            case \"checkbox\":\r\n                                // CHECKBOX Input\r\n                                return(\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <MDBInput\r\n                                        checked={this.state[item.name]}\r\n                                        name={item.name}\r\n                                        onChange={this._handleCheckBoxChange}\r\n                                        label={item.label && item.label}\r\n                                        filled\r\n                                        type=\"checkbox\"\r\n                                        id={\"fromGroupInput\"+i}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            case \"checkboxes\":\r\n                                // CHECKBOXES Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                            <MDBFormInline>\r\n                                            {this.printCheckboxes(item, i)}\r\n                                            </MDBFormInline>\r\n                                    </div>\r\n                                );\r\n                            case \"dropdown\":\r\n                                // SELECT Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <div>\r\n                                            <select\r\n                                            name={item.name}\r\n                                            selected={this.state[item.name]}\r\n                                            onChange={this._handleSelectChange}\r\n                                            className=\"browser-default custom-select\">\r\n                                            <option>Choose your option</option>\r\n                                            {this.printOptions(item.choices, i)}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            case \"multiselect\":\r\n                                // MULTI SELECT Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <div>\r\n                                            <select\r\n                                            multiple name={item.name}\r\n                                            selected={this.state[item.name]}\r\n                                            onChange={this._handleMultiSelectChange}\r\n                                            className=\"browser-default custom-select\"\r\n                                            >\r\n                                            <option>Choose your option</option>\r\n                                            {this.printOptions(item.choices, i)}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            case \"radio\":\r\n                                // RADIO Input\r\n                                return (\r\n                                    <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        {item.name === \"temperatur\" &&\r\n                                        <>\r\n                                        {this.state.weatherAPI && this.state.weatherAPI.status === 200 &&\r\n                                        <span className=\"text-muted\">\r\n                                        Durchschnittstemperatur am \r\n                                        Kundenstandort: {this.state.weatherAPI.avgTemp.toFixed(2)} °C\r\n                                        <br/>\r\n                                        <small>Powered by Dark Sky</small>\r\n                                        </span>\r\n                                        }\r\n                                        </>\r\n                                        }\r\n                                        {item.name === \"luftfeuchtigkeit\" &&\r\n                                        <>\r\n                                        {this.state.weatherAPI && this.state.weatherAPI.status === 200 &&\r\n                                        <span className=\"text-muted\">\r\n                                        Absolute Luftfeuchtigkeit am \r\n                                        Kundenstandort: {this.state.weatherAPI.humidity.toFixed(2)} g/m<sup>3</sup>\r\n                                        <br/>\r\n                                        <small>Powered by Dark Sky</small>\r\n                                        </span>\r\n                                        }\r\n                                        </>\r\n                                        }\r\n                                        {item.name === \"uv-index\" &&\r\n                                        <>\r\n                                        {this.state.weatherAPI && this.state.weatherAPI.status === 200 &&\r\n                                        <span className=\"text-muted\">\r\n                                        UV Index am \r\n                                        Kundenstandort: {this.state.weatherAPI.uvIndex} \r\n                                        <br/>\r\n                                        <small>Powered by Dark Sky</small>\r\n                                        </span>\r\n                                        }\r\n                                        </>\r\n                                        }\r\n                                        <MDBFormInline>\r\n                                            {this.printRadio(\r\n                                                item.choices,\r\n                                                item.name,\r\n                                                item.required,\r\n                                                i\r\n                                            )}\r\n                                        </MDBFormInline>\r\n                                    </div>\r\n                                );\r\n                            case \"multiline\":\r\n                                // MULTILINE TEXT Input\r\n                                return (\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                            {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <textarea\r\n                                        className=\"form-control\"\r\n                                        value={this.state[item.name]}\r\n                                        onChange={this._handleChange}\r\n                                        name={item.name}\r\n                                        id={\"fromGroupInput\"+i}\r\n                                        rows=\"5\"\r\n                                        required={item.required}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            default:\r\n                                return(\r\n                                    <div \r\n                                    ref={this[`${item.name}_ref`]}\r\n                                    key={i}\r\n                                    className=\"form-group\"\r\n                                    >\r\n                                        <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                        {item.helpText && item.helpText}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state[item.name]}\r\n                                            onChange={this._handleChange}\r\n                                            name={item.name}\r\n                                            className=\"form-control\"\r\n                                            id={\"fromGroupInput\"+i}\r\n                                            required={item.required}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    });\r\n                }else {\r\n                    return null;\r\n                }\r\n                \r\n            }else {\r\n                return null;  \r\n            }\r\n        }else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState, location } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n        // Check if the state has been set in the parent component\r\n        if(location.state === undefined){\r\n            return <Redirect to=\"/coach\"/> \r\n        } else {\r\n            if(location.state.user === undefined){\r\n                return <Redirect to=\"/coach\"/> \r\n            }\r\n        }\r\n\r\n        console.log(this.state);\r\n\r\n        if(!this.state.user){\r\n            return(\r\n                <div className=\"text-center\"><MDBSpinner /></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <MDBContainer id=\"anamnesis\" className=\"text-left pt-5\">\r\n                    <h2 className=\"mb-5 text-center\">Anamnese für{\" \"}\r\n                    {this.state.user.firstName+\" \"+this.state.user.lastName}\r\n                    </h2>\r\n                    <MDBRow className=\"mt-4\">\r\n                    <MDBCol md=\"6\" className=\"text-left\">\r\n                        <Link to=\"/coach\">\r\n                            <MDBBtn color=\"red\">\r\n                                <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                            </MDBBtn>\r\n                        </Link>\r\n                        {!this.state.success ? (\r\n                            <MDBBtn\r\n                            color=\"primary\"\r\n                            onClick={this.sendData}\r\n                            >\r\n                                <MDBIcon icon=\"save\" className=\"pr-2\" />\r\n                                Speichern\r\n                            </MDBBtn>\r\n                        ) : (\r\n                            <MDBBtn\r\n                            color=\"success\"\r\n                            disabled\r\n                            >\r\n                                <MDBIcon icon=\"check\" className=\"pr-2\" />\r\n                                Gespeichert\r\n                            </MDBBtn>\r\n                        )}\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\" className=\"text-right\">\r\n                        {this.state.documentLink &&\r\n                            <MDBBtn\r\n                            color=\"green\"\r\n                            onClick={this.sendData}\r\n                            href={this.state.documentLink}\r\n                            tag=\"a\"\r\n                            target=\"_blank\"\r\n                            >\r\n                                <MDBIcon far icon=\"file-excel\" className=\"pr-2\" />\r\n                                Download Excel\r\n                            </MDBBtn>\r\n                        }\r\n                        \r\n                    </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow className=\"mb-4\">\r\n                        <MDBCol md=\"8\">\r\n                            {this.renderFields()}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                    {!this.state.success ? (\r\n                        <MDBBtn\r\n                        color=\"primary\"\r\n                        onClick={this.sendData}\r\n                        >\r\n                            <MDBIcon icon=\"save\" className=\"pr-2\" />\r\n                            Speichern\r\n                        </MDBBtn>\r\n                    ) : (\r\n                        <MDBBtn\r\n                        color=\"success\"\r\n                        disabled\r\n                        >\r\n                            <MDBIcon icon=\"check\" className=\"pr-2\" />\r\n                            Gespeichert\r\n                        </MDBBtn>\r\n                    )}\r\n                </MDBContainer>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default graphql(UPDATE_FORMS, {\r\n    name: 'update'\r\n})(withApollo(Anamnesis));\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"style\", null, \".cls-1{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:10px;}\"));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M174,451.47a228.62,228.62,0,0,1-7-56.24C167,269.17,269.17,167,395.23,167S623.49,269.17,623.49,395.23a228.6,228.6,0,0,1-7.67,58.88\"\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 395.23,\n  y1: 83.3,\n  x2: 395.23,\n  y2: 1.5\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 174.66,\n  y1: 174.66,\n  x2: 116.82,\n  y2: 116.82\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 615.8,\n  y1: 174.66,\n  x2: 673.65,\n  y2: 116.82\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 707.17,\n  y1: 344.87,\n  x2: 788.97,\n  y2: 344.87\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 1.5,\n  y1: 344.87,\n  x2: 83.3,\n  y2: 344.87\n}), React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M771.07,517c-139.5-57.13-202.42-77.72-375.84-80.41\"\n}), React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M19.4,517c139.5-57.13,202.42-77.72,375.83-80.41\"\n})));\n\nvar SvgMorning = function SvgMorning(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 790.47 518.46\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMorning, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/morning.03b320bf.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"style\", null, \".cls-1{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:10px;}\"));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, React.createElement(\"circle\", {\n  className: \"cls-1\",\n  cx: 343.22,\n  cy: 343.22,\n  r: 198.1,\n  transform: \"translate(-142.17 343.22) rotate(-45)\"\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 343.22,\n  y1: 72.5,\n  x2: 343.22,\n  y2: 1.5\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 343.22,\n  y1: 684.95,\n  x2: 343.22,\n  y2: 613.95\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 151.79,\n  y1: 151.79,\n  x2: 101.59,\n  y2: 101.59\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 584.86,\n  y1: 584.86,\n  x2: 534.66,\n  y2: 534.66\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 534.66,\n  y1: 151.79,\n  x2: 584.86,\n  y2: 101.59\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 101.59,\n  y1: 584.86,\n  x2: 151.79,\n  y2: 534.66\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 613.95,\n  y1: 343.23,\n  x2: 684.95,\n  y2: 343.23\n}), React.createElement(\"line\", {\n  className: \"cls-1\",\n  x1: 1.5,\n  y1: 343.23,\n  x2: 72.5,\n  y2: 343.23\n})));\n\nvar SvgDay = function SvgDay(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 686.45 686.45\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDay, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/day.89a38969.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"style\", null, \".cls-1{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:10px;}\"));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M437.44,469.11A264.26,264.26,0,0,1,241,530.28C95.27,516.14-11.38,386.55,2.76,240.85c13-134.12,123.83-235.14,255-239.35\"\n}), React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M437.44,469.11c-11.73.43-24.62.91-36.63-.25-145.7-14.14-252.36-143.73-238.22-289.44,7-72.19,43.57-134.84,95.17-177.92\"\n}), React.createElement(\"polyline\", {\n  className: \"cls-1\",\n  points: \"416.91 47.22 381.18 75.98 339.78 64.72 356.97 104.61 330.3 143.13 376.5 139.18\"\n}), React.createElement(\"polyline\", {\n  className: \"cls-1\",\n  points: \"416.91 47.22 419.89 93 456.19 115.88 415.18 130.19 404.83 175.88 376.5 139.18\"\n}), React.createElement(\"polyline\", {\n  className: \"cls-1\",\n  points: \"377.57 310.15 359.77 285.49 368.67 258.46 341.65 268.46 317.07 249.45 318.08 280.19\"\n}), React.createElement(\"polyline\", {\n  className: \"cls-1\",\n  points: \"377.57 310.15 347.15 310.53 330.74 333.77 322.69 306.11 292.78 297.67 318.08 280.19\"\n})));\n\nvar SvgNight = function SvgNight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 457.69 533.04\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgNight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/night.4cdcc188.svg\";\nexport { ForwardRef as ReactComponent };","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional\r\n// Fetching API\r\nimport axios from 'axios';\r\n// Validator\r\nimport validator from 'validator';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBDataTable,\r\n    MDBTooltip,\r\n} from 'mdbreact';\r\n\r\n//> CSS\r\nimport './coachdashboard.scss';\r\n\r\n//> Images\r\nimport { ReactComponent as MorningImg } from  '../../../../assets/icons/morning.svg';\r\nimport { ReactComponent as DayImg } from  '../../../../assets/icons/day.svg';\r\nimport { ReactComponent as NightImg } from  '../../../../assets/icons/night.svg';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nimport * as compose from 'lodash.flowright';\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\n//> Queries\r\n// Get data\r\nconst GET_DATA = gql`\r\n    query ($token: String!) {\r\n        userSelf(token: $token) {\r\n            id\r\n            userSet{\r\n                anamneseSet{\r\n                    id\r\n                }\r\n                beautyreportSet{\r\n                    id\r\n                }\r\n                id\r\n                customerId\r\n                dateJoined\r\n                firstName\r\n                lastName\r\n                email\r\n                telephone\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get all users\r\nconst GET_USERS_ALL = gql`\r\n    query ($token: String!) {\r\n        userAll(token: $token) {\r\n        id\r\n        telephone\r\n        email\r\n        firstName\r\n        lastName\r\n        address\r\n        dateJoined\r\n        city\r\n        country\r\n        postalCode\r\n        newsletter\r\n        isCustomer\r\n        userSet{\r\n            anamneseSet{\r\n            id\r\n            }\r\n            beautyreportSet{\r\n                id\r\n                }\r\n                id\r\n                customerId\r\n                firstName\r\n                lastName\r\n                email\r\n                telephone\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Create new user\r\nconst CREATE_USER = gql`\r\n    mutation createUser ($token: String!, $urlPath: String!, $values: GenericScalar!) {\r\n        userUserFormPage(\r\n            token: $token,\r\n            url: $urlPath,\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst clientNoCache = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: 'https://manage.pharmaziegasse.at/api/graphql'\r\n    }),\r\n    cache: new InMemoryCache(),\r\n    defaultOptions: {\r\n        query: {\r\n            fetchPolicy: 'network-only',\r\n            errorPolicy: 'all',\r\n        },\r\n    }\r\n});\r\nconst clientOnlyCache = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: 'https://manage.pharmaziegasse.at/api/graphql'\r\n    }),\r\n    cache: new InMemoryCache(),\r\n    defaultOptions: {\r\n        query: {\r\n            fetchPolicy: 'cache-first',\r\n            errorPolicy: 'all',\r\n        },\r\n    }\r\n});\r\n\r\nclass CoachDashboard extends React.Component{\r\n\r\n    state = {}\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Your customers\";\r\n        // Refetch users\r\n        this._loginUser();\r\n        this._fetchUsersFirstTime();\r\n\r\n        // Get custom greeting info\r\n        this.getGreetingImg();\r\n        this.getGreetingQuote();\r\n    }\r\n\r\n    syncManually = () => {\r\n        this.setState({\r\n            syncing: true\r\n        });\r\n        this._fetchUsersWithoutCache();\r\n        this._fetchNodeUsers(this.state.jwt);\r\n    }\r\n\r\n    _fetchNodeUsers = (token) => {\r\n        const config = {\r\n            headers: {'Authorization': \"bearer \" + token}\r\n        };\r\n\r\n        axios.get( \r\n        'https://charmnode.herokuapp.com/users',\r\n        config\r\n        ).then((response) => {\r\n            if(response.status === 200){\r\n                let customers = response.data.customers;\r\n                // Fetch all Charm users and pass shopify users\r\n                this._fetchAllUsers(customers);\r\n            } else if(response.status === 401 || response.status === 403){\r\n                // Forbidden (token invalid)\r\n                this._loginUser();\r\n            } else {\r\n                this.setState({\r\n                    syncing: false\r\n                }, () => console.log(\"Error\",response));\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({\r\n                syncing: false\r\n            }, () => console.log(\"Error\",error));\r\n        });\r\n    }\r\n\r\n    _loginUser = () => {\r\n        // Start syncing animation\r\n        if(!this.state.syncing){\r\n            this.setState({\r\n                syncing: true\r\n            });\r\n        }\r\n\r\n        // Login to get JWT\r\n        axios.post(\"https://charmnode.herokuapp.com/login\", {\r\n            \"username\": process.env.REACT_APP_NODE_USER,\r\n            \"password\": process.env.REACT_APP_NODE_PASS\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                this.setState({\r\n                    jwt: response.data.token\r\n                }, () => this._fetchNodeUsers(response.data.token));\r\n            } else {\r\n                this.setState({\r\n                    syncing: false\r\n                }, () => console.log(\"Error\",response));\r\n            }\r\n        }, (error) => {\r\n            this.setState({\r\n                syncing: false\r\n            }, () => console.log(\"Error\",error));\r\n        });\r\n    }\r\n\r\n    _fetchUsersWithoutCache = () => {\r\n        clientNoCache.query({\r\n            query: GET_DATA,\r\n            variables: { \"token\": localStorage.getItem(\"fprint\") }\r\n        }).then(({data}) => {\r\n            console.log(\"Fetched data directly from server.\");\r\n            if(data.userSelf){\r\n                this.setState({\r\n                    coachusers: {\r\n                        userdata: data.userSelf\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                syncing: false\r\n            }, () => console.log(\"Error\",error));\r\n        })\r\n    }\r\n\r\n    _fetchUsersFirstTime = () => {\r\n        clientOnlyCache.query({\r\n            query: GET_DATA,\r\n            variables: { \"token\": localStorage.getItem(\"fprint\") }\r\n        }).then(({data}) => {\r\n            console.log(\"Fetched data from cache.\");\r\n            if(data.userSelf){\r\n                this.setState({\r\n                    coachusers: {\r\n                        userdata: data.userSelf\r\n                    }\r\n                }, () => this._fetchUsersWithoutCache());\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                syncing: false\r\n            }, () => console.log(\"Error\",error));\r\n        })\r\n    }\r\n    \r\n    _fetchAllUsers = (customers) => {\r\n        clientNoCache.query({\r\n            query: GET_USERS_ALL,\r\n            variables: { \"token\": localStorage.getItem(\"fprint\") }\r\n        }).then(({data}) => {\r\n            let users = data.userAll;\r\n            this._getDifference(users, customers);\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                syncing: false\r\n            }, () => console.log(\"Error\",error));\r\n        })\r\n    }\r\n\r\n    _getDifference = (users, customers) => {\r\n        // Check if user is in Shopify but not in Charm\r\n        let selection = customers.map((customer, i) => {\r\n            if(users.some(user => user.telephone === customer.phone)){\r\n                // User already exists\r\n                return undefined;\r\n            } else{\r\n                // User does not exist\r\n                return customer;\r\n            }\r\n        })\r\n\r\n        // Remove all undefined entries from array\r\n        selection = selection.filter(function(item){\r\n            return typeof item !== 'undefined';  \r\n        });\r\n\r\n        selection.map((customer, i) => {\r\n            this._createUser(customer);\r\n        });\r\n\r\n        this.setState({\r\n            syncing: undefined\r\n        });\r\n    }\r\n\r\n    _createUser = (data) => {\r\n        // Get all values and prepare them for API handling\r\n        const values = {\r\n            \"title\": undefined,\r\n            \"coach_id\": 2,\r\n            \"first_name\": data.first_name,\r\n            \"last_name\": data.last_name,\r\n            \"email\": data.email ? data.email : undefined,\r\n            \"birthdate\": undefined,\r\n            \"telephone\": data.phone ? data.phone : undefined,\r\n            \"address\": data.default_address.address1 ? data.default_address.address1 : undefined,\r\n            \"city\": data.default_address.city ? data.default_address.city : undefined,\r\n            \"postal_code\": data.default_address.province_code ? data.default_address.province_code : undefined,\r\n            \"country\": data.default_address.country_code ? data.default_address.country_code : undefined,\r\n            \"newsletter\": data.accepts_marketing ? true : false,\r\n            \"verified\": data.verified_email ? true : false,\r\n            \"customer_id\": data.id\r\n        }\r\n            this.props.create({\r\n                variables: { \r\n                    \"token\": localStorage.getItem(\"fprint\"),\r\n                    \"urlPath\": \"/internal/user-registration-page\",\r\n                    \"values\": values\r\n                }\r\n            }).then(({data}) => {\r\n                console.log(data);\r\n                \r\n                // Check if selected coach is current coach\r\n                if(true){\r\n                    // Refetch users so the list is up to date\r\n                    this._fetchUsersWithoutCache();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error\",error);\r\n            })\r\n    }\r\n\r\n    getGreetingImg = () => {\r\n        // Get date\r\n        let today = new Date()\r\n        // Get current hours\r\n        let curHr = today.getHours()\r\n\r\n        if (curHr < 11) {\r\n            this.setState({greetingImage: <MorningImg className=\"img-fluid\" />});\r\n        } else if (curHr < 18) {\r\n            this.setState({greetingImage: <DayImg className=\"img-fluid\" />});\r\n        } else {\r\n            this.setState({greetingImage: <NightImg className=\"img-fluid\" />});\r\n        }\r\n    }\r\n\r\n    getGreetingQuote = () => {\r\n        const quotes = [\r\n            {\r\n                text: `Concentrate all your thoughts upon the work in hand. The sun's rays do not burn until brought \r\n                to a focus.`,\r\n                author: \"Alexander Graham Bell\"\r\n            },\r\n            {\r\n                text: `Either you run the day or the day runs you.`,\r\n                author: \"Jim Rohn\"\r\n            },\r\n            {\r\n                text: `When we strive to become better than we are, everything around us becomes better too.`,\r\n                author: \"Paulo Coelho\"\r\n            },\r\n            {\r\n                text: `Opportunity is missed by most people because it is dressed in overalls and looks like work.`,\r\n                author: \"Thomas Edison\"\r\n            },\r\n            {\r\n                text: `Just one small positive thought in the morning can change your whole day.`,\r\n                author: \"Dalai Lama\"\r\n            },\r\n            {\r\n                text: `The future depends on what you do today.`,\r\n                author: \"Mahatma Gandhi\"\r\n            }\r\n        ];\r\n\r\n        const random = Math.floor(Math.random() * ((quotes.length - 1)));\r\n\r\n        this.setState({\r\n            greetingQuote: (\r\n                <div className=\"text-center\">\r\n                    <small>\r\n                        <q>{quotes[random].text}</q>\r\n                    </small>\r\n                    <small className=\"pl-2\">\r\n                        —{quotes[random].author}\r\n                    </small>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    getGreetingTxt = () => {\r\n        // Get date\r\n        let today = new Date()\r\n        // Get current hours\r\n        let curHr = today.getHours()\r\n\r\n        // Store selected greeting\r\n        let selected = null;\r\n\r\n        if (curHr < 11) {\r\n            selected = <span>Guten Morgen</span>;\r\n        } else if (curHr < 18) {\r\n            selected = <span>Willkommen zurück</span>;\r\n        } else {\r\n            selected = <span>Guten Abend</span>;\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    _getCoachUsers = () => {\r\n        let coach = this.state.coachusers;\r\n\r\n        console.log(\"State\",coach);\r\n        \r\n        if(coach){\r\n            if(coach.userdata){\r\n                let userSet = coach.userdata.userSet;\r\n                if(userSet.length >= 1){\r\n\r\n                    userSet.sort((a, b) => (a.dateJoined < b.dateJoined) ? 1 : -1)\r\n\r\n                    let users = userSet.map((user, i) => {\r\n                        return({\r\n                            'userid': user.customerId ? user.customerId : \"00000\",\r\n                            'first': user.firstName,\r\n                            'last': user.lastName,\r\n                            'email': <a href={\"mailto:\"+user.email} className=\"blue-text\">{user.email}</a>,\r\n                            'phone': user.telephone,\r\n                            'actions':\r\n                            <div className=\"user-action\">\r\n                                {user.beautyreportSet.length >= 1 ? (\r\n                                    <Link \r\n                                    to={{\r\n                                    pathname: '/report',\r\n                                    state: {\r\n                                        user: user\r\n                                    }\r\n                                    }}\r\n                                    >\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn rounded outline color=\"green\">\r\n                                            <MDBIcon icon=\"signature\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Beautyreports einsehen\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    </Link>\r\n                                ) : (\r\n                                    <Link \r\n                                    to={{\r\n                                    pathname: '/report/add',\r\n                                    state: {\r\n                                        user: user\r\n                                    }\r\n                                    }}\r\n                                    >\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn rounded outline color=\"danger\">\r\n                                            <MDBIcon icon=\"signature\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Beautyreport erstellen\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    </Link>\r\n                                )}\r\n                                <Link \r\n                                to={{\r\n                                pathname: '/anamnesis',\r\n                                state: {\r\n                                    user: user,\r\n                                    userdata: this.props.globalState.userdata\r\n                                }\r\n                                }}\r\n                                >\r\n                                {\r\n                                    user.anamneseSet.length >= 1 ? (\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn outline rounded color=\"purple\">\r\n                                                <MDBIcon icon=\"file\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Anamnese erneuern\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    ) : (\r\n                                        <MDBTooltip\r\n                                            placement=\"top\"\r\n                                        >\r\n                                            <MDBBtn outline rounded color=\"danger\">\r\n                                                <MDBIcon far icon=\"file\" size=\"lg\" />\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                Anamnese hinzufügen\r\n                                            </div>\r\n                                        </MDBTooltip>\r\n                                    )\r\n                                }\r\n                                </Link>\r\n                                <MDBTooltip\r\n                                    placement=\"top\"\r\n                                >\r\n                                <MDBBtn\r\n                                href={\"https://api.whatsapp.com/send?phone=\"+user.telephone.replace('+','')}\r\n                                target=\"_blank\"\r\n                                className={true === false ? \"btn-whatsapp-chat notification\" : \"btn-whatsapp-chat\"}\r\n                                outline\r\n                                rounded\r\n                                color=\"success\"\r\n                                >\r\n                                    <MDBIcon fab icon=\"whatsapp\" size=\"lg\" />\r\n                                </MDBBtn>\r\n                                <div>\r\n                                    Mit {user.firstName} chatten\r\n                                </div>\r\n                                </MDBTooltip>\r\n                            </div>\r\n                        })\r\n                    });\r\n                    return users;\r\n                } else {\r\n                    console.log(\"No users for this coach\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTable = () => {\r\n        return({\r\n                columns: [\r\n            {\r\n                label: 'Customer ID',\r\n                field: 'userid',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'First',\r\n                field: 'first',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'Last',\r\n                field: 'last',\r\n                sort: 'asc'\r\n            },\r\n            {\r\n                label: 'E-Mail',\r\n                field: 'email',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Phone',\r\n                field: 'phone',\r\n                sort: 'disabled'\r\n            },\r\n            {\r\n                label: 'Quick actions',\r\n                field: 'actions',\r\n                sort: 'disabled'\r\n            }\r\n        ],\r\n        rows: this._getCoachUsers()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n        return(\r\n            <div id=\"coach\">\r\n                <div className=\"greeting py-5\">\r\n                    {this.state.greetingImage}\r\n                    <h2 className=\"text-center font-weight-bold\">\r\n                    {this.getGreetingTxt()}, <span>{globalState.userdata.firstName}</span>!\r\n                    </h2>\r\n                    {this.state.greetingQuote}\r\n                </div>\r\n                <div className=\"mb-4 py-4 greeting-actions\">\r\n                    <MDBContainer>\r\n                        <MDBRow className=\"flex-center text-center\">\r\n                            <MDBCol md=\"6\">\r\n                                <p className=\"lead\">\r\n                                <MDBIcon icon=\"bolt\" className=\"pr-2 orange-text\"/>\r\n                                Quick actions\r\n                                </p>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"6\">\r\n                                <MDBBtn \r\n                                color={!this.state.syncing ? ( \r\n                                    this.state.syncing === false ? \"danger\" : \"blue\" \r\n                                ) : \"cyan\"} \r\n                                onClick={this.syncManually}\r\n                                disabled={this.state.syncing ? true : false}\r\n                                >\r\n                                {!this.state.syncing ? (\r\n                                    <>\r\n                                    {this.state.syncing === false ? (\r\n                                        <MDBIcon icon=\"times-circle\" className=\"mr-2\"/>\r\n                                    ) : (\r\n                                        <MDBIcon icon=\"sync-alt\" className=\"pr-2\"/>\r\n                                    )}\r\n                                    </>\r\n                                    \r\n                                ) : (\r\n                                    <MDBIcon icon=\"sync-alt fa-spin\" className=\"mr-2\"/>\r\n                                )}\r\n                                {!this.state.syncing ? ( \r\n                                    this.state.syncing === false ? \"Try again\" : \"Sync\" \r\n                                ): ( \r\n                                    \"Syncing\" \r\n                                )}\r\n                                </MDBBtn>\r\n                                {globalState.userdata.email === \"s.santer@pharmaziegasse.at\" &&\r\n                                <a href=\"https://manage.pharmaziegasse.at\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <MDBBtn color=\"primary\">\r\n                                        <MDBIcon icon=\"dove\" className=\"pr-2\"/>Wagtail CMS\r\n                                    </MDBBtn>\r\n                                </a>\r\n                                }\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                </div>\r\n                <MDBContainer>\r\n                    <MDBRow className=\"text-center\">\r\n                        <MDBCol md=\"12\">\r\n                            <h3>Deine KundInnen</h3>\r\n                            <div className=\"table-labels\">\r\n                            <span><MDBIcon icon=\"cube\" className=\"pr-1 pl-3 red-text\"/>\r\n                            Keine Daten vorhanden\r\n                            </span>\r\n                            <span><MDBIcon icon=\"cube\" className=\"pr-1 pl-3 purple-text\"/>\r\n                            Keine Aktion erforderlich\r\n                            </span>\r\n                            <span><MDBIcon icon=\"cube\" className=\"pr-1 pl-3 green-text\"/>\r\n                            Daten vorhanden\r\n                            </span>\r\n                            </div>\r\n                            <MDBDataTable\r\n                            striped\r\n                            bordered\r\n                            small\r\n                            exportToCSV\r\n                            data={this._getTable()}\r\n                            paginationLabel={[\r\n                                <MDBIcon icon=\"angle-left\" size=\"lg\" className=\"pl-3 pr-3\" />,\r\n                                <MDBIcon icon=\"angle-right\" size=\"lg\" className=\"pl-3 pr-3\" />\r\n                            ]}\r\n                            />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(CREATE_USER, { name: 'create' }),\r\n)(withApollo(CoachDashboard));\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Phone input\r\nimport ReactPhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css'\r\n// Country list\r\nimport countryList from 'react-select-country-list';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport * as compose from 'lodash.flowright';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBDatePicker,\r\n    MDBSelect,\r\n    MDBSpinner,\r\n    MDBAlert,\r\n} from 'mdbreact';\r\n\r\n//> CSS\r\nimport './newcustomer.scss';\r\n\r\n// Country list\r\nconst countries = countryList().getData();\r\n\r\n// Update data\r\nconst UPDATE_FORMS = gql`\r\n    mutation createUser ($token: String!, $urlPath: String!, $values: GenericScalar!) {\r\n        userUserFormPage(\r\n            token: $token,\r\n            url: $urlPath,\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_COACHES = gql`\r\n    query ($token: String!) {\r\n        coachAll(token: $token) {\r\n            id\r\n            firstName\r\n            lastName\r\n        }\r\n        pages (token: $token) {\r\n            ... on UserUserFormPage {\r\n                urlPath\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass NewCustomer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            coach: [],\r\n            verified: false,\r\n            title: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            birthdate: \"\",\r\n            phone: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            zip: \"\",\r\n            country: \"\",\r\n            Coaches: [],\r\n            Countries: [],\r\n            usePhoneAsCountry: true,\r\n            phoneCountry: [],\r\n            urlPath: undefined,\r\n            error: false,\r\n            success: false,\r\n            errors: {},\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._fetchAllCoaches();\r\n        this._fetchAllCountries();\r\n\r\n        // Set page title\r\n        document.title = \"New Customer\";\r\n    }\r\n    \r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handlePhoneChange = (value, country) => {\r\n        // Remove spaces from phone number\r\n        value = value.replace(/\\s/g,'');\r\n        if(this.state.usePhoneAsCountry){\r\n            this.setState({\r\n                phone: value.trim(),\r\n                country: {\r\n                    name: country.name,\r\n                    countryCode: country.countryCode.toUpperCase()\r\n                },\r\n                phoneCountry: {\r\n                    name: country.name,\r\n                    countryCode: country.countryCode.toUpperCase()\r\n                },\r\n            });\r\n        } else {\r\n            this.setState({\r\n                phone: value.trim(),\r\n                phoneCountry: {\r\n                    name: country.name,\r\n                    countryCode: country.countryCode.toUpperCase()\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePhoneByCountry = (e) => {\r\n        if(e.target.checked){\r\n            this.setState({ \r\n                usePhoneAsCountry: e.target.checked,\r\n                country: this.state.phoneCountry\r\n            });\r\n        } else {\r\n            this.setState({ \r\n                usePhoneAsCountry: e.target.checked,\r\n                country: []\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    getPickerValue = (value) => {\r\n        // Note: Handling dates in JavaScript is like hunting K'lor'slugs on Korriban. A huge waste of time.\r\n        let dateS = new Date(value);\r\n\r\n        // Get the year\r\n        let year = dateS.getFullYear();\r\n        // Get the month ( January is 0! )\r\n        let month = (\"0\" + (dateS.getMonth() + 1)).slice(-2);\r\n        // Get the day of the month\r\n        let day = (\"0\" + (dateS.getDate())).slice(-2);\r\n\r\n        /**\r\n         * Combine to achieve YYYY-MM-DD format like Captain Planet.\r\n         * LET OUR POWERS COMBINE!\r\n         * You certainly feel like Captain Planet when you get it to work.\r\n         */ \r\n        let date = year+\"-\"+month+\"-\"+day;\r\n\r\n        this.setState({\r\n            birthdate: date\r\n        });\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({\r\n            coach: value\r\n        });\r\n    }\r\n\r\n    handleCountrySelectChange = (value) => {\r\n        this.setState({\r\n            country: {\r\n                name: \"\",\r\n                countryCode: value[0]\r\n            }\r\n        });\r\n    }\r\n\r\n    _fetchAllCountries = () => {\r\n        let allCountries = countries.map((c, i) => {\r\n            return({\r\n                text: c.label,\r\n                value: c.value\r\n            });\r\n        });\r\n        this.setState({\r\n            Countries: allCountries\r\n        });\r\n    }\r\n\r\n    _fetchAllCoaches = async () => {\r\n        this.props.client.query({\r\n        query: GET_COACHES,\r\n        variables: { \"token\": localStorage.getItem(\"fprint\") }\r\n        }).then(({data}) => {\r\n            if(data.coachAll){\r\n                let coaches = data.coachAll.map((coach, i) => {\r\n                    return({\r\n                        text: coach.firstName + \" \" + coach.lastName,\r\n                        value: coach.id\r\n                    });\r\n                });\r\n                let urlPaths = data.pages.map((page, i) => {\r\n                    if(page.urlPath !== undefined){\r\n                        if(page.__typename === \"UserUserFormPage\"){\r\n                            return page.urlPath;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n                this.setState({\r\n                    Coaches: coaches,\r\n                    urlPath: urlPaths.filter(function(el) { return el; })\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error\",error);\r\n        })\r\n    }\r\n\r\n    _createUser = () => {\r\n        if(this.state.phone.trim() !== \"\" && this.state.coach.length >= 1  ){\r\n            \r\n            // Get all values and prepare them for API handling\r\n            const values = {\r\n                \"title\": this.state.title,\r\n                \"coach_id\": this.state.coach[0],\r\n                \"first_name\": this.state.firstName,\r\n                \"last_name\": this.state.lastName,\r\n                \"email\": this.state.email,\r\n                \"birthdate\": this.state.birthdate,\r\n                \"telephone\": this.state.phone,\r\n                \"address\": this.state.address,\r\n                \"city\": this.state.city,\r\n                \"postal_code\": this.state.zip,\r\n                \"country\": this.state.country.countryCode,\r\n                \"customer_id\": this.state.customerid\r\n            }\r\n\r\n            let urlPath = this.state.urlPath[0];\r\n\r\n            if(\r\n                urlPath &&\r\n                this.state.coach[0] &&\r\n                this.state.firstName &&\r\n                this.state.lastName\r\n            ){\r\n                this.setState({\r\n                    loading: true,\r\n                    errors: {}\r\n                });\r\n                this.props.update({\r\n                    variables: { \r\n                        \"token\": localStorage.getItem(\"fprint\"),\r\n                        \"urlPath\": urlPath,\r\n                        \"values\": values\r\n                    }\r\n                }).then(({data}) => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if(data.userUserFormPage.result === \"OK\"){\r\n                        this.setState({\r\n                            errors: {},\r\n                            success: true\r\n                        });\r\n                    } else if (data.userUserFormPage.result === \"FAIL\"){\r\n                        console.log(\"Errors\",data.userUserFormPage.errors);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if(error){\r\n                        console.log(error.graphQLErrors.map(x => x.message));\r\n                        let errors = error.graphQLErrors;\r\n\r\n                        let results = {};\r\n                        errors.map((x) => {\r\n                            //let msg = JSON.parse(x.message);\r\n                            console.log(x);\r\n                            if(x.message.includes(\"'telephone'\")){\r\n                                results = {\r\n                                    telephone: true,\r\n                                }\r\n                            }\r\n                            return true;\r\n                        })\r\n\r\n                        console.log(results);\r\n\r\n                        if(results){\r\n                            this.setState({\r\n                                errors: {\r\n                                    ...this.state.errors,\r\n                                    ...results,\r\n                                },\r\n                                loading: false,\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            //console.log(values);\r\n\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    required: true,\r\n                },\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n        console.log(this.state);\r\n\r\n        return(\r\n            <MDBContainer id=\"newcustomer\" className=\"pt-5\">\r\n                <h2 className=\"text-center font-weight-bold\">Create customer</h2>\r\n                <div className=\"text-left mt-4\">\r\n                    <Link to=\"/coach\" onClick={this.props.flushData}>\r\n                        <MDBBtn color=\"red\">\r\n                            <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                        </MDBBtn>\r\n                    </Link>\r\n                </div>\r\n                { this.state.success ? (\r\n                    <div className=\"w-100 h-100 flex-center\">\r\n                        <MDBAlert\r\n                        color=\"success\"\r\n                        className=\"text-center\"\r\n                        >\r\n                            <p>\r\n                            <MDBIcon icon=\"check\" className=\"pr-2\"/>\r\n                            {this.state.firstName + \" \"+ this.state.lastName} wurde erfolgreich erstellt.\r\n                            </p>\r\n                            <Link to=\"/coach\">\r\n                                <MDBBtn\r\n                                color=\"green\"\r\n                                >\r\n                                Zurück zum Dashboard\r\n                                </MDBBtn>\r\n                            </Link>\r\n                        </MDBAlert>\r\n                    </div>\r\n                ) : (\r\n                    <MDBRow className=\"flex-center mt-4 text-center\">\r\n                        { this.state.error &&\r\n                            <MDBCol md=\"7\">\r\n                                <MDBAlert color=\"danger\">\r\n                                    <p className=\"lead\">Sie haben einige Pflichtfelder nicht ausgefüllt.</p>\r\n                                    <p>Bitte füllen Sie mindestens alle Felder, welche \r\n                                    mit <strong>*</strong> gekennzeichnet sind aus.</p>\r\n                                </MDBAlert>\r\n                            </MDBCol>\r\n                        }\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Name</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4 flex-center\">\r\n                            <MDBCol md=\"3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"cus\">Kunden ID</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"customerid\"\r\n                                        value={this.state.customerid}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"cus\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"1\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tit\">Titel</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"tit\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstN\">Vorname<span>*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={this.state.firstName}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"firstN\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastN\">Nachname<span>*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"lastN\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Coach</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <MDBSelect\r\n                            options={this.state.Coaches}\r\n                            className=\"select-coach\"\r\n                            label={<>Coach<span>*</span></>}\r\n                            getValue={this.handleSelectChange}\r\n                            search\r\n                            required\r\n                            />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Kontaktdaten</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"ema\">E-Mail</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleTextChange}\r\n                                    className=\"form-control\"\r\n                                    id=\"ema\"\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <label htmlFor=\"pho\">Telefon Nummer<span>*</span></label>\r\n                            <ReactPhoneInput\r\n                            defaultCountry={'at'}\r\n                            preferredCountries={['at','de','ch']}\r\n                            value={this.state.phone}\r\n                            onChange={this.handlePhoneChange}\r\n                            enableSearchField={true}\r\n                            containerClass=\"mb-3 react-tel-input\"\r\n                            required\r\n                            />\r\n                            <MDBInput\r\n                            label=\"Land aus Telefon Nummer\"\r\n                            filled\r\n                            onChange={(e => this.handlePhoneByCountry(e))}\r\n                            checked={this.state.usePhoneAsCountry}\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox-country-in-phone\"\r\n                            />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Wohnort</h4>\r\n                        </MDBCol>\r\n                        { !this.state.usePhoneAsCountry &&\r\n                            <MDBCol md=\"3\">\r\n                                <MDBSelect\r\n                                options={this.state.Countries}\r\n                                className=\"select-countries\"\r\n                                label=\"Land\"\r\n                                getValue={this.handleCountrySelectChange}\r\n                                search\r\n                                required\r\n                                />\r\n                            </MDBCol>\r\n                        }\r\n                            <MDBCol md=\"2\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ema\">Postleitzahl (PLZ)</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"zip\"\r\n                                        value={this.state.zip}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"plz\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ema\">Stadt</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"city\"\r\n                                        value={this.state.city}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"cit\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ema\">Adresse</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"address\"\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleTextChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"adr\"\r\n                                    />\r\n                                </div>\r\n                            </MDBCol>\r\n                        <MDBCol md=\"12\" className=\"mt-4\">\r\n                            <h4 className=\"text-center font-weight-bold\">Weitere daten</h4>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"pho\">Geburtsdatum</label>\r\n                                <MDBDatePicker \r\n                                value={this.state.birthdate}\r\n                                className=\"date-picker\"\r\n                                getValue={this.getPickerValue}\r\n                                disableFuture={true}\r\n                                format='DD.MM.YYYY'\r\n                                initialFocusedDate=\"01.01.1980\"\r\n                                valueDefault={null}\r\n                                keyboard\r\n                                />\r\n                            </div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                ) }\r\n                <div className=\"text-center\">\r\n                {this.state.errors && this.state.errors.required &&\r\n                    <div>\r\n                    <small className=\"text-danger\">\r\n                        <MDBIcon icon=\"exclamation-triangle\" className=\"text-danger pr-2\" />\r\n                        Pflichtfelder sind noch nicht ausgefüllt.<br/>\r\n                        <span className=\"text-muted\">\r\n                            Hinweis: Pflichtfelder sind mit einem\r\n                            <span className=\"text-danger\"> * </span>\r\n                            versehen.\r\n                        </span>\r\n                    </small>\r\n                    </div>\r\n                }\r\n                {this.state.errors && this.state.errors.telephone &&\r\n                    <div>\r\n                    <small className=\"text-danger\">\r\n                        <MDBIcon icon=\"exclamation-triangle\" className=\"text-danger pr-2\" />\r\n                        Es existiert bereits ein Nutzer mit dieser Telefonnummer.<br/>\r\n                        <span className=\"text-muted\">\r\n                            Hinweis: Der Kunde existiert vermutlich bereits.<br/>\r\n                            Bitte wenden Sie sich an den Supervisor.\r\n                        </span>\r\n                    </small>\r\n                    </div>\r\n                }\r\n                { !this.state.success &&\r\n                    <>\r\n                        { !this.state.loading ? (\r\n                            <MDBBtn\r\n                            color=\"primary\"\r\n                            onClick={() => this._createUser()}\r\n                            >\r\n                            <MDBIcon icon=\"plus\" className=\"pr-2\" />Erstellen\r\n                            </MDBBtn>\r\n                        ) : (\r\n                            <MDBSpinner />\r\n                        ) }\r\n                    </>\r\n                }\r\n                </div>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_FORMS, { name: 'update' }),\r\n)(withApollo(NewCustomer));\r\n\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBAlert,\r\n    MDBProgress,\r\n    MDBSpinner,\r\n} from 'mdbreact';\r\n\r\n//> Connection\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport * as compose from 'lodash.flowright';\r\n\r\n//> Queries\r\n// Get template\r\nconst GET_TEMPLATE = gql`\r\n    query getTemplate($token: String!) {\r\n        pages(token: $token) {\r\n            ... on ReportsReportsPage {\r\n                id\r\n                chapters{\r\n                    __typename\r\n                    ... on Reports_S_ChapterBlock{\r\n                        chapterHeader\r\n                        subChapters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        pages(token: $token) {\r\n            ... on BeautyreportBrFormPage {\r\n                urlPath\r\n                formFields {\r\n                    name\r\n                    fieldType        \r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get user anamnsesis data\r\nconst GET_USERDATA = gql`\r\n    query getAnamneseData_byUid($token: String!, $id: Int!) {\r\n        anLatestByUid(token: $token, uid: $id) {\r\n            id\r\n            date\r\n            formData\r\n            user {\r\n                id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Get document link\r\nconst GET_LINK = gql`\r\n    query getlink($token: String!, $id: Int!) {\r\n        brLatestByUid(token: $token, uid: $id) {\r\n            __typename\r\n            id\r\n            document{\r\n                __typename\r\n                id\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;\r\n// Send\r\nconst SEND_DATA = gql`\r\n    mutation sendbr (\r\n        $token: String!\r\n        $urlPath: String!\r\n        $values: GenericScalar!\r\n    ){\r\n        beautyreportBrFormPage(\r\n            token: $token\r\n            url: $urlPath\r\n            values: $values\r\n        ) {\r\n            result\r\n            errors {\r\n                errors\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//> Eslint settings\r\n// Disable certain things needed for the generation of the report to work\r\n/* eslint-disable array-callback-return, eqeqeq, no-unused-vars, array-callback-return */\r\n\r\nclass GenerateReport extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            template: undefined,\r\n            userdata: undefined,\r\n            result: {},\r\n            loading: false,\r\n            operations: 0,\r\n            userId: undefined,\r\n            error: undefined,\r\n            doclink: null,\r\n            version: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Set page title\r\n        document.title = \"Generate Report\";\r\n\r\n        if(this.props.location){\r\n            if(this.props.location.state){\r\n                if(this.props.location.state.user.id){\r\n                    this.setState({\r\n                        user: this.props.location.state.user,\r\n                        loading: true\r\n                    }, () => this.fetchData());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchTemplate = () => {\r\n        this.props.client.query({\r\n            query: GET_TEMPLATE,\r\n            variables: { \"token\": localStorage.getItem(\"fprint\") }\r\n        }).then(({data}) => {\r\n            if(data.pages !== undefined){\r\n                let template = undefined;\r\n                let urlPath = undefined;\r\n                data.pages.map((page, i) => {\r\n                    if(page.__typename === \"ReportsReportsPage\"){\r\n                        template = data.pages[i];\r\n                    }\r\n                    if(page.__typename === \"BeautyreportBrFormPage\"){\r\n                        urlPath = data.pages[i].urlPath\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({\r\n                    template: template,\r\n                    urlPath: urlPath\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Query error:\",error);\r\n        })\r\n    }\r\n\r\n    fetchUserData = async () => {\r\n        await this.props.client.query({\r\n            query: GET_USERDATA,\r\n            variables: { \"token\": localStorage.getItem(\"fprint\"), \"id\": this.state.user.id }\r\n        }).then(({data}) => {\r\n            if(data.anLatestByUid !== undefined){\r\n                this.setState({\r\n                    userdata: data.anLatestByUid\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Query error:\",error);\r\n        })\r\n    }\r\n\r\n    fetchData = () => {\r\n        // Check if there is anamnesis data\r\n        if(this.state.user.anamneseSet.length >= 1){\r\n            // Fetch data required for creating a report\r\n            this.fetchTemplate();\r\n            this.fetchUserData();\r\n        }\r\n    }\r\n\r\n    _normalizeStatement = (condition, key) => {\r\n        \r\n        // Get user anamnesis data\r\n        let formData = this.state.userdata.formData;\r\n\r\n        //console.log(condition);\r\n        \r\n        // Check if there is a condition\r\n        if(condition.trim() !== \"\"){\r\n            // Parse user data to JS Object\r\n            let data = JSON.parse(formData);\r\n\r\n            // Check if there are multiple conditions\r\n            if(!condition.includes(', ')){\r\n                // There is only one condition\r\n                return this._normalizeCondition(condition, data);\r\n            } else {\r\n                // There are multiple conditions\r\n                let conditions = condition.split(', ');\r\n                // For each condition\r\n                let results = conditions.map((condition, i) => {\r\n                    return this._normalizeCondition(condition, data);\r\n                });\r\n                // Check if one of the conditions returned false\r\n                if(results.includes(false)){\r\n                    // The AND condition block is false\r\n                    return false;\r\n                } else {\r\n                    // The AND condition block is true\r\n                    return true;\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    _getReturnValue = (item, condition) => {\r\n        console.log(item);\r\n        console.log(condition);\r\n        item = item.value;\r\n        console.log(item);\r\n\r\n        // If its a string\r\n        if(typeof item == \"string\"){\r\n            console.log(\"is string\");\r\n            item = item.replace(/\\s/g, '_');\r\n        }\r\n        // If it's an object\r\n        if(typeof item == \"object\"){\r\n            if(item.length > 0){\r\n                item = item[0].replace(/\\s/g, '_');\r\n            }\r\n        }\r\n\r\n        let condNew = condition.replace(/^\\S+/g, item);\r\n\r\n        let condNewPure = condNew.replace(/\"/g,'');\r\n        \r\n        let compareParts = condNewPure.split(' ');\r\n\r\n        if(this.__convertType(compareParts[0]) === null || this.__convertType(compareParts[0]) === undefined){\r\n            return false;\r\n        } else {\r\n            return this.__compare(this.__convertType(compareParts[0]), compareParts[1], compareParts[2]);\r\n        }\r\n    }\r\n\r\n    _normalizeCondition = (condition, data) => {\r\n        // Get the string between quotes\r\n        let preEscapedCondition = condition.match(/\"(.*?)\"/g);\r\n        // If it's not empty\r\n        if(preEscapedCondition !== null){\r\n            // Replace all blanks with an underscore\r\n            let escapedCondition = preEscapedCondition[0].replace(/\\s/g, '_');\r\n            // Replace the string between quotes with the escaped string (with underscores)\r\n            condition = condition.replace(/\"(.*?)\"/g,escapedCondition);\r\n        }\r\n\r\n        let variableName = condition.replace(/ .*/,'').toLowerCase();\r\n        variableName = variableName.replace(/ä/g, 'a');\r\n        variableName = variableName.replace(/ö/g, 'o');\r\n        variableName = variableName.replace(/ü/g, 'u');\r\n        variableName = variableName.replace(/ß/g, 'ss');\r\n\r\n        // Replace the first word with the value of the corresponding word ( age > 50 => 3 > 50 )\r\n        let replacement = this.__convertType(data[variableName]);\r\n\r\n        // Debugging\r\n        //console.log(condition, replacement, variableName);\r\n        \r\n        if(replacement !== undefined){\r\n            if(Array.isArray(replacement)){\r\n                let repl = replacement.map((item, i) => {\r\n                    return this._getReturnValue(item, condition);\r\n                });\r\n                if(repl.includes(true)){\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return this._getReturnValue(replacement, condition);\r\n            }\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    // convertType('null'); => null\r\n    __convertType = (value) => {\r\n        try {\r\n            return (new Function(\"return \" + value + \";\"))(); // eslint-disable-line\r\n        } catch(e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    // compare(5, '<', 10); // true\r\n    __compare = (post, operator, value) => {\r\n        switch (operator) {\r\n            case '>':   return post > parseInt(value);\r\n            case '<':   return post < parseInt(value);\r\n            case '>=':  return post >= parseInt(value);\r\n            case '<=':  return post <= parseInt(value);\r\n            case '==':  return post == value;\r\n            case '!=':  return post != value;\r\n            case '===': return post === value;\r\n            case '!==': return post !== value;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    getLink = () => {\r\n        console.log(\"User ID\",this.props.location.state.user.id);\r\n        this.props.client.query({\r\n            query: GET_LINK,\r\n            variables: { \r\n                \"token\": localStorage.getItem(\"fprint\"),\r\n                \"id\": this.props.location.state.user.id\r\n            }\r\n        }).then(({data}) => {\r\n            if(data){\r\n                if(data.brLatestByUid){\r\n                    this.setState({\r\n                        doclink: \"https://manage.pharmaziegasse.at/\"+data.brLatestByUid.document.link\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Query error:\",error);\r\n        })\r\n    }\r\n\r\n    sendData = (result) => {\r\n        let values = {\r\n            \"uid\": this.state.user.id,\r\n            \"data\": JSON.stringify(result)\r\n        }\r\n        this.props.send({\r\n            variables: { \r\n                \"token\": localStorage.getItem(\"fprint\"),\r\n                \"urlPath\": this.state.urlPath,\r\n                \"values\": values\r\n            }\r\n        }).then(({data}) => {\r\n            if(data.beautyreportBrFormPage.result === \"OK\"){\r\n                this.setState({\r\n                    loading: false,\r\n                    error: undefined\r\n                }, () => this.getLink());\r\n            } else if(data.beautyreportBrFormPage.result === \"FAIL\") {\r\n                this.setState({\r\n                    loading: false,\r\n                    error: data.beautyreportBrFormPage.errors\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            this.setState({\r\n                loading: false,\r\n                error: error\r\n            });\r\n        })\r\n    }\r\n\r\n    _fetchVariables = (text) => {\r\n        // Check if the text has variables\r\n        if(text.includes(\"{{\") && text.includes(\"}}\")){\r\n\r\n            let formData = this.state.userdata.formData;\r\n            let data = JSON.parse(formData);\r\n\r\n            let variables = text.match(/{{(.*?)}}/g);\r\n\r\n            //console.log(data);\r\n\r\n            // Replace the variable with the value\r\n            variables.map((variable, i) => {\r\n                let variableName = variable.replace(/{{|}}/g,'').toLowerCase();\r\n                variableName = variableName.replace(/ä/g, 'a');\r\n                variableName = variableName.replace(/ö/g, 'o');\r\n                variableName = variableName.replace(/ü/g, 'u');\r\n                variableName = variableName.replace(/ß/g, 'ss');\r\n                if(data[variableName]){\r\n                    if(data[variableName].value !== undefined){\r\n                        let dat = data[variableName].value;\r\n                        let result = dat;\r\n                        if(Array.isArray(dat)){\r\n                            let datarr = \"\";\r\n                            dat.map((da, i) => {\r\n                                if(dat.length > 1){\r\n                                    datarr += dat[i];\r\n                                    if(dat.length - 1 !== i){\r\n                                        datarr += \", \";\r\n                                    }\r\n                                } else {\r\n                                    datarr += dat[i];\r\n                                }\r\n                            })\r\n                            result = datarr;\r\n                        }\r\n                        text = text.replace(variable, result);\r\n                    }else {\r\n                        this.setState({\r\n                            version: false,\r\n                            error: true,\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            return text;\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    createReport = () => {\r\n        // Set variables\r\n        let template = this.state.template;\r\n        let result = undefined;\r\n\r\n        // For each chapter\r\n        template.chapters.map((chapter, ckey) => {\r\n            //> Extract useful information from chapter\r\n            // Header\r\n            let chapterHeader = this._fetchVariables(chapter.chapterHeader);\r\n\r\n            // Create header items in object\r\n            if(result){\r\n                result = {\r\n                    ...result,\r\n                    [\"chapter\"+ckey]: {\r\n                        ...result[\"chapter\"+ckey],\r\n                        chapterHeader: chapterHeader\r\n                    }\r\n                }\r\n            } else {\r\n                result = {\r\n                    [\"chapter\"+ckey]: {\r\n                        chapterHeader: chapterHeader\r\n                    }\r\n                }\r\n            }\r\n            \r\n            //console.log(chapterHeader);\r\n\r\n            // For each subchapter\r\n            chapter.subChapters.map((subChapter, skey) => {\r\n\r\n                //> Extract useful information from subchapter\r\n                // Header\r\n                let subChapterHeader = this._fetchVariables(subChapter.value.sub_chapter_header);\r\n\r\n                // Create sub header items in object\r\n                result = {\r\n                    ...result,\r\n                    [\"chapter\"+ckey]: {\r\n                        ...result[\"chapter\"+ckey],\r\n                        [\"subchapter\"+skey]: {\r\n                            ...result[\"chapter\"+ckey][\"subchapter\"+skey],\r\n                            subChapterHeader: subChapterHeader\r\n                        }\r\n                    }\r\n                }\r\n                //console.log(subChapterHeader);\r\n\r\n                // For each paragraph\r\n                subChapter.value.paragraphs.map((paragraph, pkey) => {\r\n\r\n                    //> Extract useful information from paragraph\r\n                    // Statement\r\n                    let statement = paragraph.value.statement;\r\n                    // Text\r\n                    let text = this._fetchVariables(paragraph.value.paragraph);\r\n\r\n                    // Debugging\r\n                    //console.log(statement)\r\n                    \r\n                    if(statement !== \"\"){\r\n                        let statementResult = this._normalizeStatement(statement);\r\n\r\n                        // Debugging\r\n                        //console.log(statementResult);\r\n\r\n                        if(statementResult){\r\n                            // Create paragraph items in object\r\n                            result = {\r\n                                ...result,\r\n                                [\"chapter\"+ckey]: {\r\n                                    ...result[\"chapter\"+ckey],\r\n                                    [\"subchapter\"+skey]: {\r\n                                        ...result[\"chapter\"+ckey][\"subchapter\"+skey],\r\n                                        [\"paragraph\"+pkey]: {\r\n                                            ...result[\"chapter\"+ckey][\"subchapter\"+skey][\"paragraph\"+pkey],\r\n                                            text: text\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = {\r\n                            ...result,\r\n                            [\"chapter\"+ckey]: {\r\n                                ...result[\"chapter\"+ckey],\r\n                                [\"subchapter\"+skey]: {\r\n                                    ...result[\"chapter\"+ckey][\"subchapter\"+skey],\r\n                                    [\"paragraph\"+pkey]: {\r\n                                        ...result[\"chapter\"+ckey][\"subchapter\"+skey][\"paragraph\"+pkey],\r\n                                        text: text\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //console.log(text);\r\n                    // Check if finished\r\n                    if(\r\n                        ckey + 1 === template.chapters.length  && \r\n                        skey + 1 === chapter.subChapters.length && \r\n                        pkey + 1 === subChapter.value.paragraphs.length \r\n                    ){\r\n                        // Finished\r\n                        this.sendData(result);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // Get global state with login information\r\n        const { globalState, location } = this.props;\r\n        //> Route protection\r\n        // Only logged in uses can access this page\r\n        if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n        // If logged in but not coach\r\n        if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n        \r\n        if(!location.state) return <Redirect to=\"/coach\"/>\r\n        \r\n        // Check if the data has been set\r\n        if(\r\n            this.state.template !== undefined && \r\n            this.state.userdata !== undefined && \r\n            this.state.loading\r\n        ){\r\n            if(!this.state.error && this.state.version){\r\n                this.createReport();\r\n            }\r\n        }\r\n\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <MDBContainer className=\"text-center pt-5\">\r\n                <h2 className=\"text-center font-weight-bold\">\r\n                Beautyreport erstellen\r\n                </h2>\r\n                <div className=\"mt-4\">\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\" className=\"text-left\">\r\n                            <Link \r\n                            onClick={this.props.flushData}\r\n                            to={{\r\n                            pathname: '/report',\r\n                            state: {\r\n                                user: location.state.user\r\n                            }\r\n                            }}\r\n                            >\r\n                                <MDBBtn color=\"red\">\r\n                                    <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                                </MDBBtn>\r\n                            </Link>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </div>\r\n                <MDBRow className=\"flex-center mt-4\">\r\n                        <MDBCol md=\"6\">\r\n                        { !this.state.error ? (\r\n                            <MDBCard>\r\n                            { this.state.user && (this.state.user.anamneseSet.length && this.state.version) >= 1 ? (\r\n                                <MDBCardBody>\r\n                                    { this.state.loading ? (\r\n                                        <>\r\n                                            <MDBProgress material preloader />\r\n                                            \r\n                                            <p className=\"lead\">Beautyreport wird erstellt...</p>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            { true === false &&\r\n                                            <>\r\n                                                <MDBAlert color=\"danger\">\r\n                                                    <p>Qualitäts-Kontrolle ausstehend!</p>\r\n                                                    <MDBBtn color=\"danger\" size=\"md\" rounded>\r\n                                                        Jetzt kontrollieren\r\n                                                    </MDBBtn>\r\n                                                </MDBAlert>\r\n                                                <MDBAlert color=\"success\">\r\n                                                    <p><MDBIcon icon=\"check\" className=\"pr-2\"/>Von Christian \r\n                                                    Aichner kontrolliert</p>\r\n                                                </MDBAlert>\r\n                                            </>\r\n                                            }\r\n                                            <MDBAlert color=\"success\" className=\"mb-4\">\r\n                                                <p>\r\n                                                <MDBIcon\r\n                                                icon=\"check\"\r\n                                                className=\"pr-2\"\r\n                                                />\r\n                                                Beautyreport erstellt und gespeichert!\r\n                                                </p>\r\n                                            </MDBAlert>\r\n                                            <p className=\"lead\">Download als</p>\r\n                                            {this.state.doclink ? (\r\n                                                <>\r\n                                                    <a\r\n                                                    href={this.state.doclink}\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    >\r\n                                                    <MDBBtn color=\"primary\">\r\n                                                        <MDBIcon icon=\"file-word\" className=\"pr-2\"/>Word\r\n                                                    </MDBBtn>\r\n                                                    </a>\r\n                                                </>\r\n                                            ) : (\r\n                                                <MDBSpinner />\r\n                                            )}\r\n                                        </>\r\n                                    ) }\r\n                                </MDBCardBody>\r\n                            ) : (\r\n                                <MDBCardBody>\r\n                                    <MDBAlert color=\"info\" className=\"mb-0\">\r\n                                    {this.state.version === false ? (\r\n                                        <>\r\n                                        <p className=\"lead\">Die Anamnesedaten müssen neu gespeichert werden.</p>\r\n                                        <p className=\"mb-3\">Sie verwenden eine neue Version der Beautyreport \r\n                                        Generierung. Da das Datenformat verbessert wurde, muss die Anamnese erneut \r\n                                        gespeichert werden.<br/>\r\n                                        <strong>Änderungen im Anamnesebogen sind nicht notwendig.</strong>\r\n                                        </p>\r\n                                        <Link \r\n                                        to={{\r\n                                        pathname: '/anamnesis',\r\n                                        state: {\r\n                                            user: this.state.user\r\n                                        }\r\n                                        }}\r\n                                        >\r\n                                            <MDBBtn color=\"info\" size=\"lg\" rounded>\r\n                                                Anamnesedaten neu speichern\r\n                                            </MDBBtn>\r\n                                        </Link>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                        <p className=\"lead\">Es wurden keine Anamnesedaten gefunden!</p>\r\n                                        <p className=\"mb-3\">Möglicherweiße wurden die Daten des Anamnese-Gesprächs \r\n                                        noch nicht in Charm übertragen.</p>\r\n                                        <Link \r\n                                        to={{\r\n                                        pathname: '/anamnesis',\r\n                                        state: {\r\n                                            user: this.state.user\r\n                                        }\r\n                                        }}\r\n                                        >\r\n                                            <MDBBtn color=\"info\" size=\"md\" rounded>\r\n                                                Anamnesedaten eintragen\r\n                                            </MDBBtn>\r\n                                        </Link>\r\n                                        </>\r\n                                    )}\r\n                                        \r\n                                    </MDBAlert>\r\n                                </MDBCardBody>\r\n                            )}\r\n                            </MDBCard>\r\n                        ) : (\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    {this.state.error && this.state.error.length >= 1 ? (\r\n                                        <>\r\n                                        {this.state.error.map((error, i) => {\r\n                                            return(\r\n                                                <MDBAlert key={i} color=\"danger\">\r\n                                                    {error.errors[0]}\r\n                                                </MDBAlert>\r\n                                            )\r\n                                        })}\r\n                                        </>\r\n                                    ) : (\r\n                                        <MDBAlert color=\"danger\">\r\n                                            <p>\r\n                                                Ein unerwarteter Fehler ist aufgetreten. Bitte kontaktieren \r\n                                                Sie den Support der Werbeagentur Christian Aichner.\r\n                                            </p>\r\n                                            <p className=\"pt-3\">\r\n                                                <a\r\n                                                href=\"mailto:support@aichner-christian.com\"\r\n                                                >\r\n                                                support@aichner-christian.com\r\n                                                </a>\r\n                                                <br/>\r\n                                                oder\r\n                                                <br/>\r\n                                                +43 681 20502754\r\n                                            </p>\r\n                                        </MDBAlert>\r\n                                    )\r\n                                    }\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        )}\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(SEND_DATA, { name: 'send' }),\r\n)(withApollo(GenerateReport));\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBFormInline,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBSpinner,\r\n} from 'mdbreact';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport gql from 'graphql-tag';\r\n\r\n//> CSS\r\nimport './questionnaire.scss';\r\n\r\n//> Queries\r\n// Get forms\r\nconst GET_FORMS = gql`\r\n  query pages($token: String!) {\r\n      pages(token: $token) {\r\n          ... on QuestionnaireQ3FormPage {\r\n              id\r\n              urlPath\r\n              title\r\n              formFields {\r\n                  name\r\n                  fieldType\r\n                  helpText\r\n                  required\r\n                  choices\r\n                  defaultValue\r\n                  label\r\n              }\r\n          }\r\n      }\r\n  }\r\n`;\r\n// Update data\r\nconst UPDATE_FORMS = gql`\r\n  mutation sendform($token: String!, $values: GenericScalar!) {\r\n      questionnaireQ3FormPage(\r\n          token: $token,\r\n          url: \"/fragebogen-3\",\r\n          values: $values) {\r\n          result\r\n          errors {\r\n              name\r\n              errors\r\n          }\r\n      }\r\n  }\r\n`;\r\n\r\nclass Anamnesis extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      urlPath: undefined,\r\n      errors: [],\r\n      refNames: [],\r\n      data: undefined,\r\n      user: undefined,\r\n      success: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Set page title\r\n    document.title = \"Custom Form\";\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize = async () => {\r\n    // Get the types and names of the anamnesis fields\r\n    this.getAnamneseFields();\r\n  }\r\n\r\n  resetButton = () => {\r\n    // Get the button back to the initial state ready for submit\r\n    if(this.state.success){\r\n      this.setState({\r\n        success: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  getAnamneseFields = () => {\r\n    this.props.client.query({\r\n    query: GET_FORMS,\r\n    variables: { \"token\": localStorage.getItem('fprint') }\r\n    }).then(({data}) => {\r\n      this.setState({\r\n        data\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      this.setState({\r\n        data: false\r\n      }, () => console.error(error));\r\n    });\r\n  }\r\n\r\n  sendData = async () => {\r\n    // Set values that will be set\r\n    // Normalize data\r\n    let rtn = {};\r\n    this.state.data.pages.map((page, i) => {\r\n      if(page.__typename === \"QuestionnaireQ3FormPage\"){\r\n        page.formFields.map((field, key) => {\r\n          if(this.state[field.name]){\r\n            rtn[field.name] = JSON.stringify({\r\n                helpText: field.helpText,\r\n                fieldType: field.fieldType,\r\n                value: this.state[field.name]\r\n            });\r\n          } else {\r\n              rtn[field.name] = undefined\r\n          }\r\n        });\r\n      }\r\n    });\r\n    console.log(rtn);\r\n    \r\n    // Check if the form values have been set\r\n    if(rtn !== null && rtn !== undefined && this.state.urlPath !== undefined){\r\n      // Call graphQL mutation\r\n      await this.props.update({\r\n        variables: {\r\n          \"token\": localStorage.getItem('fprint'),\r\n          \"values\": rtn,\r\n          \"urlpath\": this.state.urlPath\r\n        }\r\n      })\r\n      .then(({data}) => {\r\n        console.log(data);\r\n        if(data){\r\n          if(data.QuestionnaireQ3FormPage){\r\n            let page = data.QuestionnaireQ3FormPage;\r\n            if(page.result === \"OK\"){\r\n              console.log(\"Sent\");\r\n              this.setState({\r\n                success: true,\r\n                errors: [],\r\n              });\r\n              // Remove all error messages\r\n              [].forEach.call(document.querySelectorAll('.alert-error'),function(e){\r\n                e.parentNode.removeChild(e);\r\n              });\r\n            } else if(page.result === \"FAIL\"){\r\n              console.log(\"Error\");\r\n              // Write error messages\r\n              this.setState({\r\n                  success: false,\r\n              }, () => this.handleError(page.errors));\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n          console.error(\"Mutation error:\",error);\r\n      })\r\n    }\r\n  };\r\n\r\n  handleError = (errors) => {\r\n      // Clear all previous errors\r\n      this.state.refNames.map((item, i) => {\r\n        const refNode = this[`${item}_ref`].current;\r\n        //refNode.parentNode.removeChild(refNode);\r\n        let refAlert = refNode.querySelector('.alert');\r\n        if(refAlert !== null){\r\n            refNode.removeChild(refAlert);\r\n        }\r\n        return true;\r\n      });\r\n\r\n      if(errors !== undefined){\r\n        if(errors.length >= 1){\r\n          this[`${errors[0].name}_ref`].current.scrollIntoView();\r\n          errors.map((error, i) => {\r\n              if(error.__typename === \"FormError\"){\r\n                const node = this[`${error.name}_ref`].current;\r\n                let elChild = document.createElement('div');\r\n                elChild.className = 'alert alert-danger alert-error mt-2';\r\n                elChild.innerHTML = `<i class=\"fa fa-angle-up pr-2\"></i>${error.errors[0]}`;\r\n                node.appendChild(elChild);\r\n              }\r\n              return true;\r\n          });\r\n        }\r\n      }\r\n  }\r\n\r\n  _handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }, () => this.resetButton());\r\n  }\r\n\r\n  _handleCheckBoxChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.checked \r\n    }, () => this.resetButton());\r\n  }\r\n\r\n  _handleCheckBoxesChange = (e, name, label) => {\r\n    // Get current active checkboxes\r\n    let current = this.state[name];\r\n    // Check if there currently are active checkboxes\r\n    if(current !== undefined){\r\n      if(current.includes(label)){\r\n        // Remove\r\n        let filtered = current.filter(function(ele){\r\n          // eslint-disable-next-line\r\n          return ele != label;\r\n        });\r\n        // Update state\r\n        this.setState({\r\n          [name]: filtered\r\n        }, () => this.resetButton());\r\n      } else {\r\n        // Add to array\r\n        current.push(label);\r\n        // Update state\r\n        this.setState({\r\n          [name]: current\r\n        }, () => this.resetButton());\r\n      }\r\n    } else {\r\n      // No active checkboxes - we can only add to the state\r\n      let newCB = [label];\r\n      this.setState({\r\n        [name]: newCB\r\n      }, () => this.resetButton());\r\n    }\r\n  }\r\n\r\n  _handleSelectChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    }, () => this.resetButton());\r\n  }\r\n\r\n  _setDefaultValue = (item, i) => {\r\n    if(item.defaultValue !== \"\" && item.defaultValue !== undefined){\r\n      // CHeck if the state is currently empty - to prevent over writing\r\n      if(this.state[item.fieldType] === undefined\r\n      || this.state[item.fieldType] === \"\" \r\n      || this.state[item.fieldType] === null\r\n      ){\r\n        switch(item.fieldType){\r\n          case 'multiselect':\r\n            let multiselect = [];\r\n            if(item.defaultValue.includes(', ')){\r\n              multiselect = item.defaultValue.split(', ');\r\n            } else {\r\n              multiselect = [item.defaultValue]\r\n            }\r\n            if(!this.state[item.name]){\r\n              this.setState({\r\n                  [item.name]: multiselect\r\n              })\r\n            }\r\n            break;\r\n          case 'checkboxes':\r\n            let checkboxes = [];\r\n            if(item.defaultValue.includes(', ')){\r\n              checkboxes = item.defaultValue.split(', ');\r\n            } else {\r\n                checkboxes = [item.defaultValue]\r\n            }\r\n            if(this.state[item.name] === null || this.state[item.name] === undefined){\r\n              this.setState({\r\n                [item.name]: checkboxes\r\n              });\r\n            }\r\n            break;\r\n          case 'checkbox':\r\n            if(!this.state[item.name]){\r\n              if(item.defaultValue){\r\n                this.setState({\r\n                  [item.name]: true\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  [item.name]: false\r\n                });\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            if(!this.state[item.name]){\r\n              this.setState({\r\n                [item.name]: item.defaultValue\r\n              });\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getSelectValues = (select) => {\r\n      var result = [];\r\n      var options = select && select.options;\r\n      var opt;\r\n\r\n      for (var i=0, iLen=options.length; i<iLen; i++) {\r\n          opt = options[i];\r\n\r\n          if (opt.selected) {\r\n          result.push(opt.value || opt.text);\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n\r\n  _handleMultiSelectChange = (e) => {\r\n      this.setState({\r\n          [e.target.name]: this.getSelectValues(e.target)\r\n      }, () => this.resetButton());\r\n  }\r\n\r\n  _handleNumberClick = (name, type) => {\r\n      // Check if state is empty\r\n      if(this.state[name]){\r\n          this.setState({\r\n              [name] : parseInt(this.state[name],10) + parseInt(type,10)\r\n          }, () => this.resetButton());\r\n      } else {\r\n          this.setState({\r\n              [name] : 0 + parseInt(type,10)\r\n          }, () => this.resetButton());\r\n      }\r\n  }\r\n\r\n  printCheckboxes = (item, i) => {\r\n      let arr = item.choices.split(',');\r\n      return arr.map((name, key) => {\r\n          let n = name.trim().toLowerCase().replace(/ /g,'');\r\n          let display = name.trim();\r\n              return(\r\n                  <MDBInput\r\n                  key={key}\r\n                  checked={this.state[item.name] && this.state[item.name].includes(display) ? (true) : (false)}\r\n                  name={n}\r\n                  onChange={(e) => this._handleCheckBoxesChange(e, item.name, display)}\r\n                  label={display}\r\n                  filled\r\n                  type=\"checkbox\"\r\n                  id={\"fromGroupInput\"+i+\"\"+key}\r\n                  />\r\n              );\r\n      });\r\n  }\r\n\r\n  printRadio = (choices, container, required, i) => {\r\n      let arr = choices.split(',');\r\n      return arr.map((name, key) => {\r\n          let n = name.trim().toLowerCase().replace(/ /g,'');\r\n          let display = name.trim();\r\n          return(\r\n              <MDBInput\r\n              onClick={() => this.setState({[container]: display})}\r\n              checked={this.state[container] && this.state[container] === display ? true : false}\r\n              label={display}\r\n              key={key}\r\n              name={n}\r\n              type=\"radio\"\r\n              id={\"radio\"+i+\"\"+key}\r\n              required={required}\r\n              />\r\n          );\r\n      });\r\n  }\r\n\r\n  printOptions = (choices, i) => {\r\n      let arr = choices.split(',');\r\n      return arr.map((name, key) => {\r\n          //let n = name.trim().toLowerCase().replace(/ /g,'');\r\n          let display = name.trim();\r\n          return(\r\n              <option key={key} value={display}>{display}</option>\r\n          );\r\n      });\r\n  }\r\n\r\n  renderFields = () => {\r\n      let data = this.state.data;\r\n\r\n      // Loading\r\n      if (data === undefined) {\r\n          console.log(\"Loading\");\r\n          return (<div className=\"text-center\"><MDBSpinner /></div>);\r\n      }\r\n      // Error\r\n      if (data === false) {\r\n          return (<div>Error!</div>);\r\n      }\r\n\r\n      if(data !== undefined){\r\n          if(data.pages !== undefined){\r\n              // Get key\r\n              let key = undefined;\r\n              data.pages.map((item, i) => {\r\n                  if(item.__typename === \"QuestionnaireQ3FormPage\"){\r\n                      key = i;\r\n                  }\r\n                  return true;\r\n              });\r\n              \r\n              // Check if the FormPage exists\r\n              if(key !== undefined){\r\n                  // Set urlpath (where to send data)\r\n                  if(this.state.urlPath === undefined){\r\n                      this.setState({\r\n                          urlPath: data.pages[key].urlPath\r\n                      });\r\n                  }\r\n\r\n                  let formfields = data.pages[key].formFields;\r\n\r\n                  if(!this.state.formtitle){\r\n                      this.setState({\r\n                          formtitle: data.pages[key].title\r\n                      });\r\n                  }\r\n                  \r\n                  return formfields.map((item, i) => {\r\n                      this[`${item.name}_ref`] = React.createRef();\r\n\r\n                      // Debugging\r\n                      //console.log(item);\r\n\r\n                      // Store the names of all items for refs\r\n                      if(!this.state.refNames.includes(item.name)){\r\n                          this.setState(previousState => ({\r\n                              refNames: [...previousState.refNames, item.name]\r\n                          }));\r\n                      }\r\n\r\n                      this._setDefaultValue(item, i);\r\n                      switch(item.fieldType.toLowerCase()){\r\n                          case \"singleline\":\r\n                              // TEXT Input\r\n                              return(\r\n                                  <div \r\n                                  ref={this[`${item.name}_ref`]}\r\n                                  key={i}\r\n                                  className=\"form-group my-3\"\r\n                                  >\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                      {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <input\r\n                                          type=\"text\"\r\n                                          value={this.state[item.name]}\r\n                                          onChange={this._handleChange}\r\n                                          name={item.name}\r\n                                          className=\"form-control\"\r\n                                          id={\"fromGroupInput\"+i}\r\n                                          required={item.required}\r\n                                      />\r\n                                  </div>\r\n                              );\r\n                          case \"hidden\":\r\n                              // HIDDEN Input\r\n                              return(\r\n                                  <div \r\n                                  ref={this[`${item.name}_ref`]}\r\n                                  key={i}\r\n                                  className=\"form-group my-3 d-none\"\r\n                                  >\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                      {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <input\r\n                                          type=\"text\"\r\n                                          value={this.state[item.name]}\r\n                                          name={item.name}\r\n                                          className=\"form-control\"\r\n                                          id={\"fromGroupInput\"+i}\r\n                                          disabled\r\n                                      />\r\n                                  </div>\r\n                              );\r\n                          case \"number\":\r\n                              // NUMBER Input\r\n                              return(\r\n                                  <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <div\r\n                                      className=\"\r\n                                      def-number-input\r\n                                      number-input\r\n                                      mb-3\"\r\n                                      >\r\n                                          <button\r\n                                          onClick={() => this._handleNumberClick(item.name,-1)}\r\n                                          className=\"minus\">\r\n                                          </button>\r\n                                          <input\r\n                                          name={item.name}\r\n                                          id={\"fromGroupInput\"+i}\r\n                                          value={this.state[item.name]}\r\n                                          onChange={this._handleChange}\r\n                                          type=\"number\"\r\n                                          />\r\n                                          <button\r\n                                          onClick={() => this._handleNumberClick(item.name,1)}\r\n                                          className=\"plus\">\r\n                                          </button>\r\n                                      </div>\r\n                                  </div>\r\n                              );\r\n                          case \"checkbox\":\r\n                              // CHECKBOX Input\r\n                              return(\r\n                                  <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <MDBInput\r\n                                      checked={this.state[item.name]}\r\n                                      name={item.name}\r\n                                      onChange={this._handleCheckBoxChange}\r\n                                      label={item.label && item.label}\r\n                                      filled\r\n                                      type=\"checkbox\"\r\n                                      id={\"fromGroupInput\"+i}\r\n                                      />\r\n                                  </div>\r\n                              );\r\n                          case \"checkboxes\":\r\n                              // CHECKBOXES Input\r\n                              return (\r\n                                  <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                          <MDBFormInline>\r\n                                          {this.printCheckboxes(item, i)}\r\n                                          </MDBFormInline>\r\n                                  </div>\r\n                              );\r\n                          case \"dropdown\":\r\n                              // SELECT Input\r\n                              return (\r\n                                  <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <div>\r\n                                          <select\r\n                                          name={item.name}\r\n                                          selected={this.state[item.name]}\r\n                                          onChange={this._handleSelectChange}\r\n                                          className=\"browser-default custom-select\">\r\n                                          <option>Choose your option</option>\r\n                                          {this.printOptions(item.choices, i)}\r\n                                          </select>\r\n                                      </div>\r\n                                  </div>\r\n                              );\r\n                          case \"multiselect\":\r\n                              // MULTI SELECT Input\r\n                              return (\r\n                                  <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <div>\r\n                                          <select\r\n                                          multiple name={item.name}\r\n                                          selected={this.state[item.name]}\r\n                                          onChange={this._handleMultiSelectChange}\r\n                                          className=\"browser-default custom-select\"\r\n                                          >\r\n                                          <option>Choose your option</option>\r\n                                          {this.printOptions(item.choices, i)}\r\n                                          </select>\r\n                                      </div>\r\n                                  </div>\r\n                              );\r\n                          case \"radio\":\r\n                              // RADIO Input\r\n                              return (\r\n                                  <div ref={this[`${item.name}_ref`]} key={i} className=\"my-3\">\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <MDBFormInline>\r\n                                          {this.printRadio(\r\n                                              item.choices,\r\n                                              item.name,\r\n                                              item.required,\r\n                                              i\r\n                                          )}\r\n                                      </MDBFormInline>\r\n                                  </div>\r\n                              );\r\n                          case \"multiline\":\r\n                              // MULTILINE TEXT Input\r\n                              return (\r\n                                  <div \r\n                                  ref={this[`${item.name}_ref`]}\r\n                                  key={i}\r\n                                  className=\"form-group\"\r\n                                  >\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                          {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <textarea\r\n                                      className=\"form-control\"\r\n                                      value={this.state[item.name]}\r\n                                      onChange={this._handleChange}\r\n                                      name={item.name}\r\n                                      id={\"fromGroupInput\"+i}\r\n                                      rows=\"5\"\r\n                                      required={item.required}\r\n                                      />\r\n                                  </div>\r\n                              );\r\n                          default:\r\n                              return(\r\n                                  <div \r\n                                  ref={this[`${item.name}_ref`]}\r\n                                  key={i}\r\n                                  className=\"form-group\"\r\n                                  >\r\n                                      <label className=\"heading\" htmlFor={\"fromGroupInput\"+i}>\r\n                                      {item.helpText && item.helpText}\r\n                                      </label>\r\n                                      <input\r\n                                          type=\"text\"\r\n                                          value={this.state[item.name]}\r\n                                          onChange={this._handleChange}\r\n                                          name={item.name}\r\n                                          className=\"form-control\"\r\n                                          id={\"fromGroupInput\"+i}\r\n                                          required={item.required}\r\n                                      />\r\n                                  </div>\r\n                              )\r\n                      }\r\n                  });\r\n              }else {\r\n                  return null;\r\n              }\r\n              \r\n          }else {\r\n              return null;  \r\n          }\r\n      }else {\r\n          return null;\r\n      }\r\n  }\r\n\r\n  render() {\r\n    // Get global state with login information\r\n    const { globalState, location } = this.props;\r\n\r\n    //> Route protection\r\n    // Only logged in uses can access this page\r\n    if(!globalState.logged) return <Redirect to=\"/login\"/>\r\n    // If logged in but not coach\r\n    if(globalState.logged && !globalState.coach) return <Redirect to=\"/dashboard\"/> \r\n\r\n    return (\r\n      <MDBContainer id=\"anamnesis\" className=\"text-left pt-5\">\r\n          <h2 className=\"mb-5 text-center\">{this.state.formtitle}</h2>\r\n          <div className=\"text-left mt-4\">\r\n              <Link to=\"/coach\">\r\n                  <MDBBtn color=\"red\">\r\n                      <MDBIcon icon=\"angle-left\" className=\"pr-2\" />Zurück\r\n                  </MDBBtn>\r\n              </Link>\r\n          </div>\r\n          <MDBRow className=\"mb-4\">\r\n              <MDBCol md=\"8\">\r\n                  {this.renderFields()}\r\n              </MDBCol>\r\n          </MDBRow>\r\n          \r\n          {!this.state.success ? (\r\n              <MDBBtn\r\n              color=\"secondary\"\r\n              onClick={this.sendData}\r\n              >\r\n                  <MDBIcon icon=\"save\" className=\"pr-2\" />\r\n                  Speichern\r\n              </MDBBtn>\r\n          ) : (\r\n              <MDBBtn\r\n              color=\"success\"\r\n              disabled\r\n              >\r\n                  <MDBIcon icon=\"check\" className=\"pr-2\" />\r\n                  Gespeichert\r\n              </MDBBtn>\r\n          )}\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(\r\n  UPDATE_FORMS, {name: 'update'}\r\n)(withApollo(Anamnesis));\r\n\r\n/** \r\n* SPDX-License-Identifier: (EUPL-1.2)\r\n* Copyright © 2019 Werbeagentur Christian Aichner\r\n*/\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Link and Redirect from Router\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n    MDBEdgeHeader,\r\n    MDBFreeBird,\r\n    MDBCol,\r\n    MDBRow,\r\n    MDBCardBody,\r\n    MDBBtn,\r\n    MDBAlert,\r\n    MDBIcon,\r\n    MDBSpinner,\r\n} from \"mdbreact\";\r\n\r\n//> Additional libraries\r\n// Phone input\r\nimport ReactPhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nimport * as compose from 'lodash.flowright';\r\n\r\n//> CSS\r\nimport './login.scss';\r\n\r\n//> Images\r\n// Logo\r\nimport logo from '../../../assets/logo.png';\r\n\r\n//> Queries and Mutations\r\n// Login\r\nconst LOGIN_USER = gql`\r\n    mutation tokenAuth($username: String!, $password: String!){\r\n        tokenAuth(username: $username, password: $password) {\r\n            token\r\n        }\r\n    }\r\n`;\r\n// Get user via email\r\nconst USER_BY_EMAIL = gql`\r\n  query(\r\n    $token: String!\r\n    $email: String!\r\n  ) {\r\n    usernameByEmail(\r\n      token: $token,\r\n      email: $email\r\n    )\r\n  }\r\n`;\r\n// Get user via phone\r\nconst USER_BY_PHONE = gql`\r\n  query(\r\n    $token: String!\r\n    $phone: String!\r\n  ) {\r\n    usernameByPhone(\r\n    token: $token,\r\n    phone: $phone\r\n    )\r\n  }\r\n`;\r\n// Reset password\r\nconst RESET_PSW = gql`\r\n  mutation passwordResetActivation($username: String!) {\r\n    passwordResetActivation(username: $username) {\r\n      result\r\n      message\r\n      msgCode\r\n    }\r\n  }\r\n`;\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            phone: \"\",\r\n            password: \"\",\r\n            method: 'email',\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n      // Set page title\r\n      document.title = \"Login\";\r\n\r\n      let method = localStorage.getItem('method');\r\n      if(method){\r\n        this.setState({\r\n          method: method\r\n        });\r\n      }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.type]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        // Prevent page from reloading\r\n        e.preventDefault();\r\n        // Validation\r\n        e.target.className = \"needs-validation was-validated\";\r\n\r\n        if(this.state.method){\r\n          this._getUsernameByMethod(this.state.method);\r\n        } else {\r\n          this._getUsernameByMethod(\"email\");\r\n        }\r\n    }\r\n\r\n    _getUsernameByMethod = async (method) => {\r\n        let variables = {};\r\n        let query = undefined;\r\n        const token = localStorage.getItem('fprint');\r\n\r\n        if(method === 'phone'){\r\n            variables = { \r\n                \"token\": token,\r\n                \"phone\": this.state.phone\r\n            }\r\n            query = USER_BY_PHONE;\r\n        } else {\r\n            variables = {\r\n                \"token\": token,\r\n                \"email\": this.state.email\r\n            }\r\n            query = USER_BY_EMAIL;\r\n        }\r\n\r\n        await this.props.client.query({\r\n            query: query,\r\n            variables: variables\r\n        }).then(({data}) => {\r\n            console.log(data);\r\n            if(method === 'phone'){\r\n                if(data.usernameByPhone !== undefined){\r\n                  this._login(data.usernameByPhone);\r\n                }\r\n            } else {\r\n                if(data.usernameByEmail !== undefined){\r\n                  this._login(data.usernameByEmail);\r\n                }\r\n            }\r\n            \r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                error: true,\r\n                loading: false\r\n            }, () => this.props.handler(false));\r\n        })\r\n    }\r\n\r\n    _login = async (username) => {\r\n        await this.props.mutate({ variables: { \"username\": username, \"password\": this.state.password } })\r\n        .then(({ loading, data }) => {\r\n            if(data !== undefined){\r\n                if(data.tokenAuth !== undefined){\r\n                    if(data.tokenAuth.token !== undefined){\r\n                        localStorage.setItem('fprint',data.tokenAuth.token);\r\n                        // Remove error message, but keep it loading\r\n                        this.setState({\r\n                            error: false,\r\n                        }, () => this.props.handler(true));\r\n                    }\r\n                }\r\n            }\r\n        }).catch((loading, error) => {\r\n            // Username or password is wrong\r\n            this.setState({\r\n                error: true,\r\n                loading: false\r\n            }, () => this.props.handler(false));\r\n        });\r\n    }\r\n\r\n    handlePhoneChange = (value) => {\r\n        if(this.state.method === 'phone'){\r\n            value = value.replace(/\\s/g,'');\r\n            if(this.state.email === \"\"){\r\n                this.setState({\r\n                    phone: value.trim()\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    phone: value.trim(),\r\n                    email: \"\"\r\n                });\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    handleEmailChange = (e) => {\r\n        if(this.state.method === 'email'){\r\n            if(this.state.phone === \"\"){\r\n                this.setState({\r\n                    email: e.target.value\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    email: e.target.value,\r\n                    phone: \"\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    switchMethod = (method) => {\r\n        // Update state and set method\r\n        this.setState({\r\n            method: method\r\n        }, () => localStorage.setItem('method',method));\r\n    }\r\n\r\n    resetPsw = () => {\r\n      let query = undefined;\r\n      let variables = {};\r\n      const token = localStorage.getItem('fprint');\r\n\r\n      if(this.state.method === \"phone\"){\r\n        variables = { \r\n          \"token\": token,\r\n          \"phone\": this.state.phone\r\n        }\r\n        query = USER_BY_PHONE;\r\n      } else {\r\n        variables = {\r\n          \"token\": token,\r\n          \"email\": this.state.email\r\n        }\r\n        query = USER_BY_EMAIL;\r\n      }\r\n\r\n      this.props.client.query({\r\n        query: query,\r\n        variables: variables\r\n      }).then(({data}) => {\r\n        console.log(data);\r\n        if(data){\r\n          let username = data.usernameByEmail;\r\n          this.props.reset({\r\n            variables: {\r\n              username\r\n            }\r\n          }).then(({data}) => {\r\n            if(data){\r\n              if(data.passwordResetActivation.result){\r\n                // Success\r\n                console.log(data.passwordResetActivation.message);\r\n                this.setState({\r\n                  successReset: \"Eine E-Mail wurde an \"+this.state.email+\" gesendet.\",\r\n                  errorReset: false\r\n                });\r\n              } else {\r\n                // Fail\r\n                console.log(data.passwordResetActivation.message);\r\n                this.setState({\r\n                  successReset: false,\r\n                  errorReset: \"Eine E-Mail wurde bereits in den letzten 15 Minuten an \"+\r\n                  this.state.email+\" gesendet.\"\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.warn(error);\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.warn(error);\r\n      })\r\n    }\r\n\r\n    render() {\r\n\r\n        // Get global state with login information\r\n        const { globalState } = this.props;\r\n\r\n        /**\r\n         * Redirect to Dashboard\r\n         * If user is already logged in, redirect to Dashboard\r\n         * This doubles as a neat way to redirect the user directly after login\r\n         */\r\n        if(globalState.logged){\r\n            return <Redirect to=\"/dashboard\"/> \r\n        } \r\n\r\n        return (\r\n        <div id=\"login\">\r\n            <MDBEdgeHeader color=\"secondary-color lighten-3\" />\r\n            <MDBFreeBird>\r\n                <MDBRow>\r\n                    <MDBCol\r\n                    md=\"10\"\r\n                    className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n                    >\r\n                        <MDBCardBody>\r\n                            <MDBRow className=\"flex-center\">\r\n                            {this.state.loading ? (\r\n                                <MDBCol md=\"12\" className=\"py-5 text-center\">\r\n                                    <MDBSpinner big />\r\n                                </MDBCol>\r\n                            ) : (\r\n                                <MDBCol md=\"6\" className=\"text-center\">\r\n                                    {this.state.error &&\r\n                                        <MDBAlert color=\"danger\" className=\"text-center\">\r\n                                            Die eingegebene Kombination existiert nicht.\r\n                                        </MDBAlert>\r\n                                    }\r\n                                    <img src={logo} className=\"img-fluid mb-4\" alt=\"Pharmaziegasse logo\"/>\r\n                                    <form onSubmit={this.handleSubmit} className=\"needs-validation\" noValidate>\r\n                                        <p className=\"h4 text-center mb-5\">Dein individuelles Beauty Programm</p>\r\n                                        {this.state.method === 'email' ? (\r\n                                            <>\r\n                                                <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                                                Deine E-Mail Adresse\r\n                                                </label>\r\n                                                <input\r\n                                                type=\"email\"\r\n                                                id=\"defaultFormLoginEmailEx\"\r\n                                                className=\"form-control\"\r\n                                                value={this.state.email}\r\n                                                onChange={this.handleEmailChange}\r\n                                                required\r\n                                                />\r\n                                                <div className=\"invalid-feedback\">\r\n                                                    Bitte gib deine E-Mail Adresse an.\r\n                                                </div>\r\n                                                <div className=\"text-right\">\r\n                                                    <span\r\n                                                    className=\"blue-text\"\r\n                                                    onClick={() => this.switchMethod('phone')}\r\n                                                    >\r\n                                                    Über Telefonnummer einloggen\r\n                                                    </span>\r\n                                                </div>\r\n                                                \r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <label htmlFor=\"pho\">Telefon Nummer</label>\r\n                                                <ReactPhoneInput\r\n                                                defaultCountry={'at'}\r\n                                                preferredCountries={['at','de','ch']}\r\n                                                value={this.state.phone}\r\n                                                onChange={this.handlePhoneChange}\r\n                                                inputExtraProps={{\r\n                                                    className: 'w-100'\r\n                                                }}\r\n                                                />\r\n                                                <div className=\"text-right\">\r\n                                                    <span\r\n                                                    className=\"blue-text\"\r\n                                                    onClick={() => this.switchMethod('email')}\r\n                                                    >\r\n                                                    Über E-Mail einloggen\r\n                                                    </span>\r\n                                                </div>\r\n                                            </>\r\n                                        ) }\r\n                                        <br />\r\n                                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                                        Dein Passwort\r\n                                        </label>\r\n                                        <input\r\n                                        type=\"password\"\r\n                                        id=\"defaultFormLoginPasswordEx\"\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Bitte gib ein Passwort an.\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <span\r\n                                            className=\"blue-text\"\r\n                                            onClick={this.resetPsw}\r\n                                            >\r\n                                            Passwort vergessen?\r\n                                            </span>\r\n                                        </div>\r\n                                        {this.state.errorReset &&\r\n                                        <MDBAlert color=\"danger\" className=\"text-center\">\r\n                                        <p>{this.state.errorReset}</p>\r\n                                        </MDBAlert>\r\n                                        }\r\n                                        {this.state.successReset &&\r\n                                        <MDBAlert color=\"success\" className=\"text-center\">\r\n                                        <p>{this.state.successReset}</p>\r\n                                        </MDBAlert>\r\n                                        }\r\n                                        <div className=\"text-center mt-4\">\r\n                                            <MDBBtn color=\"success\" type=\"submit\">\r\n                                                <MDBIcon icon=\"angle-right\" className=\"pr-2\" />Einloggen\r\n                                            </MDBBtn>\r\n                                        </div>\r\n                                        <p className=\"text-muted text-center mt-3\">\r\n                                        Noch keinen Zugang? Jetzt einfach <a href=\"https://www.pharmaziegasse.at/?join\">\r\n                                        <strong>ausprobieren</strong>\r\n                                        </a>!\r\n                                        </p>\r\n                                    </form>\r\n                                </MDBCol>\r\n                            )}\r\n                                \r\n                            </MDBRow>\r\n                        </MDBCardBody>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBFreeBird>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst AuthWithMutation = compose(\r\n  graphql(LOGIN_USER),\r\n  graphql(RESET_PSW, { name: 'reset' }),\r\n)(withApollo(Login));\r\n\r\nexport default AuthWithMutation;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// Redirect from Router\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n//> Additional libraries\r\n// Query String for get param fetching\r\nimport qs from 'query-string';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBAlert,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBSpinner,\r\n} from \"mdbreact\";\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport gql from 'graphql-tag';\r\n\r\n//> Queries\r\n// Set password\r\nconst SET_PSW = gql`\r\n  mutation setPassword($username: String!, $aToken: String!, $psw: String!) {\r\n    setPassword(\r\n      activationToken: $aToken,\r\n      password: $psw,\r\n      username: $username\r\n    ) {\r\n      result\r\n      message\r\n      msgCode\r\n    }\r\n  }\r\n`;\r\n// Get username via email\r\nconst GET_USERNAME = gql`\r\n  query getuname($token: String!, $email: String!) {\r\n    usernameByEmail(token: $token, email: $email)\r\n  }\r\n`;\r\n\r\nclass SetPassword extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      passwordRepeat: \"\",\r\n      error: false,\r\n      activationToken: false,\r\n      username: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Get activation token from URL\r\n    const param = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\r\n    const activationToken = param.token;\r\n\r\n    // Get username\r\n    let username = param.user;\r\n\r\n    this.setState({\r\n      activationToken,\r\n      username,\r\n    });\r\n  }\r\n\r\n  submitForm = () => {\r\n    if(this.state.password){\r\n      if(this.state.passwordRepeat){\r\n        if(this.state.password === this.state.passwordRepeat){\r\n          if(this.state.accessToken && this.state.username){\r\n            this.props.set({\r\n              variables: {\r\n                \"atoken\": this.state.accessToken,\r\n                \"password\": this.state.password,\r\n                \"username\": this.state.username\r\n              }\r\n            })\r\n            .then(({data}) => {\r\n              console.log(data);\r\n            })\r\n            .catch(error => {\r\n              console.error(\"Mutation error:\",error);\r\n            })\r\n          } else {\r\n            this.setState({\r\n              error: \"Der Service ist derzeit nicht verfügbar. Bitte versuchen Sie es etwas später.\"\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            error: \"Ihre Passwörter sind abweichend. Bitte überprüfen Sie Ihre Eingabe.\"\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          error: \"Bitte wiederholen Sie Ihr Passwort.\"\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        error: \"Bitte geben Sie ein neues Passwort ein.\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    // Get global state with login information\r\n    const { globalState } = this.props;\r\n\r\n    if(this.state.username === undefined || this.state.activationToken === undefined){\r\n      return <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    return(\r\n      <MDBContainer className=\"py-5\">\r\n        <MDBRow className=\"flex-center\">\r\n          <MDBCol md=\"6\">\r\n            <MDBCard className=\"text-center\">\r\n              <MDBCardBody>\r\n                <h3>Passwort setzen</h3>\r\n                {this.state.error &&\r\n                <MDBAlert color=\"danger\">\r\n                  <p>{this.state.error}</p>\r\n                </MDBAlert>\r\n                }\r\n                <MDBInput \r\n                type=\"password\"\r\n                outline\r\n                label=\"Passwort\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                />\r\n                <MDBInput \r\n                type=\"password\"\r\n                outline\r\n                label=\"Passwort wiederholen\"\r\n                name=\"passwordRepeat\"\r\n                value={this.state.passwordRepeat}\r\n                onChange={this.handleChange}\r\n                />\r\n                <MDBBtn\r\n                color=\"secondary\"\r\n                onClick={this.submitForm}\r\n                >\r\n                Passwort setzen\r\n                </MDBBtn>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(\r\n  SET_PSW, { name: 'set' }\r\n)(withApollo(SetPassword));\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// DOM bindings for React Router\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n//> Components\r\n/**\r\n * Dashboard: Basic Charm front-end for customers\r\n */\r\nimport {\r\n  Dashboard\r\n} from './components/pages/customer';\r\n/**\r\n * ReportRevision: Page for coaches to review beauty reports\r\n */\r\nimport {\r\n  ReportRevision,\r\n  GenerateReport,\r\n  ReportList,\r\n  Anamnesis,\r\n  CoachDashboard,\r\n  NewCustomer,\r\n  Questionnaire,\r\n} from './components/pages/coach';\r\n/**\r\n * Login: Login page\r\n */\r\nimport {\r\n  Login,\r\n  SetPassword,\r\n} from './components/pages';\r\n\r\nclass Routes extends React.Component {\r\n\r\n  // Handle login\r\n  handleLogin = (status) => {\r\n    // Call root component handler\r\n    this.props.handler(status);\r\n  }\r\n\r\n  flushData = () => {\r\n    this.props.flushData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route\r\n        exact\r\n        path='/dashboard'\r\n        component={(props) => <Dashboard globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/login'\r\n        component={(props) => <Login handler = {this.handleLogin} globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/anamnesis'\r\n        component={(props) => <Anamnesis globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/coach'\r\n        component={(props) => <CoachDashboard \r\n        globalState={this.props.globalState} {...props}\r\n        />\r\n        }\r\n\r\n        />\r\n        <Route\r\n        exact\r\n        path='/add'\r\n        component={(props) => <NewCustomer \r\n        globalState={this.props.globalState} {...props}\r\n        flushData={this.flushData}\r\n        />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/report'\r\n        component={(props) => <ReportList globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/report/add'\r\n        component={(props) => <GenerateReport \r\n        globalState={this.props.globalState} {...props} \r\n        flushData={this.flushData}\r\n        />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/report/edit'\r\n        component={(props) => <ReportRevision globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/reset'\r\n        component={(props) => <SetPassword globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route \r\n        exact\r\n        path='/admin'\r\n        component={() => window.location = 'https://manage.pharmaziegasse.at'}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/form/:id'\r\n        component={(props) => <Questionnaire globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route \r\n        exact\r\n        path='/api/graphiql'\r\n        component={() => window.location = 'https://manage.pharmaziegasse.at/api/graphiql'}\r\n        />\r\n        <Route\r\n        exact\r\n        path='/test'\r\n        component={(props) => <Dashboard globalState={this.props.globalState} {...props} />}\r\n        />\r\n        <Route\r\n          render={function () {\r\n            return <Redirect to='/login' />;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// DOM bindings for React Router\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n//> Components\r\n/**\r\n * Footer: Global Footer\r\n */\r\nimport {\r\n  Footer,\r\n} from './components/molecules';\r\nimport {\r\n  ScrollToTop\r\n} from './components/atoms';\r\n// Routes\r\nimport Routes from './Routes';\r\n\r\n//> Backend Connection\r\n// Apollo\r\nimport { graphql, withApollo } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nimport * as compose from 'lodash.flowright';\r\n\r\n//> Queries and Mutations\r\n// Login\r\nconst LOGIN_USER = gql`\r\n  mutation tokenAuth($username: String!, $password: String!){\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n// Verify token\r\nconst VERIFY_TOKEN = gql`\r\n  mutation verify($token: String!) {\r\n    verifyToken(token: $token) {\r\n      payload\r\n    }\r\n  }\r\n`;\r\n// Refresh token\r\nconst REFRESH_TOKEN = gql`\r\n  mutation refresh($token: String!) {\r\n    refreshToken(token: $token) {\r\n      payload\r\n      token\r\n    }\r\n  }\r\n`;\r\n// Get data\r\nconst GET_DATA = gql`\r\n  query ($token: String!) {\r\n    userSelf(token: $token) {\r\n      id\r\n      lastLogin\r\n      email\r\n      isActive\r\n      isStaff\r\n      isCoach\r\n      isCustomer\r\n      title    \r\n      firstName\r\n      lastName\r\n      birthdate\r\n      telephone\r\n      address\r\n      city\r\n      postalCode\r\n      userSet{\r\n        anamneseSet{\r\n          id\r\n        }\r\n        beautyreportSet{\r\n          id\r\n        }\r\n        id\r\n        customerId\r\n        firstName\r\n        lastName\r\n        email\r\n        telephone\r\n      }\r\n      country\r\n      newsletter\r\n      verified\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    logged: false,\r\n    username: undefined,\r\n    coach: undefined,\r\n    loaded: false,\r\n    userdata: {},\r\n    flush: false,\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if(localStorage.getItem('fprint') !== null){\r\n      try {\r\n        // Verify Token on first load\r\n        this._verifyToken();\r\n        // Refresh token every 4 minutes\r\n        setInterval(async () => {\r\n          this._verifyToken();\r\n        }, 180000);\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        loaded: true\r\n      }, () => this._loginAnonymous());\r\n    }\r\n  }\r\n\r\n  _getUserData = () => {\r\n    this.props.client.query({\r\n        query: GET_DATA,\r\n        variables: { \"token\": localStorage.getItem(\"fprint\") }\r\n    }).then(({data}) => {\r\n        if(data.userSelf !== undefined){\r\n          this.setState({\r\n            userdata: data.userSelf,\r\n            coach: data.userSelf.isCoach,\r\n            loaded: true\r\n          });\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error\",error);\r\n    })\r\n  }\r\n\r\n  _loginAnonymous = async () => {\r\n    await this.props.login({ variables: { \"username\": \"simon\", \"password\": \"admin\" } })\r\n    .then(({ loading, data }) => {\r\n      if(data){\r\n        if(data.tokenAuth){\r\n          if(data.tokenAuth.token){\r\n            localStorage.setItem('fprint', data.tokenAuth.token);\r\n          }\r\n        }\r\n      }\r\n    }).catch((loading, error) => {\r\n      // Username or password is wrong\r\n      this.handler(false);\r\n    });\r\n  };\r\n\r\n  _verifyToken = () => {\r\n    this.props.verify({\r\n      variables: { \"token\": localStorage.getItem('fprint') }\r\n    })\r\n    .then(({data}) => {\r\n        if(data){\r\n          if(data.verifyToken){\r\n            if(data.verifyToken.payload.username !== \"simon\"){\r\n              this._isLogged(\r\n                data.verifyToken.payload.exp,\r\n                data.verifyToken.payload.origIat,\r\n                data.verifyToken.payload.username\r\n              );\r\n            } else {\r\n              // Is anonymous user\r\n              this.setState({\r\n                logged: false,\r\n                username: undefined,\r\n                loaded: true,\r\n              });\r\n            }\r\n          } else {\r\n            this._notLogged();\r\n          }\r\n        } else {\r\n          this._notLogged();\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Mutation error:\",error);\r\n    })\r\n  }\r\n\r\n  _notLogged = () => {\r\n    this.setState({\r\n      logged: false,\r\n      username: undefined,\r\n      loaded: true\r\n    });\r\n  }\r\n\r\n  _setLogged = (uname) => {\r\n    this.setState({\r\n      logged: true,\r\n      username: uname,\r\n    }, () => this._getUserData());\r\n  }\r\n\r\n  _isLogged = (exp, orig, uname) => {\r\n    /**\r\n     * Generate current timestamp\r\n     * Ref: https://flaviocopes.com/how-to-get-timestamp-javascript/\r\n     */\r\n    let currentTS = ~~(Date.now() / 1000);\r\n    // Check if the token is still valid\r\n    if(currentTS > exp){\r\n      console.log(\"Token has expired. User should be logged out.\");\r\n      this._notLogged();\r\n    } else {\r\n      // Only if anything has changed, update the data\r\n      if(this.state.logged !== true){\r\n        if(this.state.username !== uname){\r\n          this._setLogged(uname);\r\n        }\r\n      }\r\n      this._refeshToken();\r\n    }\r\n  }\r\n\r\n  _refeshToken = () => {\r\n    this.props.refresh({\r\n      variables: { \"token\": localStorage.getItem('fprint') }\r\n    })\r\n    .then(({data}) => {\r\n        if(data !== undefined){\r\n          localStorage.setItem('fprint', data.refreshToken.token);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Mutation error:\",error);\r\n    })\r\n  }\r\n\r\n  handler = (logged) => {\r\n    if(logged){\r\n      this._verifyToken();\r\n    }\r\n  }\r\n\r\n  flushData = () => {\r\n    this.setState({\r\n      flush: !this.state.flush\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Updated\", this.state);\r\n    return (\r\n      <Router>\r\n        <ScrollToTop>\r\n          <div className=\"flyout\">\r\n            <main>\r\n              {this.state.loaded &&\r\n              <Routes \r\n              handler={this.handler}\r\n              globalState={this.state}\r\n              flushData={this.flushData}\r\n              />\r\n              }\r\n            </main>\r\n            <Footer globalState={this.state} />\r\n          </div>\r\n        </ScrollToTop>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(VERIFY_TOKEN, { name: 'verify' }),\r\n  graphql(REFRESH_TOKEN, { name: 'refresh' }),\r\n  graphql(LOGIN_USER, {name: 'login'}),\r\n)(withApollo(App));\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from 'react';\r\n// This serves as an entry point to the DOM and server renderers for React\r\nimport ReactDOM from 'react-dom';\r\n\r\n//> Font Awesome\r\n// Font Awesome is an awesome icon library\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n//> Connect to backend\r\n// Apollo\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { InMemoryCache, IntrospectionFragmentMatcher } from \"apollo-cache-inmemory\";\r\n\r\n//> Bootstrap\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n//> CSS\r\n// Root SCSS file\r\nimport './index.scss';\r\n\r\n//> Components\r\n// Root component\r\nimport App from './App';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Base url\r\nexport const APIHost = 'https://manage.pharmaziegasse.at';\r\n\r\n// Cache setup\r\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\r\n  introspectionQueryResultData: {\r\n    __schema: {\r\n      types: [], // no types provided - works like a charm.ing\r\n    },\r\n  },\r\n});\r\nconst cache = new InMemoryCache({ fragmentMatcher });\r\n\r\n// Create api url from base url\r\nconst APILink = APIHost+\"/api/graphql\";\r\n\r\nconst LINK:HttpLink = new HttpLink({\r\n  uri: APILink,\r\n  headers: {\r\n    authorization:\r\n      localStorage.getItem('fprint')\r\n  }\r\n});\r\n\r\n// Apollo Client setup\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link: LINK,\r\n});\r\n\r\n// Render the root component to <div id=\"root\"></div>\r\nReactDOM.render( \r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n"],"sourceRoot":""}